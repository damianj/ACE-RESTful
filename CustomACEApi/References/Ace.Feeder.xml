<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ace.Feeder</name>
    </assembly>
    <members>
        <member name="T:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor">
            <summary>
            Editor class for the AnyFeeder object
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.SelectedObject">
            <summary>
            Gets or sets the object being edited (typically, an AceObject).
            </summary>
            <value> the selected object</value>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.#ctor(Ace.Core.Client.IAceClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor"/> class.
            </summary>
            <param name="client">The client associated with the control.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.Instance_LockStatusChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the LockStatusChanged event of the AceServer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.AccessLevelChanged(System.Object,Ace.Core.Server.Access.AccessLevelChangeEventArgs)">
            <summary>
            Override this method to change the state of visual components based on access level changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HelpRequested"></see> event.
            </summary>
            <param name="hevent">A <see cref="T:System.Windows.Forms.HelpEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.UpdateControlLockDisplayState">
            <summary>
            Updates the display state of the controls for lock mode.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.UnlockEditorControls">
            <summary>
            Disables the different controls of the editor.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.LockEditorControls">
            <summary>
            Disables the different controls of the editor.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.UpdateEditorLockCommands">
            <summary>
            Enable or disable buttons depending on the fact the device is busy
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.InitializeDisplay">
            <summary>
            Initializes the display.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.UpdateComPortBackgroundColor">
            <summary>
            Updates the color of the COM Port background.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.UpdateCOMPortList">
            <summary>
            Gets the COM ports present on the PC and update the Selection comboBox list
            </summary>
            <returns>String array containing a list of available COM ports (Update is done internally but this list may be useful)</returns>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.UpdateStatusDisplay">
            <summary>
            Updates the status display.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.updateModifiedPropertyDelegate">
            <summary>
            delegate used to invoke property update if required
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.UpdateModifiedProperty(System.String)">
            <summary>
            Updates the modified property.
            </summary>
            <param name="modifiedPropertyName">Name of the modified property.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.AnyFeederEditor_Load(System.Object,System.EventArgs)">
            <summary>
            Actions performed after the AnyFeeder Editor is loaded.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.numericUpDown_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Actions performed after a numeric up/down control is modified
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.comboBoxSelectComPort_Click(System.Object,System.EventArgs)">
            <summary>
            Actions performed when clicking on the COM port selection comboBox
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.comboBoxSelectComPort_SelectedValueChanged(System.Object,System.EventArgs)">
            <summary>
            Actions performed when a new COM port is selected
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.buttonControlItem_Click(System.Object,System.EventArgs)">
            <summary>
            Actions performed when clicking one of the control buttons.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.dynamicAbortButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the status button
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.remoteHandler_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the remoteHandler control. This can be an error code or a parameter value
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.transformControlOffsetFromParent_Validated(System.Object,System.EventArgs)">
            <summary>
            Handles the Validated event of the transformControlOffsetFromParent control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.checkBox3DVisible_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CheckedChanged event of the checkBox3DVisible control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.comboBoxModelType_SelectedValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedValueChanged event of the comboBoxModelType control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.buttonSelectParent_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonSelectParent control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl">
            <summary>
            Motion sequences control for AnyFeeder
            </summary>
        </member>
        <member name="E:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.MotionSequenceChanged">
            <summary>
            MotionSequenceChanged event
            </summary>
        </member>
        <member name="E:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.MotionSequenceOperationChanged">
            <summary>
            MotionSequenceOperationChanged event
            </summary>
        </member>
        <member name="E:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.UpdateSequencesRunStatus">
            <summary>
            Update the sequences run status event
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.Client">
            <summary>
            Get AceClient object
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.AnyFeeder">
            <summary>
            Get AnyFeeder object
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.EnablePanelSequenceList">
            <summary>
            Enable/Disable panel sequence list
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.SelectedMotionSequence">
            <summary>
            Selected motion sequence index
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.#ctor(Ace.Core.Client.IAceClient,Ace.Feeder.Server.AnyFeeder.IAnyFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl"/> class.
            </summary>
            <param name="client">The client associated with the control.</param>
            <param name="anyFeeder">The anyFeeder object.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.InitializeDisplay">
            <summary>
            Initialize all UI Controls
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.buttonMotionSequence_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonMotionSequence* controls.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.listBoxMotionSequences_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the listBoxMotionSequences control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.listBoxSequenceOperations_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the listBoxSequenceOperations control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.comboBoxSequenceOperation_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the comboBoxSequenceOperation control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.numericUpDownSequenceOperationParameter_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the numericUpDownSequenceOperationParameter* controls.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.numericUpDownCommandIndex_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the numericUpDownCommandIndex control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.listBoxSequenceOperationsAvailable_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDoubleClick event of the listBoxSequenceOperationsAvailable control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.UpdateSequenceDisplay">
            <summary>
            Updates the sequence display.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.UpdateOperationButtons">
            <summary>
            Updates the status of the operation buttons.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.RunSelectedSequence">
            <summary>
            Runs the selected sequence.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.CreateNewSequence">
            <summary>
            Creates the new sequence.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.DeleteSelectedSequence">
            <summary>
            Deletes the selected sequence.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.RemoveSelectedSequenceOperation">
            <summary>
            Removes the selected sequence operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.MoveSelectedOperation(System.Boolean)">
            <summary>
            Moves the selected operation.
            </summary>
            <param name="up">if set to <c>true</c> the direction is up.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.AddSelectedSequenceOperation">
            <summary>
            Adds the selected sequence operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.UpdateSelectedSequence">
            <summary>
            Updates the display with the selected sequence.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.UpdateSelectedSequenceOperation">
            <summary>
            Updates the display for the currently selected sequence operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.UpdateOperationInList(Ace.Feeder.Server.AnyFeeder.IAnyFeederOperation)">
            <summary>
            Updates the operation in list.
            </summary>
            <param name="selectedOperation">The selected operation.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.UpdateSequenceInList(Ace.Feeder.Server.AnyFeeder.IAnyFeederSequence)">
            <summary>
            Updates the sequence in list.
            </summary>
            <param name="sequence">The sequence.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.UpdateEditorLockCommands">
            <summary>
            Enable or disable buttons depending on the fact the device is busy
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.LockEditorControls">
            <summary>
            Disables the different controls of the editor.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.UnlockEditorControls">
            <summary>
            Enables the different controls of the editor.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.remoteHandler_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the remoteHandler control. This can be an error code or a parameter value
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.UpdateStatusDisplay">
            <summary>
            Updates the status display.
            </summary>
        </member>
        <member name="F:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederMotionSequencesControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.AnyFeeder.AnyFeederSim3d">
            <summary>
            The 3D object drawing the AnyFeeder in the simulation
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.AnyFeeder.AnyFeederSim3d.ModelDirectory">
            <summary>
            Gets the directory all models are located.
            </summary>
            <value>
            The model directory.
            </value>		
        </member>
        <member name="P:Ace.Feeder.Client.AnyFeeder.AnyFeederSim3d.FileNames">
            <summary>
            The name of the file associated with the simulation object
            </summary>
            <value></value>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederSim3d.#ctor(Ace.Core.Client.IAceClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.AnyFeeder.AnyFeederSim3d"/> class.
            </summary>
            <param name="client">The AceClient associated with the display.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederSim3d.CreateOperations">
            <summary>
            Creates any operations associated with the simulation object.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.AnyFeeder.AnyFeederRecipeComponentControl">
            <summary>
            Editor control for the vision tool recipe component
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederRecipeComponentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.AnyFeeder.AnyFeederRecipeComponentControl"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederRecipeComponentControl.#ctor(Ace.Core.Client.IAceClient,Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeConfiguration,Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.AnyFeeder.AnyFeederRecipeComponentControl" /> class.
            </summary>
            <param name="client">The client.</param>
            <param name="configuration">The configuration.</param>
            <param name="component">The component.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederRecipeComponentControl.numericUpDown_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Actions performed after a numeric up/down control is modified
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ace.Feeder.Client.AnyFeeder.AnyFeederRecipeComponentControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederRecipeComponentControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Feeder.Client.AnyFeeder.AnyFeederRecipeComponentControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl">
            <summary>
            Motion sequences control for Flexibowl
            </summary>
        </member>
        <member name="E:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.MotionSequencesChanged">
            <summary>
            MotionSequencesChanged event
            </summary>
        </member>
        <member name="E:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.MotionSequenceOperationChanged">
            <summary>
            MotionSequenceOperationChanged event
            </summary>
        </member>
        <member name="E:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.UpdateSequencesRunStatus">
            <summary>
            Update the sequences run status event
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.Client">
            <summary>
            Get AceClient object
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.Feeder">
            <summary>
            Get FlexibowlFeeder object
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.EnablePanelSequenceList">
            <summary>
            Enable/Disable panel sequence list
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.SelectedMotionSequence">
            <summary>
            Selected motion sequence index
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.#ctor(Ace.Core.Client.IAceClient,Ace.Feeder.Server.Flexibowl.IFlexibowlFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl"/> class.
            </summary>
            <param name="client">The client associated with the control.</param>
            <param name="flexibowlFeeder">The anyFeeder object.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.numericUpDownCommandIndex_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the numericUpDownCommandIndex control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.buttonMotionSequence_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonMotionSequence* controls.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.listBoxMotionSequences_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the listBoxMotionSequences control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.listBoxSequenceOperations_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the listBoxSequenceOperations control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.listBoxSequenceOperationsAvailable_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDoubleClick event of the listBoxSequenceOperationsAvailable control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.InitializeDisplay">
            <summary>
            Initialize all UI Controls
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.UpdateSequenceDisplay">
            <summary>
            Updates the sequence display.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.RunSelectedSequence">
            <summary>
            Runs the selected sequence.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.CreateNewSequence">
            <summary>
            Creates the new sequence.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.DeleteSelectedSequence">
            <summary>
            Deletes the selected sequence.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.RemoveSelectedSequenceOperation">
            <summary>
            Removes the selected sequence operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.MoveSelectedOperation(System.Boolean)">
            <summary>
            Moves the selected operation.
            </summary>
            <param name="up">if set to <c>true</c> the direction is up.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.UpdateOperationButtons">
            <summary>
            Updates the status of the operation buttons.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.AddSelectedSequenceOperation">
            <summary>
            Adds the selected sequence operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.UpdateSelectedSequence">
            <summary>
            Updates the display with the selected sequence.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.UpdateSelectedSequenceOperation">
            <summary>
            Updates the display for the currently selected sequence operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.UpdateSequenceInList(Ace.Feeder.Server.Flexibowl.IFlexibowlFeederSequence)">
            <summary>
            Updates the sequence in list.
            </summary>
            <param name="sequence">The sequence.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.UpdateEditorLockCommands">
            <summary>
            Enable or disable buttons depending on the fact the device is busy
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.LockEditorControls">
            <summary>
            Disables the different controls of the editor.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.UnlockEditorControls">
            <summary>
            Enables the different controls of the editor.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.remoteHandler_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the remoteHandler control. This can be an error code or a parameter value
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.UpdateStatusDisplay">
            <summary>
            Updates the status display.
            </summary>
        </member>
        <member name="F:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederMotionSequencesControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.Flexibowl.FlexibowlFeederRecipeComponentControl">
            <summary>
            Editor control for the vision tool recipe component
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederRecipeComponentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.Flexibowl.FlexibowlFeederRecipeComponentControl"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederRecipeComponentControl.#ctor(Ace.Core.Client.IAceClient,Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeConfiguration,Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.Flexibowl.FlexibowlFeederRecipeComponentControl" /> class.
            </summary>
            <param name="client">The client.</param>
            <param name="configuration">The configuration.</param>
            <param name="component">The component.</param>
        </member>
        <member name="F:Ace.Feeder.Client.Flexibowl.FlexibowlFeederRecipeComponentControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederRecipeComponentControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederRecipeComponentControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.Flexibowl.FlexibowlFeederSim3d">
            <summary>
            The 3D object drawing the Flexibowl in the simulation
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.Flexibowl.FlexibowlFeederSim3d.ModelDirectory">
            <summary>
            Gets the directory all models are located.
            </summary>
            <value>
            The model directory.
            </value>		
        </member>
        <member name="P:Ace.Feeder.Client.Flexibowl.FlexibowlFeederSim3d.FileNames">
            <summary>
            The name of the file associated with the simulation object
            </summary>
            <value></value>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederSim3d.#ctor(Ace.Core.Client.IAceClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.Flexibowl.FlexibowlFeederSim3d"/> class.
            </summary>
            <param name="client">The AceClient associated with the display.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederSim3d.CreateOperations">
            <summary>
            Creates any operations associated with the simulation object.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor">
            <summary>
            Editor class for the flexibowl feeder object
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.SelectedObject">
            <summary>
            Gets or sets the object being edited (typically, an AceObject).
            </summary>
            <value> the selected object</value>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.#ctor(Ace.Core.Client.IAceClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor"/> class.
            </summary>
            <param name="client">The client associated with the control.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.Instance_LockStatusChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the LockStatusChanged event of the AceServer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.AccessLevelChanged(System.Object,Ace.Core.Server.Access.AccessLevelChangeEventArgs)">
            <summary>
            Override this method to change the state of visual components based on access level changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HelpRequested"></see> event.
            </summary>
            <param name="hevent">A <see cref="T:System.Windows.Forms.HelpEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.UpdateControlLockDisplayState">
            <summary>
            Updates the display state of the controls for lock mode.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.UnlockEditorControls">
            <summary>
            Disables the different controls of the editor.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.LockEditorControls">
            <summary>
            Disables the different controls of the editor.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.UpdateEditorLockCommands">
            <summary>
            Enable or disable buttons depending on the fact the device is busy
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.InitializeDisplay">
            <summary>
            Initializes the display.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.UpdateSequenceDisplay">
            <summary>
            Updates the sequence display.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.UpdateGeneralProperties">
            <summary>
            Updates the general properties.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.SetNumericUpDown(System.Windows.Forms.NumericUpDown,System.Int32)">
            <summary>
            Sets the numeric up down.
            </summary>
            <param name="numericUpDown">The numeric up down.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.UpdateStatusDisplay">
            <summary>
            Updates the status display.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.updateModifiedPropertyDelegate">
            <summary>
            delegate used to invoke property update if required
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.UpdateModifiedProperty(System.String)">
            <summary>
            Updates the modified property.
            </summary>
            <param name="modifiedPropertyName">Name of the modified property.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.AnyFeederEditor_Load(System.Object,System.EventArgs)">
            <summary>
            Actions performed after the AnyFeeder Editor is loaded.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.buttonControlItem_Click(System.Object,System.EventArgs)">
            <summary>
            Actions performed when clicking one of the control buttons.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.remoteHandler_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the remoteHandler control. This can be an error code or a parameter value
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Feeder.Client.Flexibowl.FlexibowlFeederEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationStatusControl">
            <summary>
            Status display for a feeder 
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationStatusControl.#ctor(Ace.Core.Client.IAceClient,Ace.Feeder.Server.IFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationStatusControl"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationStatusControl.InitializeDisplay">
            <summary>
            Initializes the display.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationStatusControl.timerScan_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the timerScan control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationStatusControl.buttonPartProcessedOutput_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonPartProcessedOutput control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationStatusControl.buttonFeedSequence_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonFeedSequence control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationStatusControl.EditorFeedSequence">
            <summary>
            Performs the editor feeding sequence.
            IOFeeder is started, Feeding is performed and task is then stopped.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationStatusControl.UpdateSignalsPictureBox(System.Windows.Forms.Control,System.Int32[])">
            <summary>
            Updates the signals picture box from the corresponding signals states.
            </summary>
            <param name="control">The control.</param>
            <param name="signals">The signals.</param>
        </member>
        <member name="F:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationStatusControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationStatusControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationStatusControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl">
            <summary>
            User control for editing feeder properties
            </summary>
        </member>
        <member name="F:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.aceClient">
            <summary>
            The client associated with the control
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.Client">
            <summary>
            gets or sets the client associated with the control
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.TextBoxController">
            <summary>
            Gets the text box 'controller'.
            </summary>
            <value>The text box 'controller'.</value>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.TextBoxFeederReadyInput">
            <summary>
            Gets the text box 'feeder ready input'.
            </summary>
            <value>The text box 'feeder ready input'.</value>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.TextBoxPartProcessedOutput">
            <summary>
            Gets the text box 'part processed output'.
            </summary>
            <value>The text box 'part processed output'.</value>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.TextBoxHandshakeInput">
            <summary>
            Gets the text box 'handshake input'.
            </summary>
            <value>The text box 'handshake input'.</value>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.TextBoxCustomProgram">
            <summary>
            Gets the text box 'custom program'.
            </summary>
            <value>The text box 'custom program'.</value>
        </member>
        <member name="F:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.remoteHandler">
            <summary>
            The remote event handler to detect a change on IOFeeder
            </summary>
        </member>
        <member name="F:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.selectedObject">
            <summary>
            The feeder device being edited by the current control
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.SelectedObject">
            <summary>
            Gets or sets the selected device.
            </summary>
            <value>The selected device.</value>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.IOFeeder">
            <summary>
            Gets the IOFeeder being edited.
            </summary>
            <value>The AnyFeeder.</value>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.CheckCustomProgramStatus">
            <summary>
            Checks the status of the custom program.
            </summary>
            <returns>Is the program OK or is there a configuration error</returns>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.CheckCustomProgramStatus(System.Windows.Forms.CheckBox,System.Windows.Forms.TextBox)">
            <summary>
            Checks the custom program status and update the background color of the text box as needed.
            </summary>
            <param name="checkBox">The check box.</param>
            <param name="textBox">The text box.</param>
            <returns>Is the custom program defined correctly</returns>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.InitializeDisplay">
            <summary>
            Initializes the display.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.UdpateControlStatus">
            <summary>
            Updates the control status.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.UpdateControllerBackgroundColor">
            <summary>
            Updates the color of the controller background.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.UpdateControlLockDisplayState">
            <summary>
            Updates the display state of the controls for lock mode.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.checkBoxUseHandshakeInput_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CheckedChanged event of the checkBoxUseHandshakeInput control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.buttonSelectController_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonSelectController control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.textBoxFeederReady_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Handles the Validating event of the textBoxFeederReady control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.textBoxFeederReady_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the textBoxFeederReady control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.textBoxPartProcessedOutput_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Handles the Validating event of the textBoxPartProcessedOutput control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.textBoxPartProcessedOutput_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the textBoxPartProcessedOutput control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.textBoxHandshakeInput_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Handles the Validating event of the textBoxHandshakeInput control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.textBoxHandshakeInput_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the textBoxHandshakeInput control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.timerScan_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the timerScan control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.UpdatePartProcessedButton">
            <summary>
            Updates the part processed button.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.UpdateFeederReadyDisplay">
            <summary>
            Updates the Feeder ready display.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.UpdateHandshakeInputDisplay">
            <summary>
            Updates the handshake input display.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.pictureBoxPartProcessedOutput_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonPartProcessedOutput control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.checkBoxUseCustomProgram_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CheckedChanged event of the checkBoxUseCustomProgram control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.textBoxCustomProgram_Validated(System.Object,System.EventArgs)">
            <summary>
            Handles the Validated event of the textBoxCustomProgram control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.buttonSelectCustomProgram_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonSelectCustomProgram control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.GetDefaultProgram(Ace.Core.Server.IAceServer)">
            <summary>
            Gets the default program performing the IOFeeder operation.
            </summary>
            <param name="server">The server.</param>
            <returns>The program object</returns>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.Instance_LockStatusChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the LockStatusChanged event of the AceServer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.FeederConfigurationEditor_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the FeederConfigurationEditor control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.remoteHandler_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the remoteHandler control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.UpdateSignalsPictureBox(System.Windows.Forms.Control,System.Int32[])">
            <summary>
            Updates the signals picture box from the corresponding signals states.
            </summary>
            <param name="control">The control.</param>
            <param name="signals">The signals.</param>
        </member>
        <member name="F:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederConfigurationControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.IOFeeder.IOFeederEditor">
            <summary>
            The default editor for an IOFeeder object
            </summary>
        </member>
        <member name="F:Ace.Feeder.Client.IOFeeder.IOFeederEditor.dynamicFeedButton">
            <summary>
            Start Feeding button
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederEditor.DynamicFeedButton">
            <summary>
            Gets flag button displaying IOFeeder status.
            </summary>
        </member>
        <member name="F:Ace.Feeder.Client.IOFeeder.IOFeederEditor.dynamicAbortButton">
            <summary>
            Abort feeding button.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederEditor.DynamicAbortButton">
            <summary>
            Gets flag button displaying IOFeeder status.
            </summary>
        </member>
        <member name="F:Ace.Feeder.Client.IOFeeder.IOFeederEditor.remoteHandler">
            <summary>
            The remote event handler to detect a change on IOFeeder
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.#ctor(Ace.Core.Client.IAceClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.IOFeeder.IOFeederEditor"/> class.
            </summary>
            <param name="client">The client associated with the control.</param>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederEditor.IOFeeder">
            <summary>
            Gets the IOFeeder being edited.
            </summary>
            <value>The IOFeeder.</value>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederEditor.SelectedObject">
            <summary>
            Gets or sets the object being edited (typically, an AceObject).
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.UpdateControlLockDisplayState">
            <summary>
            Updates the display state of the controls for lock mode.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.InitializeDisplay">
            <summary>
            Initializes the display.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.IOFeeder.IOFeederEditor.updateModifiedPropertyDelegate">
            <summary>
            delegate used to invoke property update if required
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.UpdateModifiedProperty(System.String)">
            <summary>
            Updates the modified property.
            </summary>
            <param name="modifiedPropertyName">Name of the modified property.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.UpdateStatusDisplay">
            <summary>
            Updates the status flag depending on AnyFeeder error state.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.UpdateToolStripButtons">
            <summary>
            Updates the abort button depending on IOFeeder status.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.UpdateEditorLockCommands">
            <summary>
            Enable or disable buttons depending on the fact a command is running or not.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.Instance_LockStatusChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the LockStatusChanged event of the AceServer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.AccessLevelChanged(System.Object,Ace.Core.Server.Access.AccessLevelChangeEventArgs)">
            <summary>
            Override this method to change the state of visual components based on access level changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.IOFeederEditor_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the IOFeederEditor control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.dynamicFeedButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the Feed button
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.EditorFeedSequence">
            <summary>
            Performs the editor feeding sequence.
            IOFeeder is started, Feeding is performed and task is then stopped.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.dynamicAbortButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a click on the Abort button
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.remoteHandler_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the remoteHandler control.
            This function will react to an error code change (parameter changes handled by subControls)
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HelpRequested"></see> event.
            </summary>
            <param name="hevent">A <see cref="T:System.Windows.Forms.HelpEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="F:Ace.Feeder.Client.IOFeeder.IOFeederEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl">
            <summary>
            User control for editing feeder properties
            </summary>
        </member>
        <member name="F:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.aceClient">
            <summary>
            The client associated with the control
            </summary>
        </member>
        <member name="F:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.remoteHandler">
            <summary>
            The remote event handler to detect a change on IOFeeder
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.Client">
            <summary>
            gets or sets the client associated with the control
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.NumericUpDownPartProcessOutputDwell">
            <summary>
            Gets the numeric up down 'part process output dwell'.
            </summary>
            <value>The numeric up down 'part process output dwell'.</value>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.NumericUpDownDebounceTime">
            <summary>
            Gets the numeric up down 'debounce time'.
            </summary>
            <value>The numeric up down 'debounce time'.</value>
        </member>
        <member name="F:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.selectedObject">
            <summary>
            The feeder device being edited by the current control
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.SelectedObject">
            <summary>
            Gets or sets the selected device.
            </summary>
            <value>The selected device.</value>
        </member>
        <member name="P:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.IOFeeder">
            <summary>
            Gets the IOFeeder being edited.
            </summary>
            <value>The AnyFeeder.</value>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl"/> class.
            Selected Device and AceClient must be set after this control has been created.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.InitializeDisplay">
            <summary>
            Initializes the display.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.UpdateControlLockDisplayState">
            <summary>
            Updates the display state of the controls for lock mode.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.numericUpDownPartProcessOutputDwell_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the numericUpDownPartProcessOutputDwell control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.numericUpDownDebounceTime_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the numericUpDownDebounceTime control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.remoteHandler_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the remoteHandler control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.Instance_LockStatusChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the LockStatusChanged event of the AceServer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.IOFeederParamsControl_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the IOFeederParamsControl control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Feeder.Client.IOFeeder.IOFeederParamsControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.Data.AnyFeederCreationSequencerData">
            <summary>
            Data class for feeder import wizard sequence
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.Data.AnyFeederCreationSequencerData.Feeder">
            <summary>
            Gets or sets the feeder being operated on
            </summary>
            <value>
            The feeder.
            </value>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.Data.AnyFeederCreationSequencerData.BackLightOnOffSelectedRadioButtonIndex">
            <summary>
            Gets or sets the feeder backlight on/off status
            </summary>
            <value>
            The status on/off index
            </value>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Data.AnyFeederCreationSequencerData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.WizardFramework.Data.AnyFeederCreationSequencerData" /> class.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.Data.FlexibowlFeederCreationSequencerData">
            <summary>
            Data class for feeder import wizard sequence
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.Data.FlexibowlFeederCreationSequencerData.Feeder">
            <summary>
            Gets or sets the feeder being operated on
            </summary>
            <value>
            The feeder.
            </value>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Data.FlexibowlFeederCreationSequencerData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.WizardFramework.Data.FlexibowlFeederCreationSequencerData" /> class.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationWizardShim">
            <summary>
            Wizard shim used to launch the interview wizard when the calibration object is created
            </summary>
        </member>
        <member name="F:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationWizardShim.feeder">
            <summary>
            The object being created
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationWizardShim.Configure(Ace.Core.Client.IAceClient,System.Type,Ace.Core.Server.IAceObjectCollection,System.String)">
            <summary>
            Configures the wizard to create a new object of a given type.
            </summary>
            <param name="client">The client associated with the control.</param>
            <param name="type">Type of object to create.</param>
            <param name="folder">Folder in which to place the new object.</param>
            <param name="name">Desired name of the new object.</param>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationWizardShim.NewObject">
            <summary>
            Gets the newly created object, or null if no object was created.
            </summary>
            <value></value>
        </member>
        <member name="E:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationWizardShim.Disposed">
            <summary>
            Occurs when the object is disposed
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationWizardShim.ShowDialog(System.Windows.Forms.IWin32Window,Ace.Core.Client.IAceClient)">
            <summary>
            Shows the wizard.
            </summary>
            <param name="owner">The owner.</param>
            <param name="client">The client associated with the wizard.</param>
            <returns>True if the wizard completed, false if canceled.</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationWizardShim.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer">
            <summary>
            Wizard sequence for creating a CAD object in the workspace
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.CurrSequencerData">
            <summary>
            Get the sequencer data
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.RunFromApplicationSampleWizard">
            <summary>
            Get flag indicates this is ran from Application Wizard or not
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.#ctor(System.String,Ace.Core.Client.WizardFramework.Control.IShellControl,Ace.Core.Client.IAceClient,Ace.Feeder.Server.AnyFeeder.IAnyFeeder,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer" /> class.
            </summary>
            <param name="sequencerTitle">The title.</param>
            <param name="shellControl">The shell control of the sequencer.</param>
            <param name="client">The client.</param>
            <param name="feeder">The feeder being created.</param>
            <param name="runFromApplicationSampleWizard">This is run from application sample wizard or not.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.OnCreateSteps">
            <summary>
            Create Steps list of the sequencer
            </summary>						
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.OnCreateSequencerData">
            <summary>
            Create sequencer data
            </summary>								
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.FeederModelSelectedRadioButtonIndex(System.Boolean,System.Int32)">
            <summary>
            Select radio button index on question page
            this access directly to the Sequencer data
            </summary>							
            <param name="read">read or write.</param>
            <param name="value">The value for write.</param>
            <returns>The current value of the option</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.BackLightOnOffSelectedRadioButtonIndex(System.Boolean,System.Int32)">
            <summary>
            Select radio button index on question page for switching backlight on/off
            this access directly to the Sequencer data
            </summary>							
            <param name="read">read or write.</param>
            <param name="value">The value for read or write (1=switch backlight OFF, 2=switch backlight ON).</param>
            <returns>The current value of the option</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.GetSelectedFeeder">
            <summary>
            Gets the selected feeder.
            </summary>
            <returns>The selected feeder</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.CreateDefaultFeederOperations">
            <summary>
            Create a default list operations for the motion sequence		
            </summary>
            <returns>The list of default feeder operation for the motion sequence</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.CreateDefaultFeederOperationsFrontZone">
            <summary>
            FrontZone - Create a default list operations for the motion sequence
            Sequence ID = 1000
            </summary>
            <returns>The selected feeder</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.CreateDefaultFeederOperationsPickZone_Flip">
            <summary>
            PickZone_Flip - Create a default list operations for the motion sequence
            Sequence ID = 1001
            </summary>
            <returns>The selected feeder</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.CreateDefaultFeederOperationsDispenseZone_Dispense">
            <summary>
            DispenseZone_Dispense - Create a default list operations for the motion sequence
            Sequence ID = 1002
            </summary>
            <returns>The selected feeder</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.CreateDefaultFeederOperationsPickZone_MoveFromDispense">
            <summary>
            PickZone_MoveFromDispense - Create a default list operations for the motion sequence
            Sequence ID = 1003
            </summary>
            <returns>The selected feeder</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.CreateFeederOperations(Ace.Feeder.Server.AnyFeeder.AnyFeederSequenceOperation)">
            <summary>
            Create a default list operations for the motion sequence		
            </summary>
            <returns>The list of default feeder operation for the motion sequence</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.stepConfigMotionSequences_1_evProcessStep(System.Object,Ace.Core.Client.WizardFramework.SequenceStep.StepEventArgs)">
            <summary>
            Handles the evProcessStep event of the Motion sequence step 1
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Client.WizardFramework.SequenceStep.StepEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.stepDone_evEnterStep(System.Object,Ace.Core.Client.WizardFramework.SequenceStep.StepEventArgs)">
            <summary>
            Handles the evEnterStep event of the stepDone.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Client.WizardFramework.SequenceStep.StepEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationSequencer.stepDone_evLeaveStep(System.Object,Ace.Core.Client.WizardFramework.SequenceStep.StepEventArgs)">
            <summary>
            Handles the evLeaveStep event of the stepDone.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Client.WizardFramework.SequenceStep.StepEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationWizardShim">
            <summary>
            Wizard shim used to launch the interview wizard when the calibration object is created
            </summary>
        </member>
        <member name="F:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationWizardShim.feeder">
            <summary>
            The object being created
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationWizardShim.Configure(Ace.Core.Client.IAceClient,System.Type,Ace.Core.Server.IAceObjectCollection,System.String)">
            <summary>
            Configures the wizard to create a new object of a given type.
            </summary>
            <param name="client">The client associated with the control.</param>
            <param name="type">Type of object to create.</param>
            <param name="folder">Folder in which to place the new object.</param>
            <param name="name">Desired name of the new object.</param>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationWizardShim.NewObject">
            <summary>
            Gets the newly created object, or null if no object was created.
            </summary>
            <value></value>
        </member>
        <member name="E:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationWizardShim.Disposed">
            <summary>
            Occurs when the object is disposed
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationWizardShim.ShowDialog(System.Windows.Forms.IWin32Window,Ace.Core.Client.IAceClient)">
            <summary>
            Shows the wizard.
            </summary>
            <param name="owner">The owner.</param>
            <param name="client">The client associated with the wizard.</param>
            <returns>True if the wizard completed, false if canceled.</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.AnyFeederCreationWizardShim.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationSequencer">
            <summary>
            Wizard sequence for creating a CAD object in the workspace
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationSequencer.CurrSequencerData">
            <summary>
            Get the sequencer data
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationSequencer.RequireConfigMotionSequences">
            <summary>
            Get the motion sequence configuration required or not flag
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationSequencer.#ctor(System.String,Ace.Core.Client.WizardFramework.Control.IShellControl,Ace.Core.Client.IAceClient,Ace.Feeder.Server.Flexibowl.IFlexibowlFeeder,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationSequencer" /> class.
            </summary>
            <param name="sequencerTitle">The title.</param>
            <param name="shellControl">The shell control of the sequencer.</param>
            <param name="client">The client.</param>
            <param name="feeder">The feeder being created.</param>
            <param name="requireConfigMotionSequences">The motion sequence configuration required or not.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationSequencer.OnCreateSteps">
            <summary>
            Create Steps list of the sequencer
            </summary>						
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationSequencer.OnCreateSequencerData">
            <summary>
            Create sequencer data
            </summary>								
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationSequencer.SelectedRadioButtonIndex(System.Boolean,System.Int32)">
            <summary>
            Select radio button index on question page
            this access directly to the Sequencer data
            </summary>							
            <param name="read">read or write.</param>
            <param name="value">The value for write.</param>
            <returns>The current value of the option</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationSequencer.GetSelectedFeeder">
            <summary>
            Gets the selected feeder.
            </summary>
            <returns>The selected feeder</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationSequencer.CreateDefaultFeederOperations">
            <summary>
            Create a default feeder operations for the motion sequence
            ForwardBlow, Delay
            </summary>
            <returns>The selected feeder operations</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationSequencer.stepDone_evEnterStep(System.Object,Ace.Core.Client.WizardFramework.SequenceStep.StepEventArgs)">
            <summary>
            Handles the evEnterStep event of the stepDone.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Client.WizardFramework.SequenceStep.StepEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.Sequencer.FlexibowlFeederCreationSequencer.stepDone_evLeaveStep(System.Object,Ace.Core.Client.WizardFramework.SequenceStep.StepEventArgs)">
            <summary>
            Handles the evLeaveStep event of the stepDone.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Client.WizardFramework.SequenceStep.StepEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.SequenceStep.StepFlexibowlConfigMotionSequences">
            <summary>
            AnyFeeder configure motion sequences Step
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.StepFlexibowlConfigMotionSequences.SelectedFeeder">
            <summary>
            Function to return the Flexibowl Feeder being operated on.
            </summary>		
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.StepFlexibowlConfigMotionSequences.SelectedMotionSequenceId">
            <summary>
            Selected motion sequence id (1000)
            </summary>	
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.StepFlexibowlConfigMotionSequences.RequireConfigMotionSequences">
            <summary>
            Get the motion sequnece configuration required or not flag
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.SequenceStep.StepFlexibowlConfigMotionSequences.#ctor(System.Int32,Ace.Core.Client.WizardFramework.Sequencer.ISequencer,System.String,Ace.Core.Client.WizardFramework.Data.ISequencerData,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.WizardFramework.SequenceStep.StepFlexibowlConfigMotionSequences"/> class.
            </summary>
            <param name="stepID">The step ID.</param>
            <param name="sequencer">The sequencer of this step.</param>		
            <param name="tableOfContentsName">The table of contents name.</param>
            <param name="sequencerData">The sequencer data for this step.</param>				
            <param name="requireConfigMotionSequences">The flag indicate require configure motion sequence.</param>	
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.SequenceStep.IStepFlexibowlConfigMotionSequences">
            <summary>
            Flexibowl Feeder configure motion sequences Step
            </summary>	
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.IStepFlexibowlConfigMotionSequences.SelectedFeeder">
            <summary>
            Function to return the Flexibowl Feeder being operated on.
            </summary>		
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.IStepFlexibowlConfigMotionSequences.SelectedMotionSequenceId">
            <summary>
            Selected motion sequence id (1000, 1001, 1002, 1003)
            </summary>	
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.IStepFlexibowlConfigMotionSequences.RequireConfigMotionSequences">
            <summary>
            Get the motion sequence configuration required or not flag
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.SequenceStep.IStepAnyFeederConfigMotionSequences">
            <summary>
            AnyFeeder configure motion sequences Step
            </summary>	
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.IStepAnyFeederConfigMotionSequences.SelectedFeeder">
            <summary>
            Function to return the AnyFeeder being operated on.
            </summary>		
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.IStepAnyFeederConfigMotionSequences.SelectedMotionSequenceId">
            <summary>
            Selected motion sequence id (1000, 1001, 1002, 1003)
            </summary>	
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.IStepAnyFeederConfigMotionSequences.RequireConfigMotionSequences">
            <summary>
            Get the motion sequence configuration required or not flag
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.SequenceStep.StepAnyFeederConfigMotionSequences">
            <summary>
            AnyFeeder configure motion sequences Step
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.StepAnyFeederConfigMotionSequences.SelectedFeeder">
            <summary>
            Function to return the AnyFeeder being operated on.
            </summary>		
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.StepAnyFeederConfigMotionSequences.SelectedMotionSequenceId">
            <summary>
            Selected motion sequence id (1000, 1001, 1002, 1003)
            </summary>	
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.StepAnyFeederConfigMotionSequences.RequireConfigMotionSequences">
            <summary>
            Get the motion sequnece configuration required or not flag
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.SequenceStep.StepAnyFeederConfigMotionSequences.#ctor(System.Int32,Ace.Core.Client.WizardFramework.Sequencer.ISequencer,System.String,Ace.Core.Client.WizardFramework.Data.ISequencerData,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.WizardFramework.SequenceStep.StepAnyFeederConfigMotionSequences"/> class.
            </summary>
            <param name="stepID">The step ID.</param>
            <param name="sequencer">The sequencer of this step.</param>		
            <param name="tableOfContentsName">The table of contents name.</param>
            <param name="sequencerData">The sequencer data for this step.</param>				
            <param name="requireConfigMotionSequences">The flag indicate require configure motion sequence.</param>	
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.SequenceStep.IStepAnyFeederComSelection">
            <summary>
            AnyFeeder Selection Step
            </summary>	
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.SequenceStep.IStepAnyFeederComSelection.ExtractCOMPortList">
            <summary>
            Gets the COM ports present on the PC 
            </summary>
            <returns>String array containing a list of available COM ports</returns>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.IStepAnyFeederComSelection.SelectedFeeder">
            <summary>
            Function to return the AnyFeeder being operated on.
            </summary>		
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.SequenceStep.IStepAnyFeederComSelection.TestConnection(System.String)">
            <summary>
            Verify the Serial connection to the AnyFeeder
            </summary>
            <param name="portName">Name of the COM port.</param>
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.SequenceStep.IStepFlexibowlCommSelection">
            <summary>
            Flexibowl Selection Step
            </summary>	
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.IStepFlexibowlCommSelection.SelectedFeeder">
            <summary>
            Function to return the Flexibowl Feeder being operated on.
            </summary>				
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.SequenceStep.StepAnyFeederComSelection">
            <summary>
            AnyFeeder Selection Step
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.StepAnyFeederComSelection.SelectedFeeder">
            <summary>
            Function to return the AnyFeeder being operated on.
            </summary>		
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.SequenceStep.StepAnyFeederComSelection.#ctor(System.Int32,Ace.Core.Client.WizardFramework.Sequencer.ISequencer,System.String,Ace.Core.Client.WizardFramework.Data.ISequencerData)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.WizardFramework.SequenceStep.StepAnyFeederComSelection"/> class.
            </summary>
            <param name="stepID">The step ID.</param>
            <param name="sequencer">The sequencer of this step.</param>		
            <param name="tableOfContentsName">The table of contents name.</param>
            <param name="sequencerData">The sequencer data for this step.</param>				
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.SequenceStep.StepAnyFeederComSelection.ExtractCOMPortList">
            <summary>
            Gets the COM ports present on the PC 
            </summary>
            <returns>String array containing a list of available COM ports</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.SequenceStep.StepAnyFeederComSelection.TestConnection(System.String)">
            <summary>
            Verify the Serial connection to the AnyFeeder
            </summary>
            <param name="portName">Name of the COM port.</param>
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.SequenceStep.StepFlexibowlCommSelection">
            <summary>
            Flexibowl Selection Step
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.SequenceStep.StepFlexibowlCommSelection.#ctor(System.Int32,Ace.Core.Client.WizardFramework.Sequencer.ISequencer,System.String,Ace.Core.Client.WizardFramework.Data.ISequencerData)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.WizardFramework.SequenceStep.StepFlexibowlCommSelection"/> class.
            </summary>
            <param name="stepID">The step ID.</param>
            <param name="sequencer">The sequencer of this step.</param>		
            <param name="tableOfContentsName">The table of contents name.</param>
            <param name="sequencerData">The sequencer data for this step.</param>				
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.SequenceStep.StepFlexibowlCommSelection.SelectedFeeder">
            <summary>
            Function to return the Flexibowl Feeder being operated on.
            </summary>		
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.View.AnyFeederConfigMotionSequencesView.StepAnyFeederConfigMotionSeq">
            <summary>
            Step AnyFeederConfigMotionSequences
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederConfigMotionSequencesView.#ctor(Ace.Feeder.Client.WizardFramework.SequenceStep.IStepAnyFeederConfigMotionSequences,Ace.Core.Client.WizardFramework.Sequencer.ISequencer)">
            <summary>
            Constructor
            </summary>
            <param name="step">The step.</param>
            <param name="sequencer">The sequencer.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederConfigMotionSequencesView.UpdateDisplay(Ace.Core.Client.WizardFramework.View.StepPageView.PageDisplayStatus)">
            <summary>
            Event is raised when the page is loaded, visible, invisible, show, close
            </summary>
            <param name="pageDisplayStatus">display status.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederConfigMotionSequencesView.InitMotionSequencesControl">
            <summary>
            Init motion sequences control
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederConfigMotionSequencesView.motionSequencesControl_MotionSequenceChanged(System.Object,System.EventArgs)">
            <summary>
            Handle motion sequence added/deleted
            </summary>
            <param name="sender">The motion sequences control.</param>
            <param name="e">The event arg.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederConfigMotionSequencesView.motionSequencesControl_MotionSequenceOperationChanged(System.Object,System.EventArgs)">
            <summary>
            Handle motion sequence operation added/deleted
            </summary>
            <param name="sender">The motion sequences control.</param>
            <param name="e">The event arg.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederConfigMotionSequencesView.motionSequencesControl_UpdateSequencesRunStatus(System.Object,System.EventArgs)">
            <summary>
            Handle sequences run status 
            </summary>
            <param name="sender">The motion sequences control.</param>
            <param name="e">The event arg.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederConfigMotionSequencesView.EnableShellNextButton">
            <summary>
            enabling shell NEXT button
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederConfigMotionSequencesView.UpdateStatusDisplay">
            <summary>
            Updates the status display.
            </summary>
        </member>
        <member name="F:Ace.Feeder.Client.WizardFramework.View.AnyFeederConfigMotionSequencesView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederConfigMotionSequencesView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederConfigMotionSequencesView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.View.AnyFeederCreationSequencerView">
            <summary>
            AnyFeederCreationSequencerView for the wizards 
            </summary>	
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.View.AnyFeederCreationSequencerView.AnyFeederCreationSeq">
            <summary>
            Get sequencer for this view
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederCreationSequencerView.#ctor(Ace.Core.Client.WizardFramework.Sequencer.ISequencer,System.Collections.Generic.List{System.Int32},Ace.Core.Client.WizardFramework.View.IShellView)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.WizardFramework.View.AnyFeederCreationSequencerView"/> class.
            </summary>
            <param name="sequencer">The sequencer of this sequencerView.</param>
            <param name="stepIDs">The step IDs of this sequencerView.</param>		
            <param name="shellView">The shellView of the sequencer.</param>		
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederCreationSequencerView.OnCreateStepPages">
            <summary>
            Create Step pages of the sequencer
            </summary>						
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.View.AnyFeederComSelectionView">
            <summary>
            AnyFeeder Selection Page UI implementation
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.View.AnyFeederComSelectionView.StepAnyFeederSel">
            <summary>
            Step AnyFeeder selection
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederComSelectionView.#ctor(Ace.Feeder.Client.WizardFramework.SequenceStep.IStepAnyFeederComSelection,Ace.Core.Client.WizardFramework.Sequencer.ISequencer)">
            <summary>
            Constructor
            </summary>
            <param name="step">The step.</param>
            <param name="sequencer">The sequencer.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederComSelectionView.UpdateDisplay(Ace.Core.Client.WizardFramework.View.StepPageView.PageDisplayStatus)">
            <summary>
            Event is raised when the page is loaded, visible, invisible, show, close
            </summary>
            <param name="pageDisplayStatus">display status.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederComSelectionView.comboBoxSelectComPort_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the com port combobox selected
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederComSelectionView.btTestConnection_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the connecting button clicked
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederComSelectionView.SetLocalizedStrings">
            <summary>
            Set localized strings
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederComSelectionView.InitCOMPortList">
            <summary>
            Gets the COM ports present on the PC and update the Selection comboBox list
            </summary>
            <returns>String array containing a list of available COM ports (Update is done internally but this list may be useful)</returns>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederComSelectionView.ResizeConnectionStatusLabel">
            <summary>
            Resize the connection status label on UI
            </summary>
        </member>
        <member name="F:Ace.Feeder.Client.WizardFramework.View.AnyFeederComSelectionView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederComSelectionView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.AnyFeederComSelectionView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.View.FlexibowlConfigMotionSequencesView.FlexibowlFeederCreationSeq">
            <summary>
            Flexibowl create sequencer
            </summary>
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.View.FlexibowlConfigMotionSequencesView.StepFlexibowlConfigMotionSeq">
            <summary>
            Step FlexibowlConfigMotionSequences
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlConfigMotionSequencesView.#ctor(Ace.Feeder.Client.WizardFramework.SequenceStep.IStepFlexibowlConfigMotionSequences,Ace.Core.Client.WizardFramework.Sequencer.ISequencer)">
            <summary>
            Constructor
            </summary>
            <param name="step">The step.</param>
            <param name="sequencer">The sequencer.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlConfigMotionSequencesView.UpdateDisplay(Ace.Core.Client.WizardFramework.View.StepPageView.PageDisplayStatus)">
            <summary>
            Event is raised when the page is loaded, visible, invisible, show, close
            </summary>
            <param name="pageDisplayStatus">display status.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlConfigMotionSequencesView.motionSequencesControl_MotionSequencesChanged(System.Object,System.EventArgs)">
            <summary>
            Handle motion sequences added/deleted
            </summary>
            <param name="sender">The motion sequences control.</param>
            <param name="e">The event arg.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlConfigMotionSequencesView.motionSequencesControl_MotionSequenceOperationChanged(System.Object,System.EventArgs)">
            <summary>
            Handle motion sequence operation added/deleted
            </summary>
            <param name="sender">The motion sequences control.</param>
            <param name="e">The event arg.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlConfigMotionSequencesView.motionSequencesControl_UpdateSequencesRunStatus(System.Object,System.EventArgs)">
            <summary>
            Handle sequences run status 
            </summary>
            <param name="sender">The motion sequences control.</param>
            <param name="e">The event arg.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlConfigMotionSequencesView.EnableShellNextButton">
            <summary>
            enabling shell NEXT button
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlConfigMotionSequencesView.InitMotionSequencesControl">
            <summary>
            Init motion sequences control
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlConfigMotionSequencesView.UpdateStatusDisplay">
            <summary>
            Updates the status display.
            </summary>
        </member>
        <member name="F:Ace.Feeder.Client.WizardFramework.View.FlexibowlConfigMotionSequencesView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlConfigMotionSequencesView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlConfigMotionSequencesView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.View.FlexibowlFeederCreationSequencerView">
            <summary>
            FlexibowlFeederCreationSequencerView for the wizards 
            </summary>	
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlFeederCreationSequencerView.#ctor(Ace.Core.Client.WizardFramework.Sequencer.ISequencer,System.Collections.Generic.List{System.Int32},Ace.Core.Client.WizardFramework.View.IShellView)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Client.WizardFramework.View.FlexibowlFeederCreationSequencerView"/> class.
            </summary>
            <param name="sequencer">The sequencer of this sequencerView.</param>
            <param name="stepIDs">The step IDs of this sequencerView.</param>		
            <param name="shellView">The shellView of the sequencer.</param>		
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlFeederCreationSequencerView.OnCreateStepPages">
            <summary>
            Create Step pages of the sequencer
            </summary>						
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView">
            <summary>
            Flexibowl Selection Page UI implementation
            </summary>	
        </member>
        <member name="P:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.FlexibowlIpAddress">
            <summary>
            Gets or set flexibowl ipaddress
            </summary>				
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.#ctor(Ace.Feeder.Client.WizardFramework.SequenceStep.IStepFlexibowlCommSelection,Ace.Core.Client.WizardFramework.Sequencer.ISequencer)">
            <summary>
            Constructor
            </summary>
            <param name="step">The step.</param>
            <param name="sequencer">The sequencer.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.UpdateDisplay(Ace.Core.Client.WizardFramework.View.StepPageView.PageDisplayStatus)">
            <summary>
            Event is raised when the page is loaded, visible, invisible, show, close
            </summary>
            <param name="pageDisplayStatus">display status.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.SetLocalizedStrings">
            <summary>
            Set localized strings
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.scanManager_ScanCompleted(System.Object,System.EventArgs)">
            <summary>
            Handles the ScanCompleted event of the scanManager control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.scanManager_Detected(System.Object,Ace.Feeder.Server.Flexibowl.FlexibowlScanEventArgs)">
            <summary>
            Handles the ControllerDetected event of the scanManager control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.buttonRefresh_Click(System.Object,System.EventArgs)">
            <summary>
            Event handler for the Refresh button
            </summary>
            <param name="sender">Sender of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.ScanFlexibowls(System.Object)">
            <summary>
            Scan the currently available controllers
            </summary>
            <param name="sender">Sender of the event if called from an event</param>
        </member>
        <member name="T:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.EnableOrDisableRefreshButtonCallback">
            <summary>
            Delegate for the EnableOrDisableRefreshButton() method
            </summary>
            <param name="enable">Enable the button if true, or disable it</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.EnableOrDisableRefreshButton(System.Boolean)">
            <summary>
            Enable or disable refresh button
            </summary>
            <param name="enable">Enable the button if true, or disable it</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.FlexibowlSelectionPage_Load(System.Object,System.EventArgs)">
            <summary>
            Control's load event handler
            </summary>
            <param name="sender">Sender of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.listBoxExistingIPAddresses_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Event handler for the selected index change for the existing IP addressed list
            </summary>
            <param name="sender">Sender of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.textBoxSelectedAddress_Enter(System.Object,System.EventArgs)">
            <summary>
            Event handler for the text box enter for the Selected IP Address text box
            </summary>
            <param name="sender">Sender of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.StopScan">
            <summary>
            Stop scanning controller
            </summary>		
        </member>
        <member name="F:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.Feeder.Client.WizardFramework.View.FlexibowlCommSelectionView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.Feeder.GuiText">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_CheckAnyFeederAlive">
            <summary>
              Looks up a localized string similar to Checking Communications.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_CommandIndex">
            <summary>
              Looks up a localized string similar to Command Index.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_Dispense">
            <summary>
              Looks up a localized string similar to Dispense more parts on the working surface.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_DispenseIterations">
            <summary>
              Looks up a localized string similar to The number of iterations for the dispense operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_DispenseSpeed">
            <summary>
              Looks up a localized string similar to The speed of the movements performed during a Dispense operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FeedBackward">
            <summary>
              Looks up a localized string similar to Feed parts backward on the working surface.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FeedBackwardIterations">
            <summary>
              Looks up a localized string similar to The number of iterations for the Feed Backward operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FeedBackwardSpeed">
            <summary>
              Looks up a localized string similar to The speed of the movements performed during a Feed Backward operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FeedFlipBackward">
            <summary>
              Looks up a localized string similar to Feed and Flips parts backward on the working surface.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FeedFlipBackwardIterations">
            <summary>
              Looks up a localized string similar to The number of iterations for the Feed/Flip Backward operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FeedFlipBackwardSpeed">
            <summary>
              Looks up a localized string similar to The speed of the movements performed during a Feed/Flip Backward operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FeedFlipForward">
            <summary>
              Looks up a localized string similar to Feed and Flips parts forward on the working surface.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FeedFlipForwardIterations">
            <summary>
              Looks up a localized string similar to The number of iterations for the Feed/Flip Forward operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FeedFlipForwardSpeed">
            <summary>
              Looks up a localized string similar to The speed of the movements performed during a Feed/Flip Forward operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FeedForward">
            <summary>
              Looks up a localized string similar to Feed parts forward on the working surface.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FeedForwardIterations">
            <summary>
              Looks up a localized string similar to The number of iterations for the Feed Forward operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FeedForwardSpeed">
            <summary>
              Looks up a localized string similar to The speed of the movements performed during a Feed Forward operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FirmwareRestart">
            <summary>
              Looks up a localized string similar to Restart the AnyFeeder Firmware.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_Flip">
            <summary>
              Looks up a localized string similar to Flips the parts on the working surface.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FlipIterations">
            <summary>
              Looks up a localized string similar to The number of iterations for the Flip operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_FlipSpeed">
            <summary>
              Looks up a localized string similar to The speed of the movements performed during a Flip operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_HeavyDispense">
            <summary>
              Looks up a localized string similar to Dispense more parts on the working surface (for heavy parts).
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_HeavyDispenseIterations">
            <summary>
              Looks up a localized string similar to The number of iterations for the Heavy Dispense operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_HeavyDispenseSpeed">
            <summary>
              Looks up a localized string similar to The speed of the movements performed during a Heavy Dispense operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_Init">
            <summary>
              Looks up a localized string similar to Initializes the Anyfeeder and calibrates its motors.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_Purge">
            <summary>
              Looks up a localized string similar to Purge all the parts from the bulk and working surface.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_PurgeIterations">
            <summary>
              Looks up a localized string similar to The number of iterations for the Purge operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_PurgeSpeed">
            <summary>
              Looks up a localized string similar to The speed of the movements performed during a Purge operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_Stop">
            <summary>
              Looks up a localized string similar to Stops the current AnyFeeder command.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_SwitchBackLightOFF">
            <summary>
              Looks up a localized string similar to Switches the backlight OFF (if installed).
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_DisplayDescription_SwitchBackLightON">
            <summary>
              Looks up a localized string similar to Switches the backlight ON (if installed).
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_FirmwareVersion">
            <summary>
              Looks up a localized string similar to Firmware Version.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_Log">
            <summary>
              Looks up a localized string similar to Log.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_MotionSequences">
            <summary>
              Looks up a localized string similar to Motion Sequences.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_Operation">
            <summary>
              Looks up a localized string similar to Operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_Parameter_Iterations">
            <summary>
              Looks up a localized string similar to Iterations.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_Parameter_Speed">
            <summary>
              Looks up a localized string similar to Speed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_Parameter_Time">
            <summary>
              Looks up a localized string similar to Time (ms).
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_Receive">
            <summary>
              Looks up a localized string similar to Receive:.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_SelectedOperation">
            <summary>
              Looks up a localized string similar to Selected Operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_Send">
            <summary>
              Looks up a localized string similar to Send:.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_Sequence">
            <summary>
              Looks up a localized string similar to Sequences.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder_SequenceDetails">
            <summary>
              Looks up a localized string similar to Sequence Details.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeeder3DDisplay">
            <summary>
              Looks up a localized string similar to 3D Display.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederAdeptSightGroup">
            <summary>
              Looks up a localized string similar to ACE Sight Configuration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederAdeptSightIndexLabel">
            <summary>
              Looks up a localized string similar to ACE Sight Index.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederBackLightGroup">
            <summary>
              Looks up a localized string similar to Backlight Controls.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederBackLightOff">
            <summary>
              Looks up a localized string similar to Backlight OFF.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederBackLightOn">
            <summary>
              Looks up a localized string similar to Backlight ON.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCommandDataItem_Category">
            <summary>
              Looks up a localized string similar to AnyFeeder Commands.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCommandDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to AnyFeeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCommunicationGroup">
            <summary>
              Looks up a localized string similar to Communication.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederComPort">
            <summary>
              Looks up a localized string similar to COM Port.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederConfigMotionSequencesView_SequencesRunStatus">
            <summary>
              Looks up a localized string similar to Sequences Run Status.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederConfigTab">
            <summary>
              Looks up a localized string similar to Configuration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederControlTab">
            <summary>
              Looks up a localized string similar to Configuration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_AnyFeederSelection_ConnectedSuccessfully">
            <summary>
              Looks up a localized string similar to Connected to AnyFeeder successfully.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_AnyFeederSelection_Description">
            <summary>
              Looks up a localized string similar to Select AnyFeeder Communication Port.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_AnyFeederSelection_FailedToConnect">
            <summary>
              Looks up a localized string similar to Failed to connect to AnyFeeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_AnyFeederSelection_TestConnection">
            <summary>
              Looks up a localized string similar to Test Connection.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_AnyFeederSelection_Title">
            <summary>
              Looks up a localized string similar to AnyFeeder Selection.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_Description">
            <summary>
              Looks up a localized string similar to Configure Motion Sequences for the AnyFeeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_DispenseZoneDispense_Description">
            <summary>
              Looks up a localized string similar to Configure Motion Sequences for Dispense zone dispense.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_DispenseZoneDispense_Instructions">
            <summary>
              Looks up a localized string similar to Dispense Zone - There are too few parts in the Dispense Zone. Product needs to be dispensed from the top level down into this zone..
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_DispenseZoneDispense_Title">
            <summary>
              Looks up a localized string similar to Configure Dispense Zone Motion Sequence.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_FrontZoneMoveBackward_Description">
            <summary>
              Looks up a localized string similar to Configure Motion Sequences for Front zone.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_FrontZoneMoveBackward_Instructions">
            <summary>
              Looks up a localized string similar to Front Zone - There are parts in the Front Zone that need to be moved backwards to the Pick Zone.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_FrontZoneMoveBackward_Title">
            <summary>
              Looks up a localized string similar to Configure Front Zone Motion Sequence.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_Instructions">
            <summary>
              Looks up a localized string similar to You must define at least one motion sequence. You can add commands to the sequence by moving them from the list on the left to the list on the right. Press the green arrow button to run the sequence..
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_PickZoneDispense_Description">
            <summary>
              Looks up a localized string similar to Configure Motion Sequences for Pick zone dispense.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_PickZoneDispense_Instructions">
            <summary>
              Looks up a localized string similar to Pick Zone - There are no parts found in this Zone, so need to move it from Dispense Zone.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_PickZoneFlip_Description">
            <summary>
              Looks up a localized string similar to Configure Motion Sequences for Pick zone flip.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_PickZoneFlip_Instructions">
            <summary>
              Looks up a localized string similar to Pick Zone - There are parts in the Pick Zone but not in the correct position for picking, so they need to be FLIPPED..
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_PickZoneFlip_Title">
            <summary>
              Looks up a localized string similar to Configure Pick Zone Flip Motion Sequence.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_PickZoneMoveFromDispense_Description">
            <summary>
              Looks up a localized string similar to Configure Motion Sequences for Pick zone move.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_PickZoneMoveFromDispense_Instructions">
            <summary>
              Looks up a localized string similar to Pick Zone - There are no parts found in the PICK Zone. Product needs to be moved from the Dispense Zone into the Pick Zone..
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_PickZoneMoveFromDispense_Title">
            <summary>
              Looks up a localized string similar to Configure Pick Zone Motion Sequence.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequences_Title">
            <summary>
              Looks up a localized string similar to Configure Motion Sequences.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequencesQuestion_Description">
            <summary>
              Looks up a localized string similar to Would you like to create motion sequences for this feeder?.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequencesQuestion_No">
            <summary>
              Looks up a localized string similar to No, I do not want to configure motion sequences.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequencesQuestion_Title">
            <summary>
              Looks up a localized string similar to Ask for Motion Sequences.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_ConfigMotionSequencesQuestion_Yes">
            <summary>
              Looks up a localized string similar to Yes, I want to configure motion sequences.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_InstructionConfigMotionSequences_Description">
            <summary>
              Looks up a localized string similar to Configure Motion Sequences.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_InstructionConfigMotionSequences_Instructions">
            <summary>
              Looks up a localized string similar to You will be guided through the process of configuring motion sequences for the feeder.\line A motion sequence is a collection of feeder commands that can be triggered by one operation from your V+ program.\line You can create multiple motion sequences and, often times, you can simplify the V+ application code by using Motion sequences..
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_InstructionConfigMotionSequences_Title">
            <summary>
              Looks up a localized string similar to Motion Sequences Instruction.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_InstructionsPage_Description">
            <summary>
              Looks up a localized string similar to Steps to create a new AnyFeeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_InstructionsPage_Instructions">
            <summary>
              Looks up a localized string similar to You will be guided through the process of creating a new AnyFeeder. You must identify the type of feeder, position the feeder in the workspace, and can create motion sequences for the feeder..
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_InstructionsPage_Title">
            <summary>
              Looks up a localized string similar to Instructions.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_InterviewCompletePage_Description">
            <summary>
              Looks up a localized string similar to The interview has completed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_InterviewCompletePage_Instructions">
            <summary>
              Looks up a localized string similar to The feeder is now configured. You can change the feeder parameters in the feeder editor, if needed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_InterviewCompletePage_Title">
            <summary>
              Looks up a localized string similar to Interview Complete.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_PositionEditPage_Description">
            <summary>
              Looks up a localized string similar to Initialize the position of the feeder in the workspace..
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_PositionEditPage_Title">
            <summary>
              Looks up a localized string similar to Position AnyFeeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_SelectTypePage_Description">
            <summary>
              Looks up a localized string similar to Select the model of the AnyFeeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_SelectTypePage_Model">
            <summary>
              Looks up a localized string similar to Model: {0}.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_SelectTypePage_Title">
            <summary>
              Looks up a localized string similar to Select Model Type.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_SwitchBackLightPage_Description">
            <summary>
              Looks up a localized string similar to Switch the Feeder Backlight ON/OFF.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_SwitchBackLightPage_Instructions">
            <summary>
              Looks up a localized string similar to If your Feeder model that has a Backlight, Please select the option to turn it On/Off.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_SwitchBackLightPage_Off">
            <summary>
              Looks up a localized string similar to Switch the Backlight OFF.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_SwitchBackLightPage_On">
            <summary>
              Looks up a localized string similar to Switch the Backlight ON.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationSequencer_SwitchBackLightPage_Title">
            <summary>
              Looks up a localized string similar to Switch Backlight.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederCreationWizardShim_Title">
            <summary>
              Looks up a localized string similar to Create New AnyFeeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederDispense">
            <summary>
              Looks up a localized string similar to Dispense.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederFeedBackward">
            <summary>
              Looks up a localized string similar to Feed Backward.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederFeedButton">
            <summary>
              Looks up a localized string similar to Feed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederFeedControlsGroup">
            <summary>
              Looks up a localized string similar to Feed Controls.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederFeedFlipBackward">
            <summary>
              Looks up a localized string similar to Flip Backward.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederFeedFlipForward">
            <summary>
              Looks up a localized string similar to Flip Forward.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederFeedForward">
            <summary>
              Looks up a localized string similar to Feed Forward.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederFeedModeLabel">
            <summary>
              Looks up a localized string similar to Feed Sequence.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederFeedSequenceGroup">
            <summary>
              Looks up a localized string similar to Feed Sequence.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederFlip">
            <summary>
              Looks up a localized string similar to Flip.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederGrabNewImageLabel">
            <summary>
              Looks up a localized string similar to Count parts in new image.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederIterations">
            <summary>
              Looks up a localized string similar to Iterations.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederMainTab">
            <summary>
              Looks up a localized string similar to Standard Controls.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederModelType">
            <summary>
              Looks up a localized string similar to Model Type.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederParamDataItem_Category">
            <summary>
              Looks up a localized string similar to AnyFeeder Parameters.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederParamDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to AnyFeeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederParent">
            <summary>
              Looks up a localized string similar to Parent.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederPurge">
            <summary>
              Looks up a localized string similar to Purge.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederSelectParent">
            <summary>
              Looks up a localized string similar to Select a Parent.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederSpeed">
            <summary>
              Looks up a localized string similar to Speed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederStatusGroup">
            <summary>
              Looks up a localized string similar to Status.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederVisible">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.AnyFeederWorkspacePosition">
            <summary>
              Looks up a localized string similar to Workspace Position.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.BlowCommand_Details">
            <summary>
              Looks up a localized string similar to Time = {0}.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.BlowCommand_ToString">
            <summary>
              Looks up a localized string similar to Blow.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.DelayCommand_Details">
            <summary>
              Looks up a localized string similar to Time = {0}.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.DelayCommand_ToString">
            <summary>
              Looks up a localized string similar to Delay.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FeederErrorTextHeader">
            <summary>
              Looks up a localized string similar to Error {0} : .
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FeederStatusTextCycling">
            <summary>
              Looks up a localized string similar to Cycling.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FeederStatusTextError">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FeederStatusTextNotAvailable">
            <summary>
              Looks up a localized string similar to Not Available.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FeederStatusTextNotStarted">
            <summary>
              Looks up a localized string similar to Not Started.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FeederStatusTextReady">
            <summary>
              Looks up a localized string similar to Ready.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FeederStatusTextWaitingForDelayStart">
            <summary>
              Looks up a localized string similar to Waiting For The Delay Before Feeding.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FeederStatusTextWaitingForDwell">
            <summary>
              Looks up a localized string similar to Waiting For The Dwell Delay On The Handshake Signal.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FeederStatusTextWaitingForHandhhakeHigh">
            <summary>
              Looks up a localized string similar to Waiting For The Handshake Signal.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FeederStatusTextWaitingForHandshakeLow">
            <summary>
              Looks up a localized string similar to Waiting For A Low Value On The handshake Signal.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FeederStatusTextWorking">
            <summary>
              Looks up a localized string similar to Working.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlConfigMotionSequencesView_SequencesRunStatus">
            <summary>
              Looks up a localized string similar to Sequences Run Status.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeeder_Error_OverVoltage">
            <summary>
              Looks up a localized string similar to Flexibowl Over Voltage.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeeder_Error_ShortCircuit">
            <summary>
              Looks up a localized string similar to Short Circuit: The motor or its wiring may be defective..
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeeder_Error_Temperature">
            <summary>
              Looks up a localized string similar to Temperature: The drive is overheating.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeeder_Error_UnderVoltage">
            <summary>
              Looks up a localized string similar to Flexibowl Under Voltage.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeeder_Error_UnknownError">
            <summary>
              Looks up a localized string similar to Unknown Error: {0}.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_ConfigMotionSequences_Description">
            <summary>
              Looks up a localized string similar to Configure Motion Sequences for the Flexibowl Feeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_ConfigMotionSequences_Instructions">
            <summary>
              Looks up a localized string similar to You must define at least one motion sequence. You can add commands to the sequence by moving them from the list on the left to the list on the right. Press the green arrow button to run the sequence..
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_ConfigMotionSequences_Title">
            <summary>
              Looks up a localized string similar to Configure Motion Sequences.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_ConfigMotionSequencesQuestion_Description">
            <summary>
              Looks up a localized string similar to Would you like to create motion sequences for this feeder?.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_ConfigMotionSequencesQuestion_No">
            <summary>
              Looks up a localized string similar to No, I do not want to configure motion sequences.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_ConfigMotionSequencesQuestion_Title">
            <summary>
              Looks up a localized string similar to Ask for Motion Sequences.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_ConfigMotionSequencesQuestion_Yes">
            <summary>
              Looks up a localized string similar to Yes, I want to configure motion sequences.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_FlexibowlSelection_Description">
            <summary>
              Looks up a localized string similar to Select the Flexibowl&apos;s IP address..
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_FlexibowlSelection_Title">
            <summary>
              Looks up a localized string similar to Flexibowl Selection.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_InstructionsPage_Description">
            <summary>
              Looks up a localized string similar to Steps to create a new FlexiBowl Feeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_InstructionsPage_Instructions">
            <summary>
              Looks up a localized string similar to You will be guided through the process of creating a new FlexibowlFeeder. You must identify the type of feeder, position the feeder in the workspace, and can create motion sequences for the feeder..
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_InstructionsPage_Title">
            <summary>
              Looks up a localized string similar to Instructions.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_InterviewCompletePage_Description">
            <summary>
              Looks up a localized string similar to The interview has completed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_InterviewCompletePage_Instructions">
            <summary>
              Looks up a localized string similar to The feeder is now configured. You can change the feeder parameters in the feeder editor, if needed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_InterviewCompletePage_Title">
            <summary>
              Looks up a localized string similar to Interview Complete.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_PositionEditPage_Description">
            <summary>
              Looks up a localized string similar to Initialize the position of the feeder in the workspace..
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_PositionEditPage_Title">
            <summary>
              Looks up a localized string similar to Position FlexiBowl Feeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_SelectTypePage_Description">
            <summary>
              Looks up a localized string similar to Select the model of the FlexiBowl Feeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_SelectTypePage_Model">
            <summary>
              Looks up a localized string similar to Model: {0}.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationSequencer_SelectTypePage_Title">
            <summary>
              Looks up a localized string similar to Select Model Type.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederCreationWizardShim_Title">
            <summary>
              Looks up a localized string similar to Create New FlexiBowl Feeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederEditor_Blow">
            <summary>
              Looks up a localized string similar to Blow.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederEditor_Flip1">
            <summary>
              Looks up a localized string similar to Flip 1.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederEditor_Flip2">
            <summary>
              Looks up a localized string similar to Flip 2.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederEditor_FlipBlow">
            <summary>
              Looks up a localized string similar to Flip / Blow.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederEditor_Forward">
            <summary>
              Looks up a localized string similar to Forward.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederEditor_ForwardBlow">
            <summary>
              Looks up a localized string similar to Fwd / Blow.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederEditor_ForwardFlipBlow">
            <summary>
              Looks up a localized string similar to Fwd / Flip / Blow.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederEditor_LightOff">
            <summary>
              Looks up a localized string similar to Light Off.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederEditor_LightOn">
            <summary>
              Looks up a localized string similar to Light On.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederEditor_Reset">
            <summary>
              Looks up a localized string similar to Reset.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlFeederEditor_Shake">
            <summary>
              Looks up a localized string similar to Shake.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlSelectionPage_ExistingFlexibowlIPAddresses">
            <summary>
              Looks up a localized string similar to Existing Flexibowl IP Addresses:.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlSelectionPage_Instruction">
             <summary>
               Looks up a localized string similar to You need to connect to the Flexibowl to create and run this application sample.
            Select the IP address of the Flexibowl from the Existing Flexibowl IP Addresses list.
            If the FlexiBowl is not available, you do not need to select an IP address..
             </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlSelectionPage_Refresh">
            <summary>
              Looks up a localized string similar to Refresh.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlexibowlSelectionPage_SelectedFlexibowlIPAddress">
            <summary>
              Looks up a localized string similar to Selected Flexibowl IP Address:.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlipBlowCommand_Details">
            <summary>
              Looks up a localized string similar to Count = {0}, Delay = {1}, Blow Time = {2}.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlipBlowCommand_ToString">
            <summary>
              Looks up a localized string similar to Flip / Blow.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlipCommand_Details">
            <summary>
              Looks up a localized string similar to Piston = {0}, Count = {1}, Delay = {2}.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.FlipCommand_ToString">
            <summary>
              Looks up a localized string similar to Flip.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.ForwardBlowCommand_Details">
            <summary>
              Looks up a localized string similar to Acc = {0}, Dec = {1}, Speed = {2}, Angle = {3}, Blow Time = {4}.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.ForwardBlowCommand_ToString">
            <summary>
              Looks up a localized string similar to Forward / Blow.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.ForwardCommand_Details">
            <summary>
              Looks up a localized string similar to Acc = {0}, Dec = {1}, Speed = {2}, Angle = {3}.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.ForwardCommand_ToString">
            <summary>
              Looks up a localized string similar to Forward.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.ForwardFlipBlowCommand_Details">
            <summary>
              Looks up a localized string similar to Acc = {0}, Dec = {1}, Speed = {2}, Angle = {3}, Count = {4}, Delay = {5}, Blow Time = {6}.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.ForwardFlipBlowCommand_ToString">
            <summary>
              Looks up a localized string similar to Forward / Flip / Blow.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederAbortButtonText">
            <summary>
              Looks up a localized string similar to Abort.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederConfigurationControl_Controller">
            <summary>
              Looks up a localized string similar to Controller.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederConfigurationControl_FeederReadyInput">
            <summary>
              Looks up a localized string similar to Feeder Ready Input.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederConfigurationControl_PartProcessedOutput">
            <summary>
              Looks up a localized string similar to Part Processed Output.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederConfigurationControl_Selector_SelectAController">
            <summary>
              Looks up a localized string similar to Select A Controller.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederConfigurationControl_UseCustomProgram">
            <summary>
              Looks up a localized string similar to Use Custom Program.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederConfigurationControlr_UseHandshakeInput">
            <summary>
              Looks up a localized string similar to Use Handshake Input.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederConfigurationStatusControl_Controller">
            <summary>
              Looks up a localized string similar to Controller.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederConfigurationStatusControl_ControllerNotDefined">
            <summary>
              Looks up a localized string similar to The controller associated with the feeder is not defined in the IOFeeder Editor..
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederConfigurationStatusControl_Error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederConfigurationStatusControl_FeederReadyInput">
            <summary>
              Looks up a localized string similar to Feeder Ready Input.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederConfigurationStatusControl_FeedSequence">
            <summary>
              Looks up a localized string similar to Feed Sequence.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederConfigurationStatusControl_HandshakeInput">
            <summary>
              Looks up a localized string similar to Handshake Input.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederConfigurationStatusControl_PartProcessedOutput">
            <summary>
              Looks up a localized string similar to Part Processed Output.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederDefaultFeedProgram">
            <summary>
              Looks up a localized string similar to fdr.std.feed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederEditorStatus">
            <summary>
              Looks up a localized string similar to Status.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederErrorMessHeader">
            <summary>
              Looks up a localized string similar to IOFEEDER ERROR :.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederFeedButtonText">
            <summary>
              Looks up a localized string similar to Test Feed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederParamsControl_DebounceTime">
            <summary>
              Looks up a localized string similar to Debounce Time.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederParamsControl_Milliseconds">
            <summary>
              Looks up a localized string similar to ms.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederParamsControl_PartProcessedOutputDwell">
            <summary>
              Looks up a localized string similar to Part Processed Output Dwell.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederRetryButtonText">
            <summary>
              Looks up a localized string similar to Retry.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.IOFeederSkipButtonText">
            <summary>
              Looks up a localized string similar to Skip.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.LightOffCommand_ToString">
            <summary>
              Looks up a localized string similar to Light Off.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.LightOnCommand_ToString">
            <summary>
              Looks up a localized string similar to Light On.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.ResetCommand_ToString">
            <summary>
              Looks up a localized string similar to Reset.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.ShakeCommand_Details">
            <summary>
              Looks up a localized string similar to Acc = {0}, Dec = {1}, Speed = {2}, Angle = {3}, Count = {4}.
            </summary>
        </member>
        <member name="P:Ace.Feeder.GuiText.ShakeCommand_ToString">
            <summary>
              Looks up a localized string similar to Shake.
            </summary>
        </member>
        <member name="T:Ace.Feeder.ImageResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.Add">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.AnyFeeder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.ArrowDown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.ArrowRight">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.ArrowUp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.BulbOFF">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.BulbON">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.Flexibowl">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.InputDisabled">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.InputMixedValues">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.InputOff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.InputOn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.IOFeeder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.LocalDigitalIO">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.OutputDisabled">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.OutputOff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.OutputOn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.Play">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.Refresh">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.Remove">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.Selection">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Feeder.ImageResources.Stop">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Ace.Feeder.PropertyGrid">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.Blow">
            <summary>
              Looks up a localized string similar to Blow Parameters.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.BlowCommand_BlowTime">
            <summary>
              Looks up a localized string similar to Blowing time, in milliseconds..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.BlowCommand_BlowTime_DisplayName">
            <summary>
              Looks up a localized string similar to Blow Time.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.DelayCommand_Time">
            <summary>
              Looks up a localized string similar to Delay time, in milliseconds..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.DelayCommand_Time_DisplayName">
            <summary>
              Looks up a localized string similar to Delay Time.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeeder_Address">
            <summary>
              Looks up a localized string similar to The IP Address used to communicate with the FlexiBowl feeder..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeeder_Address_DisplayName">
            <summary>
              Looks up a localized string similar to Address.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeeder_AdeptSightIndex">
            <summary>
              Looks up a localized string similar to Sequence index used to reference the feeder through the V+ ACE Sight keywords..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeeder_AdeptSightIndex_DisplayName">
            <summary>
              Looks up a localized string similar to ACE Sight Index.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeeder_Model">
            <summary>
              Looks up a localized string similar to The model number of the FlexiBowl feeder..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeeder_Model_DisplayName">
            <summary>
              Looks up a localized string similar to Model.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeeder_OffsetFromParent">
            <summary>
              Looks up a localized string similar to Location of the feeder in the workspace..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeeder_OffsetFromParent_DisplayName">
            <summary>
              Looks up a localized string similar to Offset From Parent.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeeder_Visible">
            <summary>
              Looks up a localized string similar to Flag indicating whether the object should be rendered in 3D visualization..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeeder_Visible_DisplayName">
            <summary>
              Looks up a localized string similar to Visible.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_Acceleration">
            <summary>
              Looks up a localized string similar to Acceleration used for each subsequent “forward=1” instruction. Between 10 and 10000..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_Acceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Acceleration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_Angle">
            <summary>
              Looks up a localized string similar to Angle by which the feeder will advance at each subsequent “forward=1” instruction. This is positive for clockwise rotation, or negative for counter-clockwise rotation..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_Angle_DisplayName">
            <summary>
              Looks up a localized string similar to Angle.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_BlowTime">
            <summary>
              Looks up a localized string similar to Blowing time, in milliseconds..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_BlowTime_DisplayName">
            <summary>
              Looks up a localized string similar to Blow Time.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_Deceleration">
            <summary>
              Looks up a localized string similar to Deceleration used for each subsequent “forward=1” instruction. Between 10 and 10000..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_Deceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Deceleration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_FlipCount">
            <summary>
              Looks up a localized string similar to Number of ON/OFF cycles that the piston will perform at each subsequent “flip=1” instruction. Must be positive..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_FlipCount_DisplayName">
            <summary>
              Looks up a localized string similar to Flip Count.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_FlipDelay">
            <summary>
              Looks up a localized string similar to Time, in milliseconds, between an ON and an OFF of the piston at each subsequent “flip=1” instruction. Must be positive..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_FlipDelay_DisplayName">
            <summary>
              Looks up a localized string similar to Flip Delay.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_ShakeAccel">
            <summary>
              Looks up a localized string similar to Acceleration used for each subsequent “shake=1” instruction. Between 10 and 10000..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_ShakeAccel_DisplayName">
            <summary>
              Looks up a localized string similar to Shake Acceleration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_ShakeAngle">
            <summary>
              Looks up a localized string similar to Angle the feeder moves for each shake for subsequent “shake=1” instructions. With positive values the first movement will be clockwise, counter-clockwise for negative values..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_ShakeAngle_DisplayName">
            <summary>
              Looks up a localized string similar to Shake Angle.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_ShakeCount">
            <summary>
              Looks up a localized string similar to Number of movements, in alternate directions, to be performed at subsequent “shake=1” instructions. Example: sh_count=3 means the feeder will advance by sh_angle, go back by –sh_angle, and advance again by sh_angle..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_ShakeCount_DisplayName">
            <summary>
              Looks up a localized string similar to Shake Count.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_ShakeDecel">
            <summary>
              Looks up a localized string similar to Deceleration used for each subsequent “shake=1” instruction. Between 10 and 10000..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_ShakeDecel_DisplayName">
            <summary>
              Looks up a localized string similar to Shake Deceleration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_ShakeSpeed">
            <summary>
              Looks up a localized string similar to Speed, in RPM, at which to shake the feeder at each subsequent “shake=1” instruction. Between 1 and 130..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_ShakeSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Shake Speed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_Speed">
            <summary>
              Looks up a localized string similar to Speed, in RPM, at which the feeder will advance at each subsequent “forward=1” instruction. Between 1 and 130..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlexibowlFeederControlProperties_Speed_DisplayName">
            <summary>
              Looks up a localized string similar to Speed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.Flip">
            <summary>
              Looks up a localized string similar to Flip Parameters.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlipBlowCommand_BlowTime">
            <summary>
              Looks up a localized string similar to Blowing time, in milliseconds..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlipBlowCommand_BlowTime_DisplayName">
            <summary>
              Looks up a localized string similar to Blow Time.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlipBlowCommand_Count">
            <summary>
              Looks up a localized string similar to Number of ON/OFF cycles that the piston will perform at each subsequent “flip=1” instruction. Must be positive..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlipBlowCommand_Count_DisplayName">
            <summary>
              Looks up a localized string similar to Flip Count.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlipBlowCommand_Delay">
            <summary>
              Looks up a localized string similar to Time, in milliseconds, between an ON and an OFF of the piston at each subsequent “flip=1” instruction. Must be positive..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlipBlowCommand_Delay_DisplayName">
            <summary>
              Looks up a localized string similar to Flip Delay.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlipCommand_Count">
            <summary>
              Looks up a localized string similar to Number of ON/OFF cycles that the piston will perform at each subsequent “flip=1” instruction. Must be positive..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlipCommand_Count_DisplayName">
            <summary>
              Looks up a localized string similar to Flip Count.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlipCommand_Delay">
            <summary>
              Looks up a localized string similar to Time, in milliseconds, between an ON and an OFF of the piston at each subsequent “flip=1” instruction. Must be positive..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlipCommand_Delay_DisplayName">
            <summary>
              Looks up a localized string similar to Flip Delay.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlipCommand_Piston">
            <summary>
              Looks up a localized string similar to The piston number to actuate. Should be 1 or 2..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.FlipCommand_Piston_DisplayName">
            <summary>
              Looks up a localized string similar to Piston.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.Forward">
            <summary>
              Looks up a localized string similar to Forward Parameters.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardBlowCommand_Acceleration">
            <summary>
              Looks up a localized string similar to Acceleration used for each subsequent “forward=1” instruction. Between 10 and 10000..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardBlowCommand_Acceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Acceleration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardBlowCommand_Angle">
            <summary>
              Looks up a localized string similar to Angle by which the feeder will advance at each subsequent “forward=1” instruction. This is positive for clockwise rotation, or negative for counter-clockwise rotation..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardBlowCommand_Angle_DisplayName">
            <summary>
              Looks up a localized string similar to Angle.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardBlowCommand_BlowTime">
            <summary>
              Looks up a localized string similar to Blowing time, in milliseconds..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardBlowCommand_BlowTime_DisplayName">
            <summary>
              Looks up a localized string similar to Blow Time.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardBlowCommand_Deceleration">
            <summary>
              Looks up a localized string similar to Deceleration used for each subsequent “forward=1” instruction. Between 10 and 10000..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardBlowCommand_Deceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Deceleration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardBlowCommand_Speed">
            <summary>
              Looks up a localized string similar to Speed, in RPM, at which the feeder will advance at each subsequent “forward=1” instruction. Between 1 and 130..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardBlowCommand_Speed_DisplayName">
            <summary>
              Looks up a localized string similar to Speed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardCommand_Acceleration">
            <summary>
              Looks up a localized string similar to Acceleration used for each subsequent “forward=1” instruction. Between 10 and 10000..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardCommand_Acceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Acceleration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardCommand_Angle">
            <summary>
              Looks up a localized string similar to Angle by which the feeder will advance at each subsequent “forward=1” instruction. This is positive for clockwise rotation, or negative for counter-clockwise rotation..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardCommand_Angle_DisplayName">
            <summary>
              Looks up a localized string similar to Angle.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardCommand_Deceleration">
            <summary>
              Looks up a localized string similar to Deceleration used for each subsequent “forward=1” instruction. Between 10 and 10000..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardCommand_Deceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Deceleration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardCommand_Speed">
            <summary>
              Looks up a localized string similar to Speed, in RPM, at which the feeder will advance at each subsequent “forward=1” instruction. Between 1 and 130..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardCommand_Speed_DisplayName">
            <summary>
              Looks up a localized string similar to Speed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardFlipBlowCommand_Acceleration">
            <summary>
              Looks up a localized string similar to Acceleration used for each subsequent “forward=1” instruction. Between 10 and 10000..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardFlipBlowCommand_Acceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Acceleration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardFlipBlowCommand_Angle">
            <summary>
              Looks up a localized string similar to Angle by which the feeder will advance at each subsequent “forward=1” instruction. This is positive for clockwise rotation, or negative for counter-clockwise rotation..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardFlipBlowCommand_Angle_DisplayName">
            <summary>
              Looks up a localized string similar to Angle.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardFlipBlowCommand_BlowTime">
            <summary>
              Looks up a localized string similar to Blowing time, in milliseconds..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardFlipBlowCommand_BlowTime_DisplayName">
            <summary>
              Looks up a localized string similar to Blow Time.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardFlipBlowCommand_Count">
            <summary>
              Looks up a localized string similar to Number of ON/OFF cycles that the piston will perform at each subsequent “flip=1” instruction. Must be positive..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardFlipBlowCommand_Count_DisplayName">
            <summary>
              Looks up a localized string similar to Flip Count.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardFlipBlowCommand_Deceleration">
            <summary>
              Looks up a localized string similar to Deceleration used for each subsequent “forward=1” instruction. Between 10 and 10000..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardFlipBlowCommand_Deceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Deceleration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardFlipBlowCommand_Delay">
            <summary>
              Looks up a localized string similar to Time, in milliseconds, between an ON and an OFF of the piston at each subsequent “flip=1” instruction. Must be positive..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardFlipBlowCommand_Delay_DisplayName">
            <summary>
              Looks up a localized string similar to Flip Delay.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardFlipBlowCommand_Speed">
            <summary>
              Looks up a localized string similar to Speed, in RPM, at which the feeder will advance at each subsequent “forward=1” instruction. Between 1 and 130..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ForwardFlipBlowCommand_Speed_DisplayName">
            <summary>
              Looks up a localized string similar to Speed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.Shake">
            <summary>
              Looks up a localized string similar to Shake Parameters.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ShakeCommand_Acceleration">
            <summary>
              Looks up a localized string similar to Acceleration used for each subsequent “shake=1” instruction. Between 10 and 10000..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ShakeCommand_Acceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Shake Acceleration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ShakeCommand_ClockwiseAngle">
            <summary>
              Looks up a localized string similar to Clockwise angle the feeder moves for each shake for subsequent “shake=1” instructions. .
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ShakeCommand_ClockwiseAngle_DisplayName">
            <summary>
              Looks up a localized string similar to Shake Clockwise Angle.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ShakeCommand_Count">
            <summary>
              Looks up a localized string similar to Number of movements, in alternate directions, to be performed at subsequent “shake=1” instructions. Example: sh_count=3 means the feeder will advance by sh_angle, go back by –sh_angle, and advance again by sh_angle..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ShakeCommand_Count_DisplayName">
            <summary>
              Looks up a localized string similar to Shake Count.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ShakeCommand_CounterClockwiseAngle">
            <summary>
              Looks up a localized string similar to Counter Clockwise angle the feeder moves for each shake for subsequent “shake=1” instructions. .
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ShakeCommand_CounterClockwiseAngle_DisplayName">
            <summary>
              Looks up a localized string similar to Shake Counter Clockwise Angle.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ShakeCommand_Deceleration">
            <summary>
              Looks up a localized string similar to Deceleration used for each subsequent “shake=1” instruction. Between 10 and 10000..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ShakeCommand_Deceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Shake Deceleration.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ShakeCommand_Speed">
            <summary>
              Looks up a localized string similar to Speed, in RPM, at which to shake the feeder at each subsequent “shake=1” instruction. Between 1 and 130..
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.ShakeCommand_Speed_DisplayName">
            <summary>
              Looks up a localized string similar to Shake Speed.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PropertyGrid.Simulation">
            <summary>
              Looks up a localized string similar to 3D Visualization.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.AnyFeeder">
            <summary>
            Represents a physical instance of an AnyFeeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.ChannelType">
            <summary>
            Gets the type of the channel used by this Anyfeeder.
            </summary>
            <value>The type of the channel.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.Channel">
            <summary>
            Gets the channel.
            </summary>
            <value>The channel.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.ControlProperties">
            <summary>
            Gets AnyFeederControlProperties
            </summary>
            <value>The control values.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.ComPortName">
            <summary>
            Gets the name of the COM port.
            </summary>
            <value>The name of the COM port.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.CurrentFeederState">
            <summary>
            Gets or sets the  current state of the AnyFeeder.
            </summary>
            <value>The state of the AnyFeeder.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.IsWellConfigured">
            <summary>
            Gets a value indicating whether this instance is well configured.
            </summary>
            <value>
            	<c>true</c> if this instance is well configured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.RunningCommand">
            <summary>
            Gets or sets the  current running command of the AnyFeeder.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.Log">
            <summary>
            Gets the log associated with the communications channel
            </summary>
            <value>
            The log.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.ErrorCode">
            <summary>
            Gets an int value indicating the current AnyFeeder error code.
            </summary>
            <value>The error code.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.FirmwareVersion">
            <summary>
            Gets the firmware version for the AnyFeeder
            </summary>
            <value>
            The firmware version.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.ExposableItems">
            <summary>
            Get the exposable data items
            </summary>
            <value></value>
            <returns>The list of exposable items</returns>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.AdeptSightIndex">
            <summary>
            Gets or sets the index used to identify the AnyFeeder from Adept Sight 3
            </summary>
            <value>The index of this Anyfeeder in adept sight.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.AdeptSightVRunCommand">
            <summary>
            Gets or sets the command Feeder has to perform at a VRUN in AdeptSight 3 configuration
            </summary>
            <value>The index of this Anyfeeder in adept sight.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.IsBusy">
            <summary>
            Gets the flag indicating a command is running
            </summary>
            <value>
            	<c>true</c> if a command is running; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.IsInError">
            <summary>
            Gets an information to know if AnyFeeder is in error.
            </summary>
            <value>The Error state.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.Model">
            <summary>
            Gets or sets the model of the AnyFeeder.
            </summary>
            <value>
            The AnyFeeder model.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeeder.Sequences">
            <summary>
            Gets the custom defined motion sequences 
            </summary>
            <value>
            The sequences.
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.AnyFeeder"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.AnyFeeder"/> class.
            Used ONLY if the default channel is not the one we want to use.
            In all other cases AnyFeeder() constructor should be preferred.
            </summary>
            <param name="channelTypeVal">The channel type.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that  it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.Dispose(System.Boolean)">
            <summary>
            Disposes of this object by disabling remote access.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.InitializeComConnection(System.String)">
            <summary>
            Initializes the COM connection.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.AnyFeederControl_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the AnyFeederControl control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.dataItems_ExposableItemChanged(System.Object,Ace.Core.Server.DataItems.ExposableDataItemChangedEventArgs)">
            <summary>
            Handles the ExposableItemChanged event of the dataItems control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.DataItems.ExposableDataItemChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.FeedForward(System.Boolean)">
            <summary>
            Performs a FeedForward operation. This action makes the parts advancing forward on the picking surface.
            </summary>
            <param name="waitCompletion">Defines if we want to wait the end of the operation or not</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.FeedBackward(System.Boolean)">
            <summary>
            Performs a FeedBackward operation. This action makes the parts advancing Backward on the picking surface.
            </summary>
            <param name="waitCompletion">if set to <c>true</c> [wait completion].</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.FeedFlipForward(System.Boolean)">
            <summary>
            Performs a Feed/Flip Forward operation. This action makes the parts advancing forward on the picking surface and shakes them in the same time.
            </summary>
            <param name="waitCompletion">if set to <c>true</c> [wait completion].</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.FeedFlipBackward(System.Boolean)">
            <summary>
            Performs a Feed/Flip Backward operation.This action makes the parts advancing backward on the picking surface and shakes them in the same time.
            </summary>
            <param name="waitCompletion">if set to <c>true</c> [wait completion].</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.Flip(System.Boolean)">
            <summary>
            Performs a Flip operation. This action shakes the parts to separate and/or flip them.
            </summary>
            <param name="waitCompletion">if set to <c>true</c> [wait completion].</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.Dispense(System.Boolean)">
            <summary>
            Performs a Dispense operation. This action makes the parts falling from the bulk to AnyFeeder pick Surface.
            </summary>
            <param name="waitCompletion">if set to <c>true</c> [wait completion].</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.HeavyDispense(System.Boolean)">
            <summary>
            Performs a Heavy Dispense operation. This action makes the parts falling from the bulk to AnyFeeder pick Surface.
            </summary>
            <param name="waitCompletion">if set to <c>true</c> [wait completion].</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.Purge(System.Boolean)">
            <summary>
            Performs a Purge operation. This operation makes the parts moving backward on the pick surface AND the bulk.
            </summary>
            <param name="waitCompletion">if set to <c>true</c> [wait completion].</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.ErrorReset(System.Boolean)">
            <summary>
            Reset the AnyFeeder device internal errors.
            </summary>
            <param name="waitCompletion">if set to <c>true</c> [wait completion].</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.SystemInit(System.Boolean)">
            <summary>
            Performs the AnyFeeder device initialization. This is a hardware initialization.
            This method sends initialization commands to the command queue. It does not wait for completion and if another
            command is sent it will automatically be executed once initialization is done.
            </summary>
            <param name="waitCompletion">Defines if we want to wait the end of the operation or not</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.AbortMotion(System.Boolean)">
            <summary>
            Stops the current operation performed by the AnyFeeder
            </summary>
            <param name="waitCompletion">Defines if we want to wait the end of the operation or not</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.FirmwareRestart(System.Boolean)">
            <summary>
            Restarts the AnyFeeder device firmware
            </summary>
            <param name="waitCompletion">if set to <c>true</c> [wait completion].</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.SwitchBackLight(System.Boolean,System.Boolean)">
            <summary>
            Switches the backlight ON or OFF.
            </summary>
            <param name="state">Indicates the BackLight state (ON or OFF)</param>
            <param name="waitCompletion">if set to <c>true</c> [wait completion].</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.Delay(System.Int32,System.Boolean)">
            <summary>
            Issues a delay of the specified duration in ms.
            </summary>
            <param name="duration">The delay ms.</param>
            <param name="waitCompletion">if set to <c>true</c> wait until the command has completed.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.ReadFirmwareVersion">
            <summary>
            Reads the firmware version.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.CheckChannel">
            <summary>
            Checks the channel. Get it or set error if COM port name is not correct.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.channel_statusChanged(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the statusChanged event of the channel.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.sequence_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the sequence control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.WaitOperationStarted(System.Int32)">
            <summary>
            Waits the AnyFeeder operation started.
            </summary>
            <param name="msTimeout">The timeout in milliseconds.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.AddSequence(Ace.Feeder.Server.AnyFeeder.IAnyFeederSequence)">
            <summary>
            Adds the custom motion sequence.
            </summary>
            <param name="sequence">The sequence.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.AddSequence(Ace.Feeder.Server.AnyFeeder.IAnyFeederSequence,System.Boolean)">
            <summary>
            Adds the custom motion sequence.
            </summary>
            <param name="sequence">The sequence.</param>
            <param name="throwEvent">if set to <c>true</c> it will trow the sequence modified event.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.RemoveSequence(Ace.Feeder.Server.AnyFeeder.IAnyFeederSequence)">
            <summary>
            Removes the custom motion sequence.
            </summary>
            <param name="sequence">The sequence.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.RemoveSequence(Ace.Feeder.Server.AnyFeeder.IAnyFeederSequence,System.Boolean)">
            <summary>
            Removes the custom motion sequence.
            </summary>
            <param name="sequence">The sequence.</param>
            <param name="throwEvent">if set to <c>true</c> it will trow the sequence modified event.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.ExecuteSequence(System.Int32,System.Boolean)">
            <summary>
            Executes the sequence with the specified index
            </summary>
            <param name="commandIndex">Index of the command.</param>
            <param name="waitComplete">if set to <c>true</c> wait until the command has completed.</param>
            <exception cref="T:System.Exception">Unknown Command</exception>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.Apply(Ace.Feeder.Server.AnyFeeder.AnyFeeder)">
            <summary>
            Applies the properties of the specified feeder.
            </summary>
            <param name="feeder">The feeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeeder.CreateRecipeConfiguration">
            <summary>
            Creates and returns a new recipe configuration.
            </summary>
            <value>
            The recipe configuration.
            </value>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence">
            <summary>
            Represents a sequence of AnyFeeder operations
            </summary>
        </member>
        <member name="E:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.PropertyModified">
            <summary>
            An event raised when a property is modified. Note that not all properties will throw this event.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.CommandIndex">
            <summary>
            Gets or sets the index used to trigger the command from V+.
            </summary>
            <value>
            The index of the command.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.Operations">
            <summary>
            Gets the operations associated with the sequence
            </summary>
            <value>
            The operations.
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that  it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.OnPropertyModified(System.String)">
            <summary>
            Called when a property is modified.
            </summary>
            <param name="propertyName">Name of the modified property.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.Execute(Ace.Feeder.Server.AnyFeeder.IAnyFeeder,System.Boolean)">
            <summary>
            Executes the sequence.
            </summary>
            <param name="anyFeeder">The AnyFeeder used in the execution sequence.</param>
            <param name="waitComplete">if set to <c>true</c> wait until execution has completed.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.Add(System.Collections.Generic.List{Ace.Feeder.Server.AnyFeeder.IAnyFeederOperation})">
            <summary>
            Adds the specified list operations.
            </summary>
            <param name="operations">The list operation.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.Add(Ace.Feeder.Server.AnyFeeder.IAnyFeederOperation)">
            <summary>
            Adds the specified operation.
            </summary>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.Insert(System.Int32,Ace.Feeder.Server.AnyFeeder.IAnyFeederOperation)">
            <summary>
            Inserts the specified operation.
            </summary>
            <param name="index">The index.</param>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.Remove(Ace.Feeder.Server.AnyFeeder.IAnyFeederOperation)">
            <summary>
            Removes the specified operation.
            </summary>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.RemoveAt(System.Int32)">
            <summary>
            Removes the operation at the specified index
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.IndexOf(Ace.Feeder.Server.AnyFeeder.IAnyFeederOperation)">
            <summary>
            Returns the index of the specified operation.
            </summary>
            <param name="operation">The operation.</param>
            <returns>The index of the operation</returns>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederSequence.operation_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the operation control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.AnyFeederOperation">
            <summary>
            Represents an AnyFeeder operation that can be initiated from an AnyFeeder Sequence.
            </summary>
        </member>
        <member name="E:Ace.Feeder.Server.AnyFeeder.AnyFeederOperation.PropertyModified">
            <summary>
            An event raised when a property is modified. Note that not all properties will throw this event.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederOperation.Operation">
            <summary>
            Gets or sets the operation.
            </summary>
            <value>
            The operation.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederOperation.Iterations">
            <summary>
            Gets or sets the number of iterations.
            </summary>
            <value>
            The iterations.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederOperation.Speed">
            <summary>
            Gets or sets the speed.
            </summary>
            <value>
            The speed.
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.AnyFeederOperation"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederOperation.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederOperation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that  it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederOperation.OnPropertyModified(System.String)">
            <summary>
            Called when a property is modified.
            </summary>
            <param name="propertyName">Name of the modified property.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederOperation.Execute(Ace.Feeder.Server.AnyFeeder.IAnyFeeder,System.Boolean)">
            <summary>
            Executes the operation on the specified AnyFeeder.
            </summary>
            <param name="anyFeeder">The AnyFeeder.</param>
            <param name="waitComplete">if set to <c>true</c> wait until execution has completed.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederOperation.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederDelayCommand">
            <summary>
            Command performing a delay operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederDelayCommand.#ctor(Ace.Feeder.Server.AnyFeeder.IAnyFeeder,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederDelayCommand" /> class.
            </summary>
            <param name="anyFeeder">The Anyfeeder.</param>
            <param name="delay">The delay.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederDelayCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederDelayCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederFirmwareCommand">
            <summary>
            Command performing a delay operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederFirmwareCommand.Version">
            <summary>
            Gets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederFirmwareCommand.#ctor(Ace.Feeder.Server.AnyFeeder.IAnyFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederFirmwareCommand" /> class.
            </summary>
            <param name="anyFeeder">The Anyfeeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederFirmwareCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederFirmwareCommand.WaitCompletion(System.Double)">
            <summary>
            Waits the completion of the last command sent to the AnyFeeder.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederFirmwareCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand">
            <summary>
            The base AnyFeeder command class
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.myChannel">
            <summary>
            The channel to use for communication. Set by the channel itself when dequeuing the command
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.myCommand">
            <summary>
            The AnyFeeder command to be performed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.Command">
            <summary>
            Gets the AnyFeeder command to be performed.
            </summary>
            <value>The command.</value>
        </member>
        <member name="F:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.expectedCommandTime">
            <summary>
            The time (in seconds) command is expected to take to complete.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.ExpectedCommandDuration">
            <summary>
            Gets the time (in seconds) command is expected to take to complete.
            </summary>
            <value>The expected command time.</value>
        </member>
        <member name="F:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.commandDone">
            <summary>
            Indicates the command has been done
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.abortCommandFlag">
            <summary>
            Value indicating the current movement has to be stopped
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.AbortCommand">
            <summary>
            Aborts the command.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.SendParameterValue(Ace.Feeder.Server.AnyFeeder.AnyFeederParameters,System.Int32)">
            <summary>
            Sends a parameter value to the AnyFeeder. This function sends the parameter value and exits.
            It has to be used when no reply from the AnyFeeder is expected.
            </summary>
            <param name="parameter">The parameter to write.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.SendParameterValue(Ace.Feeder.Server.AnyFeeder.AnyFeederParameters,System.Int32,System.Double)">
            <summary>
            Sends a parameter value to the AnyFeeder. This function sends the parameter value and waits for a reply.
            It has to be used for the speed parameters as in this particular case we have to wait for a reply from AnyFeeder.
            </summary>
            <param name="parameter">The parameter.</param>
            <param name="value">The value.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.ResetMotors">
            <summary>
            Sends a command to reset/re-address the motors.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.SendCommand(Ace.Feeder.Server.AnyFeeder.AnyFeederCommands)">
            <summary>
            Send a command to the anyFeeder.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.WaitCompletion(System.Double)">
            <summary>
            Waits the completion of the last command sent to the AnyFeeder.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.Run">
            <summary>
            Runs the Command.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand.Initialize(Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel)">
            <summary>
            Initializes the specified channel.
            </summary>
            <param name="channel">The channel.</param>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederControlCommand">
            <summary>
            Command performing a control operation on the AnyFeeder.
            Commands can be : Stop, ErrorReset, Init, Firmware restart
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederControlCommand.#ctor(Ace.Feeder.Server.AnyFeeder.IAnyFeeder,Ace.Feeder.Server.AnyFeeder.AnyFeederCommands)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederControlCommand"/> class.
            </summary>
            <param name="anyFeeder">the AnyFeeder. Can be null as command does not need to get some parameters inside.</param>
            <param name="cmd">The command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederControlCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederControlCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederIOCommand">
            <summary>
            Command performing an IO operation on the AnyFeeder.
            Commands can be switching the Backlight ON or OFF
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederIOCommand.#ctor(Ace.Feeder.Server.AnyFeeder.IAnyFeeder,Ace.Feeder.Server.AnyFeeder.AnyFeederCommands)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederIOCommand"/> class.
            </summary>
            <param name="anyFeeder">The Anyfeeder.</param>
            <param name="cmd">The Command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederIOCommand.storeParamInformation(Ace.Feeder.Server.AnyFeeder.IAnyFeeder)">
            <summary>
            Stores speed and iterations parameters identifications and values so we know which value to set on which parameter
            </summary>
            <param name="anyFeeder">The Anyfeeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederIOCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederIOCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederMovementCommand">
            <summary>
            Command performing a movement operation of the AnyFeeder.
            Commands can be : FeedForward, FeedBackWard, FeedFlipForward, FeedLipBackWard, Flip
            Purge, Dispense or Heavydispense
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederMovementCommand.#ctor(Ace.Feeder.Server.AnyFeeder.IAnyFeeder,Ace.Feeder.Server.AnyFeeder.AnyFeederCommands)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederMovementCommand"/> class.
            </summary>
            <param name="anyFeeder">The Anyfeeder.</param>
            <param name="cmd">The Command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederMovementCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederMovementCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederMovementCommand.StoreParamInformation(Ace.Feeder.Server.AnyFeeder.IAnyFeeder)">
            <summary>
            Stores speed and iterations parameters identifications and values so we know which value to set on which parameter
            </summary>
            <param name="anyFeeder">The Anyfeeder.</param>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeConfiguration">
            <summary>
            Represents a configuration of items included in a recipe.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeConfiguration.Feeder">
            <summary>
            Gets the feeder associated with the configuration
            </summary>
            <value>
            The feeder.
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeConfiguration.#ctor(Ace.Core.Server.Recipes.IRecipeSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeConfiguration" /> class.
            </summary>
            <param name="recipeSource">The recipe source.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeConfiguration"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeConfiguration.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeConfiguration.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeConfiguration.CreateRecipeComponent">
            <summary>
            Creates a new recipe component based on the current configuration
            </summary>
            <returns>The recipe component</returns>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeConfiguration.ConvertRecipeComponent(System.Boolean,Ace.Core.Server.Recipes.RecipeComponentBase)">
            <summary>
            Converts the recipe component based on the current recipe configuration settings.
            </summary>
            <param name="isActive">if set to <c>true</c> this component is from the active recipe.</param>
            <param name="recipeComponent">The recipe component to convert.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeConfiguration.Apply(Ace.Core.Server.Recipes.RecipeComponentBase)">
            <summary>
            Applies the specified recipe component to the source.
            </summary>
            <param name="recipeComponent">The recipe component.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeConfiguration.Feeder_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the Feeder control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent">
            <summary>
            Represents an instance of data associated with a recipe / recipe component.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent.Feeder">
            <summary>
            Gets the feeder
            </summary>
            <value>
            The feeder
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent.#ctor(Ace.Core.Server.Recipes.IRecipeSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent" /> class.
            </summary>
            <param name="recipeSource">The recipe source.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>		
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent.Apply">
            <summary>
            Applies the recipe information to the source
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent.CreateEditCopy">
            <summary>
            Creates a copy of the component for editing.
            </summary>
            <returns>A copy of the current object used only for editing</returns>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent.ApplyEditCopy(Ace.Core.Server.Recipes.RecipeComponentBase,System.Boolean)">
            <summary>
            Applies the edit copy to the component.
            </summary>
            <param name="component">The component.</param>
            <param name="isSelected">if set to <c>true</c> the recipe associated with the component is the active/selected recipe.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederRecipeComponent.feeder_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the feeder control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties">
            <summary>
            Identifies the properties associated with the AnyFeeder Control.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.BackLightState">
            <summary>
            Gets or sets the AnyFeeder BackLigh activity
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.FeedForwardIterations">
            <summary>
            Gets or sets the feed forward action number of iterations
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.FeedForwardSpeed">
            <summary>
            Gets or sets the feed forward action speed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.FeedBackwardIterations">
            <summary>
            Gets or sets the feed backward number of iterations
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.FeedBackwardSpeed">
            <summary>
            Gets or sets the feed backward action speed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.FeedFlipForwardIterations">
            <summary>
            Gets or sets the feed/flip forward action number of iterations
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.FeedFlipForwardSpeed">
            <summary>
            Gets or sets the feed/flip forward action speed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.FeedFlipBackwardIterations">
            <summary>
            Gets or sets the feed/flip backward action number of iterations
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.FeedFlipBackwardSpeed">
            <summary>
            Gets or sets the feed/flip backward action speed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.FlipIterations">
            <summary>
            Gets or sets the flip action number of iterations
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.FlipSpeed">
            <summary>
            Gets or sets the flip action speed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.DispenseIterations">
            <summary>
            Gets or sets the dispense action number of iterations
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.DispenseSpeed">
            <summary>
            Gets or sets the dispense action speed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.HeavyDispenseIterations">
            <summary>
            Gets or sets the heavy dispense action number of iterations
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.HeavyDispenseSpeed">
            <summary>
            Gets or sets the heavy dispense action speed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.PurgeIterations">
            <summary>
            Gets or sets the purge action number of iterations
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.PurgeSpeed">
            <summary>
            Gets or sets the purge action speed
            </summary>
        </member>
        <member name="E:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.PropertyModified">
            <summary>
            An event raised when the object is modified.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.OnPropertyModified(System.String)">
            <summary>
            Trigger event indicating the object was modified
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.AnyFeederControlProperties"/> class.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel">
            <summary>
            Class managing a COM port to communicate to 1 or several AnyFeeders
            Physically only 1 AnyFeeder is connected to a single COM port but several AnyFeeder objects may be created
            to allow several configurations in the workspace
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.initDone">
            <summary>
            Indicates the hardware initialization was performed
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.deviceAlive">
            <summary>
            Flag indicating whether the AnyFeeder device is alive or not.
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.thread">
            <summary>
            The thread that will execute the cycle
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.stopBackgroundThread">
            <summary>
            A flag indicating the background thread must be stopped
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.isBackgroundThreadRunning">
            <summary>
            Indicates background thread is running and processing commands
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.ComPortName">
            <summary>
            Gets the name of the COM port managed by this channel.
            </summary>
            <value>The name of the COM port.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.Started">
            <summary>
            Gets a value indicating whether this <see cref="T:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel"/> is started.
            </summary>
            <value><c>true</c> if started; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.State">
            <summary>
            Gets the state of the channel.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.RunningCommand">
            <summary>
            Gets the command that is being executed by the queue.
            </summary>
            <value>The running command.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.Log">
            <summary>
            Gets the log of text send across the channel
            </summary>
            <value>
            The log text
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.ExpectedCommandDuration">
            <summary>
            Gets the expected duration of the running command.
            </summary>
            <value>The expected duration of the command.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.ErrorCode">
            <summary>
            Gets the error code.
            </summary>
            <value>The error code.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.NextCommandDelay">
            <summary>
            Get or Set the ms value used to delay next command start
            </summary>
            <value>The delay.</value>
        </member>
        <member name="E:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.ChannelStatusEvent">
            <summary>
            An event raised when the object is modified.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.SendChannelEvent(System.String)">
            <summary>
            Trigger event indicating the object was modified
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.SetState(Ace.Feeder.Server.AnyFeeder.AnyFeederState)">
            <summary>
            Sets the error code and message and triggers the corresponding event.
            </summary>
            <param name="StateVal">The state val.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.Initialize(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel"/> class.
            </summary>
            <param name="portName">Name of the COM port this Channel will manage.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.AddToQueue(Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand)">
            <summary>
            Adds a command to the queue.
            </summary>
            <param name="cmd">The Command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.AddControlCommand(Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederControlCommand)">
            <summary>
            Adds a control command to the queue. This is a special case as some conditions have to be checked
            </summary>
            <param name="cmd">The Command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.DequeueCommand">
            <summary>
            Dequeues the next command to be executed. Checks depending on status what commands should be ignored or not.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.ExecuteCommand">
            <summary>
            Executes the command.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.AddToLog(System.String[])">
            <summary>
            Adds the text to the log.
            </summary>
            <param name="texts">The text items to add.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.BackgroundThread">
            <summary>
            The background thread running to perform the enqueued commands
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.CheckAnyFeederAlive">
            <summary>
            Checks any feeder is alive.
            It sends a command with an unknown number : AnyFeeder does nothing but should report "m12" and "m22" meaning "unknown command"
            If it does not reply, we can consider the communication is down.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.Write(System.String)">
            <summary>
            Writes the specified value to the channel (in this case a COM Port)
            </summary>
            <param name="str">The STR.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.Read">
            <summary>
            Writes the specified value to the channel (in this case a COM Port)
            </summary>
            <returns>The read value</returns>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.CleanInputBuffer">
            <summary>
            Cleans the reception buffer.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel.CleanOutputBuffer">
            <summary>
            Cleans the reception buffer.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannelProvider">
            <summary>
            The AnyfeederChannelProvider class. Exposes methods allowing AnyFeeders to get their Channel.
            Intended to be only used from AnyFeeder objects.
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannelProvider.channelProvider">
            <summary>
            The channel provider singleton instance
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannelProvider.accessLock">
            <summary>
            An object securing the access in case of a multithread access
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannelProvider.ChannelProvider">
            <summary>
            Gets the channel provider.
            </summary>
            <value>The channel provider.</value>
        </member>
        <member name="F:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannelProvider.channelList">
            <summary>
            List of all the AnyFeeder channels.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannelProvider.GetChannel(Ace.Feeder.Server.AnyFeeder.IAnyFeeder)">
            <summary>
            Gets the channel corresponding to the given AnyFeeder.
            </summary>
            <param name="fdr">The AnyFeeder.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannelProvider.UnregisterAnyFeeder(Ace.Feeder.Server.AnyFeeder.IAnyFeeder)">
            <summary>
            Method used by an anyFeeder to unregister itself from its channel.
            If no more Anyfeeders are using the channel it can be destroyed...
            </summary>
            <param name="anyFeeder">The AnyFeeder.</param>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederEmulationChannel">
            <summary>
            Class managing a dummy channel to perform anyFeeder testing
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederEmulationChannel.GetSentStrings">
            <summary>
            Gets the sent strings and reset the list.
            </summary>
            <value>The sent strings.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederEmulationChannel.ComPortName">
            <summary>
            Gets the name of the COM port managed by this channel.
            </summary>
            <value>The name of the COM port.</value>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederEmulationChannel.Initialize(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederEmulationChannel"/> class.
            </summary>
            <param name="portName">Name of the COM port this Channel will manage.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederEmulationChannel.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederEmulationChannel.Write(System.String)">
            <summary>
            Writes the specified value to the channel (in this case a COM Port)
            </summary>
            <param name="str">The STR.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederEmulationChannel.Read">
            <summary>
            Writes the specified value to the channel (in this case a COM Port)
            </summary>
            <returns>The read value</returns>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederEmulationChannel.CleanInputBuffer">
            <summary>
            Cleans the reception buffer.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederEmulationChannel.CleanOutputBuffer">
            <summary>
            Cleans the reception buffer.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederEmulationChannel.CheckAnyFeederAlive">
            <summary>
            Checks any feeder is alive.
            This is the Emulation channel : it is considered always alive.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel">
            <summary>
            Class managing a COM port to communicate to 1 or several AnyFeeders
            Physically only 1 AnyFeeder is connected to a single COM port but several AnyFeeder objects may be created
            to allow several configurations in the workspace
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.ComPortName">
            <summary>
            Gets the name of the COM port managed by this channel.
            </summary>
            <value>The name of the COM port.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.State">
            <summary>
            Gets the state of the channel.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.RunningCommand">
            <summary>
            Gets the command that is being executed by the queue.
            </summary>
            <value>The running command.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.Log">
            <summary>
            Gets the log of text send accross the channel
            </summary>
            <value>
            The log text
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.Started">
            <summary>
            Gets a value indicating whether this <see cref="T:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel"/> is started.
            </summary>
            <value><c>true</c> if started; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.ErrorCode">
            <summary>
            Gets the error code.
            </summary>
            <value>The error code.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="P:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.NextCommandDelay">
            <summary>
            Get or Set the ms value used to delay next command start
            </summary>
            <value>The delay.</value>
        </member>
        <member name="E:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.ChannelStatusEvent">
            <summary>
            An event raised when the object is modified.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.AddToQueue(Ace.Feeder.Server.AnyFeeder.Commands.AnyFeederBaseCommand)">
            <summary>
            Adds a command to the queue.
            </summary>
            <param name="cmd">The Command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.Write(System.String)">
            <summary>
            Writes the specified value to the channel (in this case a COM Port)
            </summary>
            <param name="str">The STR.</param>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.Read">
            <summary>
            Read from the channel (in this case a COM Port)
            </summary>
            <returns>The read value</returns>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.CleanInputBuffer">
            <summary>
            Cleans the reception buffer.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.CleanOutputBuffer">
            <summary>
            Cleans the reception buffer.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.AnyFeeder.Channel.IAnyFeederChannel.Initialize(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.AnyFeeder.Channel.AnyFeederChannel"/> class.
            </summary>
            <param name="portName">Name of the COM port this Channel will manage.</param>
        </member>
        <member name="T:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem">
            <summary>
            The Data Item class for the Anyfeeder Commands
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.anyFeeder">
            <summary>
            The AnyFeeder associated with the data item
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.AnyFeeder">
            <summary>
            Gets or sets the AnyFeeder.
            </summary>
            <value>The Anyfeeder.</value>
        </member>
        <member name="F:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.command">
            <summary>
            The Command the DataItem is associated with
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.Command">
            <summary>
            Gets or sets the tip state for the data item
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.InitializeDataItems(Ace.Feeder.Server.AnyFeeder.IAnyFeeder)">
            <summary>
            Initializes the data items.
            </summary>
            <param name="anyFeed">AnyFeeder.</param>
        </member>
        <member name="P:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.AssociatedController">
            <summary>
            Gets the name of a controller associated with the data item.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.GetValue">
            <summary>
            Gets the current value of the data item. This is the running status of the Anyfeeder
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.SetValue(System.Double)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value. -1 is starting a command. Any other value does nothing.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="P:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.TagPath">
            <summary>
            Gets the full path, including the tag name, used to identify the data item.
            This must be unique for each item in the whole workspace.
            </summary>
            <value>The tag path.</value>
        </member>
        <member name="P:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.Category">
            <summary>
            Gets the category to which the data item belongs.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="M:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Feeder.Server.DataItems.AnyFeederCommandDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem">
            <summary>
            The Data Item class for the Anyfeeder Parameters
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.anyFeeder">
            <summary>
            The AnyFeeder associated with the data item
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.AnyFeeder">
            <summary>
            Gets or sets the AnyFeeder.
            </summary>
            <value>The Anyfeeder.</value>
        </member>
        <member name="F:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.parameter">
            <summary>
            The parameter the DataItem is associated with
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.Parameter">
            <summary>
            Gets or sets the tip state for the data item
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.InitializeDataItems(Ace.Feeder.Server.AnyFeeder.IAnyFeeder)">
            <summary>
            Initializes the data items.
            </summary>
            <param name="anyFeed">AnyFeeder.</param>
        </member>
        <member name="P:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.AssociatedController">
            <summary>
            Gets the name of a controller associated with the data item.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.SetValue(System.Double)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="P:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.TagPath">
            <summary>
            Gets the full path, including the tag name, used to identify the data item.
            This must be unique for each item in the whole workspace.
            </summary>
            <value>The tag path.</value>
        </member>
        <member name="P:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.Category">
            <summary>
            Gets the category to which the data item belongs.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="M:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Feeder.Server.DataItems.AnyFeederParamDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent">
            <summary>
            Represents an instance of data associated with a recipe / recipe component.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent.Feeder">
            <summary>
            Gets the feeder
            </summary>
            <value>
            The feeder
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent.#ctor(Ace.Core.Server.Recipes.IRecipeSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent" /> class.
            </summary>
            <param name="recipeSource">The recipe source.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent.Apply">
            <summary>
            Applies the recipe information to the source
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent.CreateEditCopy">
            <summary>
            Creates a copy of the component for editing.
            </summary>
            <returns>A copy of the current object used only for editing</returns>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent.ApplyEditCopy(Ace.Core.Server.Recipes.RecipeComponentBase,System.Boolean)">
            <summary>
            Applies the edit copy to the component.
            </summary>
            <param name="component">The component.</param>
            <param name="isSelected">if set to <c>true</c> the recipe associated with the component is the active/selected recipe.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeComponent.feeder_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the feeder control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.Channel.FlexibowlFeederChannelProvider">
            <summary>
            Manages the available FlexibowlFeederChannel objects
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Channel.FlexibowlFeederChannelProvider.ChannelProvider">
            <summary>
            Gets the channel provider.
            </summary>
            <value>The channel provider.</value>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexibowlFeederChannelProvider.GetChannel(Ace.Feeder.Server.Flexibowl.IFlexibowlFeeder)">
            <summary>
            Gets the channel corresponding to the given feeder.
            </summary>
            <param name="fdr">The feeder.</param>
            <returns>The channel to use for the specified feeder</returns>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexibowlFeederChannelProvider.UnregisterChannel(Ace.Feeder.Server.Flexibowl.IFlexibowlFeeder)">
            <summary>
            Method used by a feeder to unregister itself from its channel.
            If no more feeders are using the channel it can be destroyed.
            </summary>
            <param name="feeder">The feeder.</param>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel">
            <summary>
            Class managing a communications port to communicate to 1 or several feeders.
            Several Flexibowl feeder objects may be created to use the same channel. 
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.EmulationMode">
            <summary>
            Gets a value indicating whether we are running in emulation mode.
            </summary>
            <value>
              <c>true</c> if we are running in emulation mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.Address">
            <summary>
            Gets the address managed by this connection
            </summary>
            <value>The name of the COM port.</value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.Started">
            <summary>
            Gets a value indicating whether this <see cref="T:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel"/> is started.
            </summary>
            <value><c>true</c> if started; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.State">
            <summary>
            Gets the state of the channel.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.Log">
            <summary>
            Gets the log of text send across the channel
            </summary>
            <value>
            The log text
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.IsError">
            <summary>
            Gets if the channel is in an error condition.
            </summary>
            <value>If the channel is in an error condition.</value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="E:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.ChannelStatusEvent">
            <summary>
            An event raised when the object is modified.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel" /> class.
            </summary>
            <param name="emulationMode">if set to <c>true</c> create the channel in emulaiton mode.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.SendChannelEvent(System.String)">
            <summary>
            Trigger event indicating the object was modified
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.SetState(Ace.Feeder.Server.Flexibowl.FlexibowlState)">
            <summary>
            Sets the error code and message and triggs the corresponding event.
            </summary>
            <param name="StateVal">The state val.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.Initialize(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel"/> class.
            </summary>
            <param name="address">Name of the address this channel will manage.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.ReceiveCallback(System.IAsyncResult)">
            <summary>
            Callback when a controller is detected on the port
            </summary>
            <param name="ar">The async results.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.AddToQueue(Ace.Feeder.Server.Flexibowl.Commands.IFlexibowlFeederBaseCommand)">
            <summary>
            Adds a command to the queue.
            </summary>
            <param name="cmd">The Command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.DequeueCommand">
            <summary>
            Dequeues the next command to be executed. Checks depending on status what commands should be ignored or not.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.ExecuteCommand(System.Boolean)">
            <summary>
            Executes the command.
            </summary>
            <param name="wasIdle">if set to <c>true</c> this command is being executed when the channel trnasitions from an idle state.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.AddToLog(System.String[])">
            <summary>
            Adds the text to the log.
            </summary>
            <param name="texts">The text items to add.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.BackgroundThread">
            <summary>
            The background thread running to perform the enqueued commands
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.Write(System.String)">
            <summary>
            Writes the specified value to the channel (in this case a COM Port)
            </summary>
            <param name="str">The STR.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.Read">
            <summary>
            Reads data from the channel 
            </summary>
            <returns>The read value</returns>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.Read(System.Int32)">
            <summary>
            Reads data from the channel with the specified timeout
            </summary>
            <param name="timeout">The timeout.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel.CleanInputBuffer">
            <summary>
            Cleans the reception buffer.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand">
            <summary>
            Perform a blow operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand.Details">
            <summary>
            Gets the details associated with the command
            </summary>
            <value>
            The details.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand.Command">
            <summary>
            Gets the current operation Command
            </summary>
            <value>
            The FlexiblowCommands type
            </value>		
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand.BlowTime">
            <summary>
            Gets or sets the blow time.
            </summary>
            <value>
            The blow time.
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand.#ctor(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand"/> class.
            </summary>
            <param name="feeder">The feeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand"/> class.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand.StoreParamInformation(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Stores speed and iterations parameters identifications and values so we know which value to set on which parameter
            </summary>
            <param name="feeder">The feeder associated with the command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.Commands.LightOffCommand">
            <summary>
            Perform a light off operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.LightOffCommand.Details">
            <summary>
            Gets the details associated with the command
            </summary>
            <value>
            The details.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.LightOffCommand.Command">
            <summary>
            Gets the current operation Command
            </summary>
            <value>
            The FlexiblowCommands type
            </value>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.LightOffCommand.#ctor(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.LightOffCommand"/> class.
            </summary>
            <param name="feeder">The feeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.LightOffCommand.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand"/> class.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.LightOffCommand.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.LightOffCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.LightOffCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.LightOffCommand.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.Commands.LightOnCommand">
            <summary>
            Perform a light on operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.LightOnCommand.Details">
            <summary>
            Gets the details associated with the command
            </summary>
            <value>
            The details.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.LightOnCommand.Command">
            <summary>
            Gets the current operation Command
            </summary>
            <value>
            The FlexiblowCommands type
            </value>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.LightOnCommand.#ctor(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.LightOnCommand"/> class.
            </summary>
            <param name="feeder">The feeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.LightOnCommand.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand"/> class.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.LightOnCommand.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.LightOnCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.LightOnCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.LightOnCommand.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.Commands.ResetCommand">
            <summary>
            Perform a reset operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ResetCommand.Details">
            <summary>
            Gets the details associated with the command
            </summary>
            <value>
            The details.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ResetCommand.Command">
            <summary>
            Gets the current operation Command
            </summary>
            <value>
            The FlexiblowCommands type
            </value>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ResetCommand.#ctor(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand"/> class.
            </summary>
            <param name="feeder">The feeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ResetCommand.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.BlowCommand"/> class.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ResetCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ResetCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ResetCommand.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.Commands.DelayCommand">
            <summary>
            Perform a delay operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.DelayCommand.Details">
            <summary>
            Gets the details associated with the command
            </summary>
            <value>
            The details.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.DelayCommand.Command">
            <summary>
            Gets the current operation Command
            </summary>
            <value>
            The FlexiblowCommands type
            </value>		
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.DelayCommand.Time">
            <summary>
            Gets or sets the delay time.
            </summary>
            <value>
            The delay time.
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.DelayCommand.#ctor(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.DelayCommand"/> class.
            </summary>
            <param name="feeder">The feeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.DelayCommand.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.DelayCommand"/> class.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.DelayCommand.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.DelayCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.DelayCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.DelayCommand.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand">
            <summary>
            Perform a forward / flip / blow operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.Acceleration">
            <summary>
            Gets or sets the handling acceleration
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.Deceleration">
            <summary>
            Gets or sets the handling deceleration
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.Angle">
            <summary>
            Gets or sets the handling Angle
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.Speed">
            <summary>
            Gets or sets the handling Speed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.BlowTime">
            <summary>
            Gets or sets the blow time.
            </summary>
            <value>
            The blow time.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.Count">
            <summary>
            Gets or sets the flip count
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.Delay">
            <summary>
            Gets or sets the flip delay
            </summary>
            <value>
            The flip delay.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.Details">
            <summary>
            Gets the details associated with the command
            </summary>
            <value>
            The details.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.Command">
            <summary>
            Gets the current operation Command
            </summary>
            <value>
            The FlexiblowCommands type
            </value>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.#ctor(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand"/> class.
            </summary>
            <param name="feeder">The feeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand"/> class.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.StoreParamInformation(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Stores speed and iterations parameters identifications and values so we know which value to set on which parameter
            </summary>
            <param name="feeder">The feeder associated with the command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardFlipBlowCommand.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand">
            <summary>
            Perform a forward / blow operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand.Acceleration">
            <summary>
            Gets or sets the handling acceleration
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand.Deceleration">
            <summary>
            Gets or sets the handling deceleration
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand.Angle">
            <summary>
            Gets or sets the handling Angle
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand.Speed">
            <summary>
            Gets or sets the handling Speed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand.BlowTime">
            <summary>
            Gets or sets the blow time.
            </summary>
            <value>
            The blow time.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand.Details">
            <summary>
            Gets the details associated with the command
            </summary>
            <value>
            The details.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand.Command">
            <summary>
            Gets the current operation Command
            </summary>
            <value>
            The FlexiblowCommands type
            </value>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand.#ctor(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand"/> class.
            </summary>
            <param name="feeder">The feeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand"/> class.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand.StoreParamInformation(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Stores speed and iterations parameters identifications and values so we know which value to set on which parameter
            </summary>
            <param name="feeder">The feeder associated with the command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardBlowCommand.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand">
            <summary>
            Perform a flip / blow operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand.BlowTime">
            <summary>
            Gets or sets the blow time.
            </summary>
            <value>
            The blow time.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand.Count">
            <summary>
            Gets or sets the flip count
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand.Delay">
            <summary>
            Gets or sets the flip delay
            </summary>
            <value>
            The flip delay.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand.Details">
            <summary>
            Gets the details associated with the command
            </summary>
            <value>
            The details.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand.Command">
            <summary>
            Gets the current operation Command
            </summary>
            <value>
            The FlexiblowCommands type
            </value>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand.#ctor(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand"/> class.
            </summary>
            <param name="feeder">The feeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand"/> class.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand.StoreParamInformation(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Stores speed and iterations parameters identifications and values so we know which value to set on which parameter
            </summary>
            <param name="feeder">The feeder associated with the command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlipBlowCommand.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand">
            <summary>
            Perform a flip operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand.Piston">
            <summary>
            Gets or sets the piston to be actuated
            </summary>
            <value>
            The piston.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand.Count">
            <summary>
            Gets or sets the flip count
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand.Delay">
            <summary>
            Gets or sets the flip delay
            </summary>
            <value>
            The flip delay.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand.Details">
            <summary>
            Gets the details associated with the command
            </summary>
            <value>
            The details.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand.Command">
            <summary>
            Gets the current operation Command
            </summary>
            <value>
            The FlexiblowCommands type
            </value>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand.#ctor(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand"/> class.
            </summary>
            <param name="feeder">The feeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand"/> class.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand.StoreParamInformation(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Stores speed and iterations parameters identifications and values so we know which value to set on which parameter
            </summary>
            <param name="feeder">The feeder associated with the command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlipCommand.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand">
            <summary>
            Perform a shake operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.Acceleration">
            <summary>
            Gets or sets the handling acceleration
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.Deceleration">
            <summary>
            Gets or sets the handling deceleration
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.ClockwiseAngle">
            <summary>
            Gets or sets the clockwise Angle
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.CounterClockwiseAngle">
            <summary>
            Gets or sets the counter clockwise Angle
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.Speed">
            <summary>
            Gets or sets the handling Speed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.Count">
            <summary>
            Gets or sets the shake count
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.Details">
            <summary>
            Gets the details associated with the command
            </summary>
            <value>
            The details.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.Command">
            <summary>
            Gets the current operation Command
            </summary>
            <value>
            The FlexiblowCommands type
            </value>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.#ctor(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand"/> class.
            </summary>
            <param name="feeder">The feeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand"/> class.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.StoreParamInformation(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Stores speed and iterations parameters identifications and values so we know which value to set on which parameter
            </summary>
            <param name="feeder">The feeder associated with the command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ShakeCommand.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand">
            <summary>
            Perform a forward operation.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand.Acceleration">
            <summary>
            Gets or sets the handling acceleration
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand.Deceleration">
            <summary>
            Gets or sets the handling deceleration
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand.Angle">
            <summary>
            Gets or sets the handling Angle
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand.Speed">
            <summary>
            Gets or sets the handling Speed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand.Details">
            <summary>
            Gets the details associated with the command
            </summary>
            <value>
            The details.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand.Command">
            <summary>
            Gets the current operation Command
            </summary>
            <value>
            The FlexiblowCommands type
            </value>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand.#ctor(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand"/> class.
            </summary>
            <param name="feeder">The feeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand"/> class.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand.Run">
            <summary>
            Runs the Command. Performs the whole operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand.StoreParamInformation(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Stores speed and iterations parameters identifications and values so we know which value to set on which parameter
            </summary>
            <param name="feeder">The feeder associated with the command.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.ForwardCommand.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand">
            <summary>
            The base flexibowl command class
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.DefaultWaitTime">
            <summary>
            The default amount of time to wait for a command tom complete
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.DefaultResponseTime">
            <summary>
            The default amount of time to wait for an immediate / status command to complete
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.commandDone">
            <summary>
            Indicates the command has been done
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.abortCommandFlag">
            <summary>
            Value indicating the current movement has to be stopped
            </summary>
        </member>
        <member name="E:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.PropertyModified">
            <summary>
            An event raised when the object is modified.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.Details">
            <summary>
            Gets the details associated with the command
            </summary>
            <value>
            The details.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.Command">
            <summary>
            Gets the current operation Command
            </summary>
            <value>
            The FlexiblowCommands type
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.AbortCommand">
            <summary>
            Aborts the command.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.SendCommand(System.String)">
            <summary>
            Sends a command to the feeder.
            </summary>
            <param name="command">The command to send.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.WaitString(System.String,System.Double)">
            <summary>
            Waits for the expected string to be received.
            </summary>
            <param name="text">The text.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.WaitCompletion(System.Double)">
            <summary>
            Polls the status of the operation 
            </summary>
            <param name="timeout">The timeout for the operation.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.CheckStatus">
            <summary>
            Checks the status of the Flexibowl feeder
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.Run">
            <summary>
            Runs the Command.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.WaitDone">
            <summary>
            Waits the command is done.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.Initialize(Ace.Feeder.Server.Flexibowl.Channel.FlexiblowlFeederChannel,System.Boolean)">
            <summary>
            Initializes the specified channel.
            </summary>
            <param name="channel">The channel.</param>
            <param name="wasIdle">if set to <c>true</c> this command is being executed when the channel trnasitions from an idle state.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.Commands.FlexibowlFeederBaseCommand.OnPropertyModified(System.String)">
            <summary>
            Trigger event indicating the object was modified
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeConfiguration">
            <summary>
            Represents a configuration of items included in a recipe.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeConfiguration.Feeder">
            <summary>
            Gets the feeder associated with the configuration
            </summary>
            <value>
            The feeder.
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeConfiguration.#ctor(Ace.Core.Server.Recipes.IRecipeSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeConfiguration" /> class.
            </summary>
            <param name="recipeSource">The recipe source.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeConfiguration"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeConfiguration.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeConfiguration.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeConfiguration.CreateRecipeComponent">
            <summary>
            Creates a new recipe component based on the current configuration
            </summary>
            <returns>The recipe component</returns>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeConfiguration.ConvertRecipeComponent(System.Boolean,Ace.Core.Server.Recipes.RecipeComponentBase)">
            <summary>
            Converts the recipe component based on the current recipe configuration settings.
            </summary>
            <param name="isActive">if set to <c>true</c> this component is from the active recipe.</param>
            <param name="recipeComponent">The recipe component to convert.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeConfiguration.Apply(Ace.Core.Server.Recipes.RecipeComponentBase)">
            <summary>
            Applies the specified recipe component to the source.
            </summary>
            <param name="recipeComponent">The recipe component.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederRecipeConfiguration.Feeder_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the Feeder control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder">
            <summary>
            Represents a physical instance of an AnyFeeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.ExposableItems">
            <summary>
            Get the exposable data items
            </summary>
            <value></value>
            <returns>The list of exposable items</returns>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Parent">
            <summary>
            The parent of this object, or null if it is relative to the world origin. The parent
            is the object to which this object is attached--if the parent moves, so do all of its
            children.
            </summary>
            <value></value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.AdeptSightIndex">
            <summary>
            Gets or sets the index used to identify the feeder from Adept Sight 3
            </summary>
            <value>The index of this feeder in adept sight.</value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.ControlProperties">
            <summary>
            Gets the feeder control properties
            </summary>
            <value>The control values.</value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Address">
            <summary>
            Gets or sets the IP address used to communicate with the feeder
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.IsBusy">
            <summary>
            Gets the flag indicating a command is running
            </summary>
            <value>
            	<c>true</c> if a command is running; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Model">
            <summary>
            Gets or sets the model of the feeder.
            </summary>
            <value>
            The AnyFeeder model.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Log">
            <summary>
            Gets the log associated with the communications channel
            </summary>
            <value>
            The log.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.IsError">
            <summary>
            Gets a value indicating whether the communication channel is in error
            </summary>
            <value>
              <c>true</c> if this instance is error; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Error">
            <summary>
            Gets an error message associated with the channel
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Sequences">
            <summary>
            Gets the custom defined motion sequences 
            </summary>
            <value>
            The sequences.
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that  it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Dispose(System.Boolean)">
            <summary>
            Disposes of this object by disabling remote access.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.InitializeConnection(System.String)">
            <summary>
            Initializes the communications / connection.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Blow(System.Boolean)">
            <summary>
            Performs a blow operation. 
            </summary>
            <param name="waitCompletion">Do we wait for the end of the operation</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Forward(System.Boolean)">
            <summary>
            Performs a forward operation. 
            </summary>
            <param name="waitCompletion">Do we wait for the end of the operation</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Shake(System.Boolean)">
            <summary>
            Performs a shake operation. 
            </summary>
            <param name="waitCompletion">Do we wait for the end of the operation</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Flip(System.Boolean,System.Int32)">
            <summary>
            Performs a flip operation.
            </summary>
            <param name="waitCompletion">Do we wait for the end of the operation</param>
            <param name="piston">The piston to activate.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.FlipBlow(System.Boolean)">
            <summary>
            Performs a flip operation.
            </summary>
            <param name="waitCompletion">Do we wait for the end of the operation</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.ForwardBlow(System.Boolean)">
            <summary>
            Performs a forward / blow operation. 
            </summary>
            <param name="waitCompletion">Do we wait for the end of the operation</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.ForwardFlipBlow(System.Boolean)">
            <summary>
            Performs a forward / flip / blow operation. 
            </summary>
            <param name="waitCompletion">Do we wait for the end of the operation</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Reset(System.Boolean)">
            <summary>
            Performs a reset operation.
            </summary>
            <param name="waitCompletion">Do we wait for the end of the operation</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Light(System.Boolean,System.Boolean)">
            <summary>
            Performs a light on/off operation.
            </summary>
            <param name="waitCompletion">Do we wait for the end of the operation</param>
            <param name="on">Is the light to be turned on</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Execute(Ace.Feeder.Server.Flexibowl.Commands.IFlexibowlFeederBaseCommand,System.Boolean)">
            <summary>
            Executes the specified command.
            </summary>
            <param name="command">The command.</param>
            <param name="waitCompletion">Do we wait for the end of the operation</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.AddSequence(Ace.Feeder.Server.Flexibowl.IFlexibowlFeederSequence)">
            <summary>
            Adds the custom motion sequence.
            </summary>
            <param name="sequence">The sequence.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.AddSequence(Ace.Feeder.Server.Flexibowl.IFlexibowlFeederSequence,System.Boolean)">
            <summary>
            Adds the custom motion sequence.
            </summary>
            <param name="sequence">The sequence.</param>
            <param name="throwEvent">if set to <c>true</c> it will trow the sequence modified event.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.RemoveSequence(Ace.Feeder.Server.Flexibowl.IFlexibowlFeederSequence)">
            <summary>
            Removes the custom motion sequence.
            </summary>
            <param name="sequence">The sequence.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.RemoveSequence(Ace.Feeder.Server.Flexibowl.IFlexibowlFeederSequence,System.Boolean)">
            <summary>
            Removes the custom motion sequence.
            </summary>
            <param name="sequence">The sequence.</param>
            <param name="throwEvent">if set to <c>true</c> it will trow the sequence modified event.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.ExecuteSequence(System.Int32,System.Boolean)">
            <summary>
            Executes the sequence with the specified index
            </summary>
            <param name="commandIndex">Index of the command.</param>
            <param name="waitComplete">if set to <c>true</c> wait until the command has completed.</param>
            <exception cref="T:System.Exception">Unknown Command</exception>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.CheckChannel">
            <summary>
            Checks the channel. Get it or set error if COM port name is not correct.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.WaitOperationStarted(System.Int32)">
            <summary>
            Waits for the the feeder operation to start
            </summary>
            <param name="msTimeout">The timeout in milliseconds.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.controlProperties_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the controlProperties control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.channel_statusChanged(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the statusChanged event of the channel.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.sequence_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the sequence control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.dataItems_ExposableItemChanged(System.Object,Ace.Core.Server.DataItems.ExposableDataItemChangedEventArgs)">
            <summary>
            Handles the ExposableItemChanged event of the dataItems control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.DataItems.ExposableDataItemChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.Apply(Ace.Feeder.Server.Flexibowl.FlexibowlFeeder)">
            <summary>
            Applies the properties of the specified feeder.
            </summary>
            <param name="feeder">The feeder.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeeder.CreateRecipeConfiguration">
            <summary>
            Creates and returns a new recipe configuration.
            </summary>
            <value>
            The recipe configuration.
            </value>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties">
            <summary>
            Identifies the properties associated with the flexibowl feeder control.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.CurrentCommand">
            <summary>
            Gets or sets the current command through AdeptSight
            </summary>
            <value>
            The current command.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.Acceleration">
            <summary>
            Gets or sets the handling acceleration
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.Deceleration">
            <summary>
            Gets or sets the handling deceleration
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.Angle">
            <summary>
            Gets or sets the handling Angle
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.Speed">
            <summary>
            Gets or sets the handling Speed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.FlipCount">
            <summary>
            Gets or sets the flip count
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.FlipDelay">
            <summary>
            Gets or sets the flip delay
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.ShakeAccel">
            <summary>
            Gets or sets the shake acceleration
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.ShakeDecel">
            <summary>
            Gets or sets the shake deceleration
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.ShakeAngle">
            <summary>
            Gets or sets the shake angle
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.ShakeSpeed">
            <summary>
            Gets or sets the shake speed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.ShakeCount">
            <summary>
            Gets or sets the shake count
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.BlowTime">
            <summary>
            Gets or sets the blow time
            </summary>
        </member>
        <member name="E:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.PropertyModified">
            <summary>
            An event raised when the object is modified.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.OnPropertyModified(System.String)">
            <summary>
            Trigger event indicating the object was modified
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlFeederControlProperties"/> class.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence">
            <summary>
            Represents a sequence of Flexibowl feeder operations
            </summary>
        </member>
        <member name="E:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.PropertyModified">
            <summary>
            An event raised when a property is modified. Note that not all properties will throw this event.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.CommandIndex">
            <summary>
            Gets or sets the index used to trigger the command from V+.
            </summary>
            <value>
            The index of the command.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.Operations">
            <summary>
            Gets the operations associated with the sequence
            </summary>
            <value>
            The operations.
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that  it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.OnPropertyModified(System.String)">
            <summary>
            Called when a property is modified.
            </summary>
            <param name="propertyName">Name of the modified property.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.Execute(Ace.Feeder.Server.Flexibowl.IFlexibowlFeeder,System.Boolean)">
            <summary>
            Executes the sequence.
            </summary>
            <param name="feeder">The feeder used in the execution sequence.</param>
            <param name="waitComplete">if set to <c>true</c> wait until execution has completed.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.Add(System.Collections.Generic.List{Ace.Feeder.Server.Flexibowl.Commands.IFlexibowlFeederBaseCommand})">
            <summary>
            Adds the specified list operations.
            </summary>
            <param name="operations">The list operations.</param>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.Add(Ace.Feeder.Server.Flexibowl.Commands.IFlexibowlFeederBaseCommand)">
            <summary>
            Adds the specified operation.
            </summary>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.Insert(System.Int32,Ace.Feeder.Server.Flexibowl.Commands.IFlexibowlFeederBaseCommand)">
            <summary>
            Inserts the specified operation.
            </summary>
            <param name="index">The index.</param>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.Remove(Ace.Feeder.Server.Flexibowl.Commands.IFlexibowlFeederBaseCommand)">
            <summary>
            Removes the specified operation.
            </summary>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.RemoveAt(System.Int32)">
            <summary>
            Removes the operation at the specified index
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.IndexOf(Ace.Feeder.Server.Flexibowl.Commands.IFlexibowlFeederBaseCommand)">
            <summary>
            Returns the index of the specified operation.
            </summary>
            <param name="operation">The operation.</param>
            <returns>The index of the operation</returns>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlFeederSequence.operation_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the operation control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanDetail">
            <summary>
            A .NET implementation of FlexibowlScanDetail, which store the flexibowl responding details.
            </summary>	
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlScanDetail.RespondMsg">
            <summary>
            Respond message from flexibowl
            </summary>					
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlScanDetail.RespondingAddress">
            <summary>
            Respond IP Address from flexibowl
            </summary>					
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlScanDetail.RespondingSubNet">
            <summary>
            Respond Subnet mask from flexibowl
            </summary>						
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlScanDetail.RespondingGateway">
            <summary>
            Respond Gateway from flexibowl
            </summary>						
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanDetail.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanDetail"/> class.
            </summary>
            <param name="respondMsg">respond message from flexibowl.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanDetail.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanDetail"/> class.
            </summary>
            <param name="respondingAddress">the flexibowl IP Address.</param>
            <param name="respondingSubNet">the flexibowl subnet mask.</param>
            <param name="respondingGateway">the flexibowl Gateway.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanDetail.ToString">
            <summary>
            Returns the IP address of the located flexibowl.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanDetail.ExtractScanDetails">
            <summary>
            Parse a broadcast respond message that is 41 bytes
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanDetail.ParseBoardcastRespondMsg(Ace.Feeder.Server.Flexibowl.IFlexibowlScanDetail,System.Int32)">
            <summary>
            Parse a broadcast respond message that is 41 bytes
            </summary>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngine">
            <summary>
            Represents a generic engine capable of finding Flexibowl
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngine.Detected">
            <summary>
            Occurs when a flexibowl is detected.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngine.SendStruct">
            <summary>
            Send broadcast structure.
            </summary>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngine.ReceiveStruct">
            <summary>
            Receive broadcast structure.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngine.IsStopping">
            <summary>
            Gets a value indicating whether the scan operation has been commanded to stop.
            </summary>
            <value>
            <c>true</c> if this instance is stopping; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngine.IsMulticastScan">
            <summary>
            Gets a value indicating simple scan or multicast
            </summary>
            <value>
            <c>true</c> if this is multicast scan otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngine"/> class.
            </summary>	
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngine.PerformScan(System.Int32)">
            <summary>
            Performs a network scan.
            </summary>
            <param name="waitTimeMillis">The length of time for preforming the scan.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngine.ResetSocket(System.Net.Sockets.Socket)">
            <summary>
            reset the socket.
            </summary>
            <param name="socket">socket to reset</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngine.OnFBDetected(Ace.Feeder.Server.Flexibowl.IFlexibowlScanDetail)">
            <summary>
            Called when a Flexibowl is detected.
            </summary>
            <param name="fbScanDetail">The scan.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngine.Stop">
            <summary>
            Issues a request to stop the scan operation.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngine.BuildSendBoardcastMessage">
            <summary>
            Build a boardcast request message
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngine.NotifyFlexibowlDetected(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            process the responding from the scanning
            </summary>		
            <param name="data">data received from the responding server.</param>
            <param name="respondingEndPoint">the responding end point.</param>		
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineSimple">
            <summary>
            Represents a simple scan operation letting the OS handling the binding of the network devices.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineSimple.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineSimple"/> class.
            </summary>	
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineSimple.PerformScan(System.Int32)">
            <summary>
            Performs a network scan.
            </summary>
            <param name="waitTimeMillis">The length of time for perofmring the scan.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineSimple.ReceiveCallback(System.IAsyncResult)">
            <summary>
            Callback when a flexibowl is detected on the port
            </summary>
            <param name="ar">The async results.</param>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineMulticast">
            <summary>
            Represents a multi cast scan operation where we explicitly bind to the network adapters
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineMulticast.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineMulticast"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineMulticast.PerformScan(System.Int32)">
            <summary>
            Performs a network scan.
            </summary>
            <param name="waitTimeMillis">The length of time for perofmring the scan.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineMulticast.SendBroadcast(System.Byte[],System.Int32,System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
            <summary>
            send broad cast to controller, and return the created socket.
            </summary>
            <param name="data">data to send</param>
            <param name="dataLen">len of data to send</param>
            <param name="locaNICIP">IP Address of the local NIC</param>
            <param name="multicastAddress">IP Address of multi cast</param>
            <param name="senderPort">sender port</param>
            <returns>created socket</returns>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineMulticast.CreateSendBroadcastSocket(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
            <summary>
            Create send broad cast socket, and return the created socket.
            </summary>		
            <param name="locaNICIP">IP Address of the local NIC</param>
            <param name="multicastAddress">IP Address of multi cast</param>
            <param name="senderPort">sender port</param>
            <returns>created socket</returns>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineMulticast.GetListLocalNICsIPAddress">
            <summary>
            Get the list of local available enabled network adaptors (NICs) IPs
            </summary>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineMulticast.ResetReceiverSockets">
            <summary>
            Close all receiver sockets and clear the list.
            </summary>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineMulticast.CreateReceiverSockets(System.Int32,System.Net.IPAddress,System.Collections.Generic.IEnumerable{System.Net.IPAddress})">
            <summary>
            Create receiver sockets with UdpClient and setup the receive callback to process the messages.
            </summary>
            <param name="receiverPort">receiving port.</param>
            <param name="multicastAddress">multi cast address.</param>
            <param name="listLocalNICsIP">list of IPs of the local NICs.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineMulticast.CreateSenderSocketsAndSendBroadcast(System.Int32,System.Net.IPAddress,System.Collections.Generic.IEnumerable{System.Net.IPAddress})">
            <summary>
            create sender sockets and send a broad casting message out.
            </summary>
            <param name="senderPort">sending port.</param>
            <param name="multicastAddress">multi cast address.</param>
            <param name="listLocalNICsIP">list of IPs of the local NICs.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineMulticast.ResetSenderSockets">
            <summary>
            close all senders sockets and clear the list.
            </summary>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanEngineMulticast.ReceiveCallback(System.IAsyncResult)">
            <summary>
            Callback when a flexibowl is detected on the port
            </summary>
            <param name="ar">The async results.</param>
        </member>
        <member name="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager">
            <summary>
            A .NET implementation of FlexibowlScanManager, which scans for flexibowl on the local network.
            </summary>	
        </member>
        <member name="E:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager.Detected">
            <summary>
            Occurs when a flexibowl is detected.
            </summary>
        </member>
        <member name="E:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager.ScanCompleted">
            <summary>
            Occurs when a flexibowl scan has completed.
            </summary>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager"/> class.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager.IsWindowsXP">
            <summary>
            return windows XP true or false
            </summary>		
        </member>
        <member name="P:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager.IsScanning">
            <summary>
            Gets a value indicating whether the scan manager is actively scanning.
            </summary>
            <value>
              <c>true</c> if the scan  manager is scanning; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager.StartScan(System.Int32)">
            <summary>
            Starts the scan of flexibowl IP Addresses
            </summary>
            <param name="waitTimeMillis">Response wait time in milliseconds</param>				
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager.StopScan">
            <summary>
            Stop the scan of controller IP Addresses
            </summary>				
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager.WaitScan">
            <summary>
            Wait for scan operations to complete
            </summary>		
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager.ScanMain">
            <summary>
            Main routine performing the scan operation
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager.LockScan">
            <summary>
            Lock Scan Main		
            </summary>	
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager.UnlockScan">
            <summary>
            UnLock Scan Main		
            </summary>	
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager.scanEngine_Detected(System.Object,Ace.Feeder.Server.Flexibowl.FlexibowlScanEventArgs)">
            <summary>
            Handles the Flexibowl detected event of the scanEngine control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Feeder.Server.Flexibowl.FlexibowlScanEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Server.Flexibowl.FlexibowlScanManager.ExtractDetailsAndShowOnUI(Ace.Feeder.Server.Flexibowl.FlexibowlScanEventArgs)">
            <summary>
            Extracts the details of a scan operation and pass it to the UI
            </summary>
            <param name="e">The flexibowl details.</param>
        </member>
        <member name="T:Ace.Feeder.Server.IOFeeder.IOFeeder">
            <summary>
            IOFeeder class
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeeder.mustCheckVPlus">
            <summary>
            A flag indicating V+ module must be checked. Can be because connection state or controller changed.
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeeder.feederIndex">
            <summary>
            internal member storing the corresponding feeder index on V+ side
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeeder.vPlusTaskNum">
            <summary>
            internal member storing the task on which an action is being processed
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeeder.syncObject">
            <summary>
            A synchronization object used to serialize access for the object writing to V+
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeeder.vPlusErrMessage">
            <summary>
            Used to store an eventual error description coming from V+
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeeder.myControlProperties">
            <summary>
            Object containing control parameters for the IOFeeder
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeeder.commandRunning">
            <summary>
            Indicates if a command is running
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeeder.currentState">
            <summary>
            The current state of IOFeeder
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.CurrentFeederState">
            <summary>
            Gets or sets the  current state of the IOFeeder.
            </summary>
            <value>The state of the current.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.CurrentFeederStateText">
            <summary>
            Gets the current feeder state string.
            </summary>
            <value>The current feeder state string.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.VPlusTaskNumber">
            <summary>
            Gets or sets the V plus task number.
            </summary>
            <value>The V plus task number.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.DelayBeforeFeedStart">
            <summary>
            Gets or set a delay that can be used before the feeding operation is started.
            </summary>
            <value>The delay in ms.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.ErrorCode">
            <summary>
            Gets an int value indicating the current IOFeeder error code.
            </summary>
            <value>The error code.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.GetAvailableErrorResponses(System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
             Gets the allowed error responses depending on the current error..
            </summary>
            <param name="abortAllowed">if set to <c>true</c> [abort allowed].</param>
            <param name="retryAllowed">if set to <c>true</c> [retry allowed].</param>
            <param name="skipAllowed">if set to <c>true</c> [skip allowed].</param>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.SkipText">
            <summary>
            Gets the text to be displayed in the process manager skip button.
            </summary>
            <value>The skip text.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.AbortText">
            <summary>
            Gets the text to be displayed in the process manager abort button.
            </summary>
            <value>The abort text.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.RetryText">
            <summary>
            Gets the text to be displayed in the process manager retry button.
            </summary>
            <value>The retry text.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.IsInError">
            <summary>
            Gets an information to know if IOFeeder is in error.
            </summary>
            <value>The Error state.</value>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.IsTaskRunning">
            <summary>
            Gets a value indicating whether this instance task is running.
            </summary>
            <returns>
            	<c>true</c> if [is task running]; otherwise, <c>false</c>.
            </returns>
            <value>
            	<c>true</c> if this instance is task running; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.IsWellConfigured">
            <summary>
            Gets a value indicating whether this instance is well configured.
            </summary>
            <value>
            	<c>true</c> if this instance is well configured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.VPlusErrorMessage">
            <summary>
            Gets an information to know if IOFeeder is in error.
            </summary>
            <value>The Error state.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.ControlProperties">
            <summary>
            Gets or sets the Control Properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.CommandRunning">
            <summary>
            Sets the flag indicating a command is running..
            </summary>
            <value><c>true</c> if [command running]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.IsBusy">
            <summary>
            Gets the flag indicating a command is running
            </summary>
            <value>
            	<c>true</c> if a command is running; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.IsRunningOnController">
            <summary>
            Gets a value indicating whether the IOFeeder is piloted from a V+ program on a controller.
            </summary>
            <value>
            	In the case of an IOFeeder, the return is always <c>true</c>.
            </value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.IsUsingCustomVPlus">
            <summary>
            Gets a value indicating whether this instance is using custom V+ code.
            </summary>
            <value>
            	<c>true</c> if this instance is using custom V plus; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeeder.errorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.Error">
            <summary>
            Gets or sets the error code.
            </summary>
            <value>The error code.</value>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeeder.controllerRef">
            <summary>
            The controller the I/O is associated with.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.ControllerRef">
            <summary>
            Gets the controller ref.
            </summary>
            <value>The controller ref.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.Controller">
            <summary>
            Gets or sets the controller the I/O is associated with.
            </summary>
            <value>The controller.</value>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.ControllerConnectionChange(System.Object,Ace.Core.Server.Event.BooleanStateChangeEventArgs)">
            <summary>
            Handles the Opening event of the Link control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>The name of the controller.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.VPProgramName">
            <summary>
            Gets the name of the V+ program.
            </summary>
            <value>The name of the V+ program.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.FeederControllerFile">
            <summary>
            Gets the name of the feeder V+ library on the controller.
            </summary>
            <value>The name of the feeder V+ library on the controller.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.FeederControllerFilePath">
            <summary>
            Gets the fully qualified path name of the remote process library on the controller.
            </summary>
            <value>The name of the remote process library on the controller.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.FeederModuleProgram">
            <summary>
            Gets the name of the feeder V+ module program.
            </summary>
            <value>The name of the feeder V+ module program.</value>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeeder.FeederFileContents">
            <summary>
            Gets the Feeder V+ file contents.
            </summary>
            <value>The Feeder file contents.</value>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.Dispose(System.Boolean)">
            <summary>
            Disposes of this object by disabling remote access.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.GetReferences">
            <summary>
            Gets the references.
            </summary>
            <returns>The references maintained by the object</returns>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.IOFeeder.IOFeeder"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.IOFeederControl_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the IOFeederControlProperties 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.CheckFeederModuleOnController(System.Boolean@)">
            <summary>
            Checks the feeder V+ module is on the controller.
            </summary>
            <param name="alreadyInController">if set to <c>true</c> [already in controller].</param>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.SystemInit(System.Boolean)">
            <summary>
            Updates the IOFeeder object on controller, if possible.
            </summary>
            <param name="waitCompletion">Defines if we want to wait the end of the operation or not.
            In the case of the IOFeeder this operation is very fast on Controller side so we will always wait in reality.</param>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.UpdateIOFeederOnController">
            <summary>
            Updates the IOFeeder object on controller, if possible.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.Feed(System.Boolean)">
            <summary>
            Send the feed order to the controller, if possible.
            The IOFeeder is intended to be started so its controller task is running.
            </summary>
            <param name="waitCompletion">Defines if we want to wait the end of the operation or not</param>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.SendFeedCommand(Ace.Adept.Server.Controls.IAdeptController)">
            <summary>
            Sends the feed command.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.AbortMotion(System.Boolean)">
            <summary>
            Stops the current operation performed by the IOFeeder
            </summary>
            <param name="waitCompletion">Defines if we want to wait the end of the operation or not</param>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.AbortMotionSequence">
            <summary>
            Sequence aborting the IOFeeder motion.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.OperationStartRemote">
            <summary>
            Function called from V+ when an operation is started to indicate the hardware is busy.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.OperationEndRemote(System.String)">
            <summary>
            Function called from V+ at the end of an operation by the IOFeeder.
            It is called at the end of the operatio...
            </summary>
            <param name="status">The status  from V+.</param>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.ValuesRemoteUpdate(System.String)">
            <summary>
            Remote function called from V+ to refresh internal status variable.
            </summary>
            <param name="status">the IOFeeder current state. </param>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.RefreshIOFeederObjectOnController">
            <summary>
            Refreshes the IO feeder object on controller. Sends the control values and initiate the V+ object
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.SetUserResponse(System.Int32)">
            <summary>
            Sends the user response to the Feeder when process manager error was handled by user.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeeder.ToggleOutputs(System.Int32[])">
            <summary>
            Toggles values of a set of inputs
            </summary>
            <param name="signals">The signals.</param>
        </member>
        <member name="T:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties">
            <summary>
            Defines the properties used to access a feeder by the process manager.
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.version">
            <summary>
            The object version allowing backward compatibility when changes require a specific handling at loading.
            1 -> Original version
            2 -> From Ace 3.3.0.19 : we moved from simple signals to arrays of up to 4 signals.
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.propertyModified">
            <summary>
            An event raised when the object is modified.
            </summary>
        </member>
        <member name="E:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.PropertyModified">
            <summary>
            An event raised when the object is modified.
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.feederReadyInputs">
            <summary>
            Input signal indicating the feeder is ready
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.FeederReadyInputs">
            <summary>
            Gets or sets an input signal indicating a part is ready
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.partProcessedOutputs">
            <summary>
            The output used to indicate a part has been processed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.PartProcessedOutputs">
            <summary>
            Gets or sets the output used to indicate a part has been processed
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.partProcessedOutputDwell">
            <summary>
            The amount of time (in ms) to dwell after the PartProcessedOutput is turned on.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.PartProcessedOutputDwell">
            <summary>
            Gets or sets the amount of time (in ms) to dwell after the PartProcessedOutput is turned on.
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.usePartProcessedHandshakeInput">
            <summary>
            Does the feeder require a handshake input when handling the part processed handshake output
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.UsePartProcessedHandshakeInput">
            <summary>
            Gets or sets if the feeder require a handshake input when handling the part processed handshake output
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.partProcessedHandshakeInputs">
            <summary>
            The input used to indicate acknowledgment that a part has been processed
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.PartProcessedHandshakeInputs">
            <summary>
            Gets or sets the input used to indicate acknowledgment that a part has been processed
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.useCustomFeederProgram">
            <summary>
            Is the feeder to use a custom V+ program
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.UseCustomFeederProgram">
            <summary>
            Gets or sets if the feeder to use a custom V+ program
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.customFeederProgram">
            <summary>
            The name of a custom V+ program used for feeder interface.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.CustomFeederProgram">
            <summary>
            Gets or sets the name of a custom V+ program used for feeder interface.
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.debounceTime">
            <summary>
            The length of time for monitoring I/O debouncing.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.DebounceTime">
            <summary>
            Gets or sets the debounce time. 
            </summary>
        </member>
        <member name="F:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.delayBeforeFeedStart">
            <summary>
            A delay that can be used efore the feeding operation is started.
            This value is intended to be used in process manager mode. Caller is responsible to set and save it.
            It is not saved here then.
            </summary>
        </member>
        <member name="P:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.DelayBeforeFeedStart">
            <summary>
            Gets or set a delay that can be used efore the feeding operation is started.
            </summary>
            <value>The delay in ms.</value>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties"/> class.
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeederControlProperties.OnPropertyModified(System.String)">
            <summary>
            Trigger the modified event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Ace.Feeder.Server.IOFeeder.IOFeederPropertyMapper">
            <summary>
            A mapper class for the IOFeederProperties object
            </summary>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeederPropertyMapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Feeder.Server.IOFeeder.IOFeederPropertyMapper"/> class.
            </summary>
            <param name="obj">The object being mapped.</param>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeederPropertyMapper.Serialize(System.String,Ace.Adept.Server.Controls.IAdeptController)">
            <summary>
            Serializes the object to the specified controller.
            </summary>
            <param name="key">The key under which the data is written.</param>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Ace.Feeder.Server.IOFeeder.IOFeederPropertyMapper.WriteArray(Ace.Adept.Server.Controls.IAdeptMessage,System.Int32,System.Int32[])">
            <summary>
            Writes the array of data to the message
            </summary>
            <param name="msg">The message to write into.</param>
            <param name="count">The number of items to write.</param>
            <param name="items">The array of items to write.</param>
            <remarks>
            The V+ code assumes the arrays are of fixed size. So, pad 0 at the end
            if any array items are not defined.
            </remarks>
        </member>
        <member name="T:Ace.Feeder.PickList">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PickList.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PickList.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PickList.AnyFeeder">
            <summary>
              Looks up a localized string similar to Device|Feeders|AnyFeeder.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PickList.FlexibowlFeeder">
            <summary>
              Looks up a localized string similar to Device|Feeders|FlexiBowl.
            </summary>
        </member>
        <member name="P:Ace.Feeder.PickList.IOFeeder">
            <summary>
              Looks up a localized string similar to Device|Feeders|IO Feeder.
            </summary>
        </member>
    </members>
</doc>
