<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ace.UIBuilder</name>
    </assembly>
    <members>
        <member name="T:Ace.UIBuilder.Client.Controls.ConditionalLinkTypeEditor">
            <summary>
            Provides a property grid drop-down list for selecting
            "ConditionalLink" objects in the Designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLinkTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit ConditionalLinks: provides a drop-down selection menu.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLinkTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Specifies to use a drop-down editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData">
            <summary>
            Class used by a control that wants to act as a client to connect to the server, and get an ACE object
            </summary>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData.BeforeUpdateRemoting">
            <summary>
            An event raised when remoting will be updated.
            
            We will use it to momentary stop polling in each client connection that are using us.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData.OnBeforeUpdateRemoting">
            <summary>
            Called before updating the remoting.
            </summary>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData.AfterUpdateRemoting">
            <summary>
            An event raised when remoting has been updated.
            
            We will use it to re-start polling in each client connection that are using us.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData.OnAfterUpdateRemoting">
            <summary>
            Called after updating the remoting.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData.ExposableDataItemWrapper">
            <summary>
            Gets or sets the data item associated with the control.
            
            This property is only used by the property editor of the UI Builder designer, it is not serialized.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData.DataSourceFullPath">
            <summary>
            Gets or sets the exposable data source object full path associated with the control.
            
            This property is only used by the C# script generator.
            
            Warning in case of debugging:
            Calling this property during the Designer load process may lead to a modification
            of the dataSourceFullPath parameter.
            </summary>
            <value>The variable.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData.DataItemTagPath">
            <summary>
            Gets or sets the exposable data item object tag path associated with the control.
            
            This property is only used by the C# script generator.
            
            Warning in case of debugging:
            Calling this property during the Designer load process may lead to a modification
            of the dataItemTagPath parameter.
            </summary>
            <value>The variable.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData.ClientConnectionAceObject_RootCollectionChanged(System.Object,Ace.Core.Server.Event.ContentsChangeEventArgs)">
            <summary>
            Handles the RootCollectionChanged event of the ClientConnectionAceObject control.
            
            When the ACE object used in this connection is removed from the Workspace,
            we need to update the state of our connection.
            Note that when an object is renamed in the Workspace, it is first removed
            then added.
            So we will really detect that the object will be or is disposed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.ContentsChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData.UpdateRemoting(System.Boolean)">
            <summary>
            Update the remoting.
            This method will be called:
            - when a property of this object gets changed,
            if we do not inherit the connection properties from the base form
            - when a property of the connection object of the parent form gets changed,
            if we inherit the connection properties from the base form
            </summary>
            <param name="raiseOnUpdateControlEvent">if set to <c>true</c> [raise on update control event].</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData.UpdateData(System.Object)">
            <summary>
            Updates the data.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ConditionalLink">
            <summary>
            A component used to set the property of one or many tools based on a conditional expression.
            It will contain a collection of links to the controls that need to be updated.
            When this component is removed from the Designer, we must update the host control
            so they will not use it anymore.
            When a host control is removed from the Designer, it is actually not removed from the list
            maintained in this control. This is not really an issue, as the list is dynamically created
            when the Designer is loaded.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionalLink.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionalLink.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionalLink.ParentForm">
            <summary>
            Gets or sets the parent form.
            </summary>
            <value>
            The parent form.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionalLink.UIBuilderForm">
            <summary>
            Gets or sets the UI Builder Form. It will be used as the host control of the client connection.
            </summary>
            <value>The UI Builder Form.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionalLink.Condition">
            <summary>
            Gets or sets the condition.
            
            This property is only used by the C# script generator.
            </summary>
            <value>The condition.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionalLink.ConditionWrapper">
            <summary>
            Gets or sets the condition.
            
            This property is only used by the property editor of the UI Builder designer, it is not serialized.
            </summary>
            <value>The condition.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLink.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.ConditionalLink"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLink.RemoveHostControl(System.Windows.Forms.Control)">
            <summary>
            Removes the host control.
            </summary>
            <param name="hostControl">The host control.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLink.SetLogic(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Sets the logic.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="invertedLogic">if set to <c>true</c> [inverted logic].</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLink.AddHostControl(System.Windows.Forms.Control,Ace.UIBuilder.Client.Controls.ConditionForHostControl.LinkTypeEnum,System.String,System.Object,System.Object,System.Boolean)">
            <summary>
            Adds the host control.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="linkType">Type of the link.</param>
            <param name="property">The property.</param>
            <param name="propertyValueIfFalse">The property value if false.</param>
            <param name="propertyValueIfTrue">The property value if true.</param>
            <param name="invertedLogic">if set to <c>true</c> [inverted logic].</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLink.changeService_ComponentRemoved(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            Handles the ComponentRemoved event of the changeService control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.Design.ComponentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLink.condition_AfterUpdateRemoting(System.Object,System.EventArgs)">
            <summary>
            Handles the AfterUpdateRemoting event of the condition control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLink.StartPolling">
            <summary>
            Starts the polling.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLink.StopPolling">
            <summary>
            Stops the polling.		
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLink.parentForm_BackgroundUpdate(System.Object,System.EventArgs)">
            <summary>
            Handles the BackgroundUpdate event of the parentForm control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLink.UpdateControl">
            <summary>
            Updates the control.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLink.UIBuilderForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Handles the FormClosing event of the value control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.FormClosingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLink.UIBuilderForm_Disposed(System.Object,System.EventArgs)">
            <summary>
            Handles the Disposed event of the UIBuilderForm control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLink.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.ConditionalLink.Disposed">
            <summary>
            Represents the method that handles the <see cref="E:System.ComponentModel.IComponent.Disposed"/> event of a component.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionalLink.Site">
            <summary>
            Gets or sets the <see cref="T:System.ComponentModel.ISite"/> associated with the <see cref="T:System.ComponentModel.IComponent"/>.
            </summary>
            <value></value>
            <returns>The <see cref="T:System.ComponentModel.ISite"/> object associated with the component; or null, if the component does not have a site.</returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Condition">
            <summary>
            A class used to evaluate a condition based on data items.
            This object will contain several connection with some exposable data item.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Condition.GenerateExpressionText(Ace.UIBuilder.Client.Controls.Condition)">
            <summary>
            Generates a text representation of the condition.
            </summary>
            <param name="condition">The condition.</param>
            <returns></returns>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.Condition.BeforeUpdateRemoting">
            <summary>
            An event raised when remoting will be updated.
            
            We will use it to momentary stop polling in each client connection that are using us.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Condition.OnBeforeUpdateRemoting">
            <summary>
            Called before updating the remoting.
            </summary>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.Condition.AfterUpdateRemoting">
            <summary>
            An event raised when remoting has been updated.
            
            We will use it to re-start polling in each client connection that are using us.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Condition.OnAfterUpdateRemoting">
            <summary>
            Called after updating the remoting.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Condition.UIBuilderForm">
            <summary>
            Gets or sets the UI Builder Form. It will be used as the host control of the client connection.
            </summary>
            <value>The UI Builder Form.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Condition.ConditionItemCollection">
            <summary>
            Gets the condition item collection associated with the control.
            When adding items to this collection, hostcontrol of the new item must be set to the value
            of the first condition item.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Condition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Condition"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Condition.clientConnectionCondition_AfterUpdateRemoting(System.Object,System.EventArgs)">
            <summary>
            Handles the AfterUpdateRemoting event of the clientConnectionCondition control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Condition.clientConnectionCondition_BeforeUpdateRemoting(System.Object,System.EventArgs)">
            <summary>
            Handles the BeforeUpdateRemoting event of the clientConnectionCondition control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Condition.Evaluate">
            <summary>
            Evaluates the condition.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Condition.CreateConditionItem(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Creates the condition item.
            </summary>
            <param name="uiBuilderForm">The UI builder form.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Condition.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ActiveLink">
            <summary>
            A class used to link a tool with an exposable data item.
            It will come with an update thread used to refresh the control.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ActiveLink.doNoStartPolling">
            <summary>
            A flag used to not start the polling.
            This can be used when we want to use this class as a link to a data item only.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ActiveLink.DoNoStartPolling">
            <summary>
            Gets or sets a value indicating whether [do no start polling].
            </summary>
            <value><c>true</c> if [do no update control]; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ActiveLink.interval">
            <summary>
            The scan rate of the refresh thread in milliseconds.
            Default value is taken from the OPC configuration.
            We do not use the current update rate of the OPC server
            as we are not sure that the OPC server is running
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ActiveLink.updateThreadName">
            <summary>
            The thread name.
            Initialized with a default thread name. It can be updated before the thread starts.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ActiveLink.doNotUpdateData">
            <summary>
            A flag used to disable the data update.
            Used to change the property value without updating the data.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ActiveLink.doNoUpdateControl">
            <summary>
            A flag used to disable the control update.
            Used while the user is editing the property and we do not want the property to be updated.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ActiveLink.designMode">
            <summary>
            A flag used to disable the control update in design mode.
            Updating the control in design mode leads to a very bad user experience as the designer is very slow
            Moreover this could lead to unexpected behavior like ACE locked (for example when two conditionals
            try to set the same property with opposite values).
            For debugging purpose, this flag can be left to false to have the behavior of the tool
            enabled in the Designer.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ActiveLink.DoNoUpdateControl">
            <summary>
            Gets or sets a flag saying that the data is currently edited, and that the control
            can not be updated.
            </summary>
            <value><c>true</c> if [do no update control]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ActiveLink.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.ActiveLink"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ActiveLink.UpdateName">
            <summary>
            Updates the name.
            This method is not used for the moment. The goal is to display a friendly name in the collection editor.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ActiveLink.UpdateControl">
            <summary>
            Updates the control.
            For efficiency reasons, we will only switch to the UI thread when we will really update the control.
            The polling of the data must be done in the background thread
            to ensure that the UI will remain responsive.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ActiveLink.UpdateData(System.Object)">
            <summary>
            Updates the data.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ActiveLink.StartPolling">
            <summary>
            Starts the polling.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ActiveLink.StopPolling">
            <summary>
            Stops the polling.
            
            The polling thread will also be stopped when a property link is removed from the collection editor
            because the Dispose() method will be called
            
            When the running UI is closed, we must terminate all the threads used by the
            property links, conditionals and IO. As these threads must access the UI, part
            of their code must run in the UI thread using Invoke. So, we can be in the
            situation where a thread is blocked by an Invoke call to the UI while it is
            being disposed.
            We can not let the UI dispose by calling Application.DoEvents() to let these
            threads terminate quietly, because the GC may run and call Dispose() again.
            
            The solution implemented was to Abort() the threads and use BeginInvoke() to
            avoid deadlocks. This removed a mutex that was used and speed up the display of
            the UI.
            Also deactivated the threads in Design mode to speed up the closing of editors.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ActiveLink.Update">
            <summary>
            Updates the control.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ActiveLink.UpdateErrorText(System.Windows.Forms.Control,System.String)">
            <summary>
            Updates the error text associated with the control
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="errorText">The error text to update</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ActiveLink.SetErrorDelegate">
            <summary>
            Sets the error next to the host control.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="error">The error.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ActiveLink.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ConditionTypeEditor">
            <summary>
            Provides a property grid popup control for setting
            the condition properties.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit AceObjects: provides a drop-down selection menu.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Specifies to use a drop-down editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ConditionTypeConverter">
            <summary>
            Converts between an 'Condition' value and the string description shown in property grids.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ConditionItem">
            <summary>
            A class used to define a condition.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ConditionItem.RelationEnum">
            <summary>
            The logical relation between this item and the previous one
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionItem.RelationEnum.And">
            <summary>
            Logical AND
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionItem.RelationEnum.Or">
            <summary>
            Logical OR
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionItem.OpenBrackets">
            <summary>
            Gets or sets the open brackets.
            </summary>
            <value>The open brackets.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionItem.CloseBrackets">
            <summary>
            Gets or sets the number of clsoe brackets.
            </summary>
            <value>The open brackets.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionItem.Relation">
            <summary>
            Gets or sets the relation.
            </summary>
            <value>The relation.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionItem.ClientConnectionCondition">
            <summary>
            Gets the client connection associated with the condition.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionItem.BitMask">
            <summary>
            Gets or sets the bit mask.
            </summary>
            <value>The bit mask.</value>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ConditionItem.ConditionOperatorEnum">
            <summary>
            The operator used for the condition item.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionItem.ConditionOperatorEnum.Equal">
            <summary>
            Returns true if the data is equal to the value.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionItem.ConditionOperatorEnum.Different">
            <summary>
            Returns true if the data is different than the value.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionItem.ConditionOperatorEnum.Less">
            <summary>
            Returns true if the data is less than the value.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionItem.ConditionOperatorEnum.Greater">
            <summary>
            Returns true if the data is greater than the value.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionItem.ConditionOperatorEnum.LessOrEqual">
            <summary>
            Returns true if the data is less than or equal to the value.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionItem.ConditionOperatorEnum.GreaterOrEqual">
            <summary>
            Returns true if the data is greater than or equal to the value.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionItem.ConditionOperator">
            <summary>
            Gets or sets the condition operator.
            </summary>
            <value>The condition operator.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionItem.ConditionValue">
            <summary>
            Gets or sets the condition value.
            </summary>
            <value>The condition value.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.ConditionItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionItem.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.ConditionItem"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionItem.Evaluate">
            <summary>
            Evaluates the condition item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionItem.GetDataItemValue">
            <summary>
            Gets the current value of the DataItem.
            </summary>
            <returns>The current value of the conditional data item</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionItem.MakeLogicalOperation(System.Boolean,System.Boolean,Ace.UIBuilder.Client.Controls.ConditionItem.RelationEnum)">
            <summary>
            Makes the logical operation.
            </summary>
            <param name="left">if set to <c>true</c> [left].</param>
            <param name="right">if set to <c>true</c> [right].</param>
            <param name="relation">The relation.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionItem.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ConditionEditControl">
            <summary>
            Control for editing a condition.
            
            The row index in the DataGridView object is the index in the condition collection.
            We will "disable" the Relation cell for the first condition because it is not used:
            - display it with the Control system color to make it look inactive
            - hide its content and drop down arrow
            - hide its tooltip
            - prevent the user from changing its value
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionEditControl.Condition">
            <summary>
            Gets the condition.
            </summary>
            <value>The condition.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionEditControl.conditionsAdded">
            <summary>
            A collection of added condition.
            As the user can cancel its edition, we need to track down the added conditions
            so that we can revert the modifications.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionEditControl.conditionsRemoved">
            <summary>
            A collection of removed condition.
            As the user can cancel its edition, we need to track down the removed conditions
            so that we can revert the modifications.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionEditControl.SelectedConditionItem">
            <summary>
            Gets the selected condition item in the grid
            </summary>
            <value>The selected condition item.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.#ctor(Ace.UIBuilder.Client.Controls.Condition)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.ClientConnectionEditControl"/> class.
            </summary>
            <param name="condition">The condition.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.UpdateButtons">
            <summary>
            Updates the buttons.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.UpdateEditControls">
            <summary>
            Updates the edit controls.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.UpdateConditionSummaryDisplay">
            <summary>
            Updates the condition display.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.SetNumericUpDown(System.Windows.Forms.NumericUpDown,System.Decimal)">
            <summary>
            Sets the numeric up down.
            </summary>
            <param name="numericUpDown">The numeric up down.</param>
            <param name="val">The val.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.UpdateCurrentRowInGrid">
            <summary>
            Updates the current row in grid.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.UpdateGridDisplay">
            <summary>
            Updates the display of conditions in the grid
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.SelectItemInGrid(Ace.UIBuilder.Client.Controls.ConditionItem)">
            <summary>
            Selects the item in grid.
            </summary>
            <param name="conditionItem">The condition item.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.ConditionEditControl_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the ConditionEditControl control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.dataGridViewConditionals_RowEnter(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            Handles the RowEnter event of the dataGridViewConditionals control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.dataGridViewConditionItems_CellPainting(System.Object,System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
            <summary>
            Handles the CellPainting event of the dataGridViewConditionItems control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.DataGridViewCellPaintingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.comboBoxOperation_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the comboBoxOperation control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.comboBoxRelation_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the comboBoxRelation control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.textBoxValue_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Handles the Validating event of the textBoxValue control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.textBoxValue_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the textBoxValue control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.buttonOK_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonOK control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.buttonCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonCancel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.buttonAddConditionItem_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonAddConditionItem control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.buttonDeleteConditionItem_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonDeleteConditionItem control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.buttonSelectDataItem_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonSelectDataItem control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.buttonEditBitMask_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonEditBitMask control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.buttonUp_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonUp control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.buttonDown_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonDown control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.timerScan_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the timerScan control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.numericUpDown_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the numericUpDown control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionEditControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionEditControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ConditionForHostControl">
            <summary>
            A class used to apply a condition to a host control.
            It will contain a reference to a host control,
            a string corresponding to the property to set,
            and the values of the properties according to the result
            of the condition (false or true).
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionForHostControl.Condition">
            <summary>
            Gets or sets the condition.
            </summary>
            <value>The condition.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionForHostControl.HostControl">
            <summary>
            Gets or sets the host control.
            </summary>
            <value>The host control.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionForHostControl.property">
            <summary>
            The property.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionForHostControl.Property">
            <summary>
            Gets or sets the property.
            </summary>
            <value>The property.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionForHostControl.propertyValueIfFalse">
            <summary>
            The property value when the condition is false.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionForHostControl.PropertyValueIfFalse">
            <summary>
            Gets or sets the property value if the condition is false.
            </summary>
            <value>The property value if false.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionForHostControl.propertyValueIfTrue">
            <summary>
            The property value when the condition is true.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionForHostControl.PropertyValueIfTrue">
            <summary>
            Gets or sets the property value if the condition is true.
            </summary>
            <value>The property value if true.</value>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ConditionForHostControl.LinkTypeEnum">
            <summary>
            The link type enum.
            </summary>
            <value>The link type enum.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionForHostControl.LinkTypeEnum.TrueFalse">
            <summary>
            Allow to set a value when the condition is true or false
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionForHostControl.LinkTypeEnum.TrueOnly">
            <summary>
            Allow to set a value only when the condition is true
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionForHostControl.LinkTypeEnum.FalseOnly">
            <summary>
            Allow to set a value only when the condition is false
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionForHostControl.linkType">
            <summary>
            The link type.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionForHostControl.LinkType">
            <summary>
            Gets or sets the link direction.
            </summary>
            <value>The link direction.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ConditionForHostControl.invertedLogic">
            <summary>
            The inverted logic.
            In inverted logic:
            - the property will be set with the "value when true" when the condition is false
            - the property will be set with the "value when false" when the condition is true
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionForHostControl.InvertedLogic">
            <summary>
            Gets or sets a value indicating whether [inverted logic].
            </summary>
            <value><c>true</c> if [inverted logic]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionForHostControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.ConditionForHostControl"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionForHostControl.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionForHostControl.UpdateControl">
            <summary>
            Updates the control.
            For efficiency reasons, we will only switch to the UI thread when we will really update the control.
            The polling of the data must be done in the background thread
            to ensure that the UI will remain responsive.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionForHostControl.UpdateErrorText(System.String)">
            <summary>
            Updates the error text associated with the control
            </summary>
            <param name="errorText">The error text to update</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ConditionForHostControl.SetPropertyDelegate">
            <summary>
            Sets the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ConditionalLinkTypeConverter">
            <summary>
            Converts between an 'ConditionalLink' value and the string description shown in property grids.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLinkTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Returns an empty string if the value is null, or a string describing the data item if non-null.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLinkTypeConverter.ConvertTo(Ace.UIBuilder.Client.Controls.ConditionalLink)">
            <summary>
            Converts to.
            </summary>
            <param name="conditionalLink">The conditional link.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionalLinkTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ConditionWrapper">
             <summary>
             Represents a condition wrapper that can be set in the propertyGrid control.
             
             It contains a reference to the client connection object.
            
             When an object is displayed using a property in the propertyGrid, we have to update the propertyGrid
             when the values of the object change. This require to change the object displayed by the propertyGrid.
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ConditionWrapper.Condition">
            <summary>
            Gets or sets the condition.
            </summary>
            <value>The condition.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ConditionWrapper.#ctor(Ace.UIBuilder.Client.Controls.Condition)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.ConditionWrapper"/> class.
            </summary>
            <param name="condition">The condition.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ClientConnectionAccessLevel">
            <summary>
            Class used by a control that wants to act as a client to connect to the server, and get/set the access level
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ClientConnectionAccessLevel.designMode">
            <summary>
            A flag used to disable the access level change in design mode.
            For debugging purpose, this flag can be left to false to have the behavior of the tool
            enabled in the Designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionAccessLevel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.ClientConnectionAccessLevel"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionAccessLevel.#ctor(Ace.UIBuilder.Client.Controls.IControlWithAccessLevel,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.ClientConnectionExposableData"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="designMode">if set to <c>true</c> [design mode].</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionAccessLevel.ClientConnectionAccessLevel_UpdateControl(System.Object,System.EventArgs)">
            <summary>
            Handles the UpdateControl event of the ClientConnectionAccessLevel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionAccessLevel.ClientConnectionAccessLevel_AccessLevelChanged(System.Object,Ace.Core.Server.Access.AccessLevelChangeEventArgs)">
            <summary>
            Handles the AccessLevelChanged event of the ClientConnectionAccessLevel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Access.AccessLevelChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionAccessLevel.UpdateAccessLevel(Ace.Core.Server.Access.AccessLevel)">
            <summary>
            Updates the access level.
            </summary>
            <param name="accessLevel">The access level.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionAccessLevel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ControlTypeEditor">
            <summary>
            Provides a property grid drop-down list for selecting
            "Control" objects in the Designer.
            The object that is edited by the property grid does not appear in the list
            to avoid a circular reference.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ControlTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to select a Control: provides a drop-down selection menu.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ControlTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Specifies to use a drop-down editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.IUpdatableControl">
            <summary>
            An interface indicating a control supports background updating
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IUpdatableControl.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control for updating
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.IOLinkHelper">
            <summary>
            A class used to make a block read of I/Os.
            It will use a cache to store the state of the signals.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.IOLinkHelper.CacheRefeshUpdateInterval">
            <summary>
            The interval for refreshing the cache, in milliseconds
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.IOLinkHelper.signalsByController">
            <summary>
            A dictionary of controller signals by controller
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLinkHelper.GetDigitalIO(Ace.Adept.Server.Desktop.Connection.IVpLinkedObject,System.Int32)">
            <summary>
            Gets the digital IO.
            </summary>
            <param name="controller">The controller.</param>
            <param name="signal">The signal.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLinkHelper.SetDigitalIO(Ace.Adept.Server.Desktop.Connection.IVpLinkedObject,System.Int32[])">
            <summary>
            Sets the digital IO.
            </summary>
            <param name="controller">The controller.</param>
            <param name="signals">The signals.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.IOLinkHelper.SignalState">
            <summary>
            A class storing the state of a signal and the corresponding exception
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.IOLinkHelper.SignalState.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.IOLinkHelper.SignalState.Exception">
            <summary>
            Gets or sets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.IOLinkHelper.ControllerSignals">
            <summary>
            A class that will store a list of signals with their states for a given controller.
            It will also store the time of the last update.
            It will act as a cache for this controller.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.IOLinkHelper.ControllerSignals.Controller">
            <summary>
            Gets or sets the controller.
            </summary>
            <value>The controller.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.IOLinkHelper.ControllerSignals.Signals">
            <summary>
            Gets the dictionary of signals.
            </summary>
            <value>The dictionary of signals.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.IOLinkHelper.ControllerSignals.LastUpdate">
            <summary>
            Gets or sets the last update time.
            </summary>
            <value>The last update time.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLinkHelper.ControllerSignals.#ctor(Ace.Adept.Server.Desktop.Connection.IVpLinkedObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.IOLinkHelper.ControllerSignals"/> class.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.PropertyLinkTripleState">
            <summary>
            A class used to link the property of a tool with an exposable data item.
            It has one active (-1) state, one inactive (0) state, and one unknown state (1)
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLinkTripleState.ValueWhenTrue">
            <summary>
            Gets or sets the value when true.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLinkTripleState.ValueWhenFalse">
            <summary>
            Gets or sets the value when false.
            </summary>
            <value>The value when false.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLinkTripleState.ValueWhenUnknown">
            <summary>
            Gets or sets the value when unknown.
            </summary>
            <value>The value when unknown.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkTripleState.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.PropertyLinkTripleState"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkTripleState.#ctor(System.Windows.Forms.Control,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.PropertyLinkTripleState"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkTripleState.ApplyFormattingFromDataToControl(System.Object)">
            <summary>
            Applies the formatting from the data to the control.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkTripleState.ApplyFormattingFromControlToData(System.Object)">
            <summary>
            Applies the formatting from the control to the data.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkTripleState.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.FormatStringTypeConverter">
            <summary>
            Converts between a 'FormatString' value and the string description shown in property grids.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.FormatStringTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/> is an exclusive list of possible values, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/> is an exhaustive list of possible values; false if other values are possible.
            </returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.FormatStringTypeEditor">
            <summary>
            Provides a property grid drop-down list for selecting
            "FormatString" objects in the Designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.FormatStringTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit ConditionalLinks: provides a drop-down selection menu.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.FormatStringTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Specifies to use a drop-down editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton">
            <summary>
            A tool used in the UIBuilder that allows to change the password for the current access level.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton.ClientConnectionChangePassword">
            <summary>
            Gets or sets the client connection used to change the password.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton.ChangePasswordButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the ChangePasswordButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.ChangePasswordButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector">
            <summary>
            A tool used in the UIBuilder that displays the resipe selection control.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.ClientConnectionRecipeSource">
            <summary>
            Gets or sets the client connection associated with the recipe manager object.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.RecipeManagerTarget">
            <summary>
            Gets or sets the ACE object associated with the control.
            
            This property is only used by the property editor of the UI Builder designer, it is not serialized.
            </summary>
            <value>The variable properties.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.clientConnectionRecipeSource_UpdateControl(System.Object,System.EventArgs)">
            <summary>
            Handles the UpdateControl event of the clientConnectionImageSource control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.UpdateControl">
            <summary>
            Updates the control.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RecipeSelector.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor">
            <summary>
            This tool allows to edit a 3D Transform variable.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.PropertyLinkTransform">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.TransformText">
            <summary>
            Gets or sets the transform text.
            </summary>
            <value>The transform text.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.CustomTypeDescriptorX">
            <summary>
            Gets the numeric up down control for the X value (exposed for the Designer).
            </summary>
            <value>The numeric up down control for the X value.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.CustomTypeDescriptorY">
            <summary>
            Gets the numeric up down control for the Y value (exposed for the Designer).
            </summary>
            <value>The numeric up down control for the Y value.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.CustomTypeDescriptorZ">
            <summary>
            Gets the numeric up down control for the Z value (exposed for the Designer).
            </summary>
            <value>The numeric up down control for the Z value.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.CustomTypeDescriptorYaw">
            <summary>
            Gets the numeric up down control for the Yaw value (exposed for the Designer).
            </summary>
            <value>The numeric up down control for the Yaw value.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.CustomTypeDescriptorPitch">
            <summary>
            Gets the numeric up down control for the Pitch value (exposed for the Designer).
            </summary>
            <value>The numeric up down control for the Pitch value.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.CustomTypeDescriptorRoll">
            <summary>
            Gets the numeric up down control for the Roll value (exposed for the Designer).
            </summary>
            <value>The numeric up down control for the Roll value.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.transformEditor_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the transformEditor control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.transformEditor_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the transformEditor control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.TransformEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData">
            <summary>
            A class used to store the properties of a data used in the graph.
            It will contains a link to an exposable data item
            and some graphical settings.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData.pointList">
            <summary>
            The list of points.
            This will be created during the configuration phase.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData.PointList">
            <summary>
            Gets the point list.
            </summary>
            <value>The point list.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData.hostControl">
            <summary>
            The host control we belong to,
            which is a graph control.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData.HostControl">
            <summary>
            Gets or sets the host control.
            </summary>
            <value>The host control.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData.PropertyLinkValue">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData.DataName">
            <summary>
            Gets or sets the name of the data.
            </summary>
            <value>The name of the data.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData.DataColor">
            <summary>
            Gets or sets the color of the data.
            </summary>
            <value>The color of the data.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData.DataWidth">
            <summary>
            Gets or sets the width of the data.
            </summary>
            <value>The width of the data.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData.IsDataItemDefined">
            <summary>
            Gets a value indicating whether the data item is defined.
            </summary>
            <value>
            	<c>true</c> if data item defined; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData"/> class.
            This constructor with no parameters will be used by the Designer.
            The Designer will set the HostControl property later.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData.#ctor(Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph,System.String,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData"/> class.
            This constructor will be called when a graph object is created
            in the Designer.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="dataName">Name of the data.</param>
            <param name="dataColor">Color of the data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData.ToString">
            <summary>
            Returns a string description of this graph data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData.Configure(System.Int32)">
            <summary>
            Configures this instance.
            </summary>
            <param name="pointCount">The point count.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphData.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton">
            <summary>
            This tool allows to close the user interface it is on.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.CloseButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the CloseButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.CloseButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph">
            <summary>
            This tool allows to display data in graphs.
            Multiple data can be plot at the same time.
            </summary>	
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.lastErrorReported">
            <summary>
            Handle to last error reported to the UI
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.zedGraph">
            <summary>
            The graph object we will be hosting.
            We can not inherit from it or create it in the constructor,
            because it raises an inter-thread exception at run time.
            So we have to create it when this class will be loaded.
            Also, we will not use the Ace.Core.Client.Graph object
            to have more control on the customization of the graph.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.updateGraphTimer">
            <summary>
            The timer we will use to update the graph.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.GraphDataCount">
            <summary>
            A constant defining how many data can be graphed at a time
            This can be replaced by a greater value if needed
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.DefaultColors">
            <summary>
            This array size must match the GraphDataCount const
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.tickStart">
            <summary>
            The starting time in milliseconds
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.tickElapsed">
            <summary>
            The elapsed time in milliseconds, used to resume after a stop
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.ScrollPercentage">
            <summary>
            Define the limit used to start the scrolling,
            as a percentage of the duration.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.graphTitle">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.GraphTitle">
            <summary>
            Gets or sets the title of the graph
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.graphTitleFont">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.GraphTitleFont">
            <summary>
            Gets or sets the font of the title of the graph
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.graphTitleForeColor">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.GraphTitleForeColor">
            <summary>
            Gets or sets the foreground color of the title of the graph
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.xAxisTitle">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.XAxisTitle">
            <summary>
            Gets or sets the title of the X-Axis
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.xAxisTitleFont">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.XAxisTitleFont">
            <summary>
            Gets or sets the font of the title of the X-Axis
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.xAxisTitleForeColor">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.XAxisTitleForeColor">
            <summary>
            Gets or sets the foreground color of the title of the X-Axis
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.xAxisWidth">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.XAxisWidth">
            <summary>
            Gets or sets the width of the X-Axis
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.yAxisTitle">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.YAxisTitle">
            <summary>
            Gets or sets the title of the Y-Axis
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.yAxisTitleFont">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.YAxisTitleFont">
            <summary>
            Gets or sets the font of the title of the Y-Axis
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.yAxisTitleForeColor">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.YAxisTitleForeColor">
            <summary>
            Gets or sets the foreground color of the title of the Y-Axis
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.yAxisWidth">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.YAxisWidth">
            <summary>
            Gets or sets the width of Y-Axis
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.yAxisManualScale">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.YAxisManualScale">
            <summary>
            Gets or sets the interval between two updates of the graph in milliseconds.
            </summary>
            <value>The scan rate.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.yAxisMin">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.YAxisMin">
            <summary>
            Gets or sets the minimum value of teh Y-Axis.
            </summary>
            <value>The scan rate.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.yAxisMax">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.YAxisMax">
            <summary>
            Gets or sets the maximum value of teh Y-Axis.
            </summary>
            <value>The scan rate.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.chartBackColor">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.ChartBackColor">
            <summary>
            Gets or sets the background color of the chart area
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.chartBorderColor">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.ChartBorderColor">
            <summary>
            Gets or sets the color of the border of the chart area
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.chartBorderWidth">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.ChartBorderWidth">
            <summary>
            Gets or sets the width of the border of the chart area
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.legendBackColor">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.LegendBackColor">
            <summary>
            Gets or sets the background color of the legend area
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.legendFont">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.LegendFont">
            <summary>
            Gets or sets the font of the legend
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.legendForeColor">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.LegendForeColor">
            <summary>
            Gets or sets the foreground color of the legend
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.legendBorderWidth">
            <summary>
            We can not directly use the ZedGraph object as it may be not yet created
            (it is created in the load event).
            So we will use this additional parameter and update the graph object
            in the reset method.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.LegendBorderWidth">
            <summary>
            Gets or sets the width of the border of the legend
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.GraphDataCollectionForDesigner">
            <summary>
            Gets the graph data collection.
            This property is used by the Designer only.
            </summary>
            <value>The graph data collection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.GraphDataCollection">
            <summary>
            Gets the graph data.
            This property is used to expose the graph data in the PropertyGrid.
            </summary>
            <value>The graph data.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.GraphDuration">
            <summary>
            Gets or sets the duration of the graph window, in seconds
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.GraphInterval">
            <summary>
            Gets or sets the interval between two updates of the graph in milliseconds.
            </summary>
            <value>The scan rate.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.IsRunning">
            <summary>
            Determines whether this instance is running.
            </summary>
            <returns>
            	<c>true</c> if this instance is running; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.InitializeAtLoad">
            <summary>
            Initializes at load.
            All this code can not be placed in the constructor.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.propertyGrid_SelectedObjectsChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedObjectsChanged event of the propertyGrid control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.SetFontSpec(System.Drawing.Font,System.Drawing.Color,ZedGraph.FontSpec)">
            <summary>
            Sets the font spec.
            </summary>
            <param name="font">The font.</param>
            <param name="color">The color.</param>
            <param name="fontSpec">The font spec.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.ResetGraph">
            <summary>
            Resets the graph.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.busyUpdate">
            <summary>
            Protection against reentrance
            From MSDN:
            The callback method executed by the timer should be reentrant,
            because it is called on ThreadPool  threads. The callback can be executed simultaneously
            on two thread pool threads if the timer interval is less than the time required
            to execute the callback, or if all thread pool threads are in use
            and the callback is queued multiple times.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.UpdateControl(System.Object)">
            <summary>
            Updates the control.
            For efficiency reasons, we will only switch to the UI thread when we will really update the control.
            The polling of the data must be done in the background thread
            to ensure that the UI will remain responsive.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.UpdateErrorText(System.String)">
            <summary>
            Updates the error text associated with the control
            </summary>
            <param name="errorText">The error text to update</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.GetValues">
            <summary>
            Gets the data values.
            </summary>
            <returns>The data values.</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.SimulateDataValues(System.Double)">
            <summary>
            Simulates the data values.
            </summary>
            <param name="time">The time.</param>
            <returns>The data values.</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.SendDataToGraph(System.Double,System.Object[])">
            <summary>
            Sends the data to the graph.
            </summary>
            <param name="time">The time.</param>
            <param name="dataValues">The data values.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.Start">
            <summary>
            Starts the graph.
            If it was previously stopped but not reset, it will resume
            where it was stopped.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.busyStop">
            <summary>
            Protection against reentrance
            As we have a wait sequence with a DoEvents call in the Stop method,
            it is better to protect it against reentrance.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.Stop">
            <summary>
            Stops the graph.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.Reset">
            <summary>
            Resets the graph.
            If it was running, this will stop it.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.Graph.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog">
            <summary>
            This tool allows to display the event log window.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.ClientConnectionEventLog">
            <summary>
            Gets or sets the client connection associated with the Event Log window.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.eventLog">
            <summary>
            The control we are hosting.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.EventLog_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the EventLog control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.clientConnectionEventLog_UpdateControl(System.Object,System.EventArgs)">
            <summary>
            Handles the UpdateControl event of the clientConnectionEventLog control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.InitializeControl">
            <summary>
            Initializes the control.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLog.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl">
            <summary>
            This tool allows to display the robot jog control window.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.ClientConnectionRobotJogControl">
            <summary>
            Gets or sets the client connection associated with the Robot Jog Control window.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.teachControl">
            <summary>
            The control we are hosting.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.RobotJogControl_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the RobotJogControl control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.clientConnectionRobotJogControl_UpdateControl(System.Object,System.EventArgs)">
            <summary>
            Handles the UpdateControl event of the clientConnectionRobotJogControl control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.InitializeControl">
            <summary>
            Initializes the control.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton">
            <summary>
            A tool used in the UIBuilder that opens the event log window.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.ClientConnectionJogControl">
            <summary>
            Gets or sets the client connection associated with the Jog control window.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.EventLogDisplayButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the EventLogDisplayButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.EventLogDisplayButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton">
            <summary>
            A tool used in the UIBuilder that allows to sign in for a given access level.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton.ClientConnectionSign">
            <summary>
            Gets or sets the client connection used to sign in.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton.SignIn_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the SignIn control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignInButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton">
            <summary>
            A tool used in the UIBuilder that allows to sign out for the current access level.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton.ClientConnectionSignOut">
            <summary>
            Gets or sets the client connection used to sign out.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton.SignOut_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the SignOut control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.SignOutButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton">
            <summary>
            A tool used in the UIBuilder that opens the robot jog control window.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.ClientConnectionJogControl">
            <summary>
            Gets or sets the client connection associated with the Jog control window.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.RobotJogControlDisplayButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the RobotJogControlDisplayButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.RobotJogControlDisplayButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton">
            <summary>
            A tool used in the UIBuilder that displays an I/O button.
            
            The I/O Button tool is used to toggle a digital output or alternatively to display the state of a digital input.
            The pictures used for the different states of the toggle can be changed.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.IOLinkPressed">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.Controller">
            <summary>
            Gets or sets the controller or iRobot associated with the control.
            
            This property is only used by the property editor of the UI Builder designer, it is not serialized.
            </summary>
            <value>The variable properties.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.Signals">
            <summary>
            Gets or sets the signal numbers.
            
            This property is only used by the property editor of the UI Builder designer, it is not serialized.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.ImageDisplayMode">
            <summary>
            The display mode for the I/O button.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.ImageDisplayMode.DigitalInput">
            <summary>
            Display the button using digital input icons
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.ImageDisplayMode.DigitalOutput">
            <summary>
            Display the button using digital output icons
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.DisplayMode">
            <summary>
            The image display mode
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.state">
            <summary>
            The internal state of the toggle.
            This can be false (not set) or true (set)
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.pressed">
            <summary>
            The appearance of the toggle, based on the I/Os we are connected to.
            0 is false (not set), -1 is true (set), other value is undefined
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.Pressed">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton"/> is pressed.
            </summary>
            <value>The pressed value. 0 is false, -1 is true, 1 is undefined</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.Active">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton"/> is active.
            </summary>
            <value><c>true</c> if active; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.IOButton_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SizeChanged event of the IOButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.IOButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the IOButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.UpdateImage">
            <summary>
            Updates the image.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.GetDefaultInputImage">
            <summary>
            Gets the default input image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.GetDefaultOutputImage">
            <summary>
            Gets the default output image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.IOButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton">
            <summary>
            A tool used in the UIBuilder that opens another user interface.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.ClientConnectionUIForm">
            <summary>
            Gets or sets the client connection associated with the UIForm object.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.UIForm">
            <summary>
            Gets or sets the ACE object associated with the control.
            
            This property is only used by the property editor of the UI Builder designer, it is not serialized.
            </summary>
            <value>The variable properties.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.Modal">
            <summary>
            Gets or sets a value indicating whether the form will be showed in modal mode or in modeless mode.
            </summary>
            <value><c>true</c> if [show dialog]; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.customScript">
            <summary>
            The custom script object that will be used to build the form to display.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.UIFormDisplayButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the UIFormDisplayButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.UIFormDisplayButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay">
            <summary>
            A tool used in the UIBuilder that displays the image of an image source.
            
            Often times in an Operator Interface, the images acquired by a camera in the system are necessary to display.
            The ImageDisplay tool provides this capability.
            The Image Source property must be set to the camera whose image should be displayed in this area.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.ClientConnectionImageSource">
            <summary>
            Gets or sets the client connection associated with the image source object.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.ImageSource">
            <summary>
            Gets or sets the ACE object associated with the control.
            
            This property is only used by the property editor of the UI Builder designer, it is not serialized.
            </summary>
            <value>The variable properties.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.display">
            <summary>
            The control we are hosting.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.clientConnectionImageSource_UpdateControl(System.Object,System.EventArgs)">
            <summary>
            Handles the UpdateControl event of the clientConnectionImageSource control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.UpdateControl">
            <summary>
            Updates the control.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.VisionDisplay.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor">
            <summary>
            A tool used in the UIBuilder that displays the default editor of an ACE object.
            
            Sometimes in an Operator Interface, one needs to provide a standard ACE Object Editor for the operator.
            The WorkspaceObjectEditor tool is used to provide this.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.ClientConnectionObject">
            <summary>
            Gets or sets the client connection associated with the workspace object.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.AceObject">
            <summary>
            Gets or sets the workspace object associated with the control.
            
            This property is only used by the property editor of the UI Builder designer, it is not serialized.
            </summary>
            <value>The variable properties.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.UpdateControl">
            <summary>
            Updates the control.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.WorkspaceObjectEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphDataTypeConverter">
            <summary>
            A type converter for a graph data.
            It will inherit from SortedExpandableObjectConverter to allow
            property localization and sorting.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdeptAce.GraphDataTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts to.
            </summary>
            <param name="context">The context.</param>
            <param name="culture">The culture.</param>
            <param name="value">The value.</param>
            <param name="destType">Type of the dest.</param>
            <returns></returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button">
            <summary>
            A tool used in the UIBuilder that displays a button.
            
            Buttons are used in an Operator Interface to execute actions.
            This tool is typically used to start the execution of a C# script.
            </summary>	
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.PropertyLinkPressed">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ValueWhenPressed">
            <summary>
            Gets or sets the value when pressed.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.PulseTime">
            <summary>
            Gets or sets the pulse time.
            </summary>
            <value>The pulse time.</value>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.Click">
            <summary>
            Occurs when the control is clicked.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ToolTypes">
            <summary>
            The different types of this tool
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ToolTypes.Rectangular">
            <summary>
            A rectangular button.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ToolTypes.Round">
            <summary>
            A round button.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ToolTypes.RoundedRectangle">
            <summary>
            A rounded rectangle button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ToolType">
            <summary>
            Gets or sets the type of the tool.
            </summary>
            <value>The type of the tool.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
            <value></value>
            <returns>The foreground <see cref="T:System.Drawing.Color"/> of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor"/> property.</returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text associated with this control.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.TextSize">
            <summary>
            Gets or sets the size of the text.
            </summary>
            <value>The size of the text.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.ButtonColor">
            <summary>
            Gets or sets the color of the button.
            </summary>
            <value>The color of the button.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.PressedState">
            <summary>
            Gets or sets the state of the on.
            Private property, only used for configuration.
            </summary>
            <value>The state of the on.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.Button_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the Button control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Button.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSector">
            <summary>
            A class used to store the properties of a gauge sector.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSector.hostControl">
            <summary>
            The host control we belong to,
            which is a gauge control.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSector.HostControl">
            <summary>
            Gets or sets the host control.
            </summary>
            <value>The host control.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSector.sectorIndex">
            <summary>
            The index of the sector, 0-based.
            It will be used to access to the resources of the GLG control.
            -1 means that the sector index has not been set yet.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSector.SectorIndex">
            <summary>
            Gets or sets the index of the sector.
            Used by the designer only
            </summary>
            <value>The index of the sector.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSector.SectorName">
            <summary>
            Gets or sets the name of the sector.
            </summary>
            <value>The name of the sector.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSector.SectorEnd">
            <summary>
            Gets or sets the sector end.
            </summary>
            <value>The sector end.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSector.SectorColor">
            <summary>
            Gets or sets the color of the sector.
            </summary>
            <value>The color of the sector.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSector"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSector.#ctor(Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge,System.Int32,System.String,System.Double,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSector"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="sectorIndex">Index of the sector.</param>
            <param name="sectorName">Name of the sector.</param>
            <param name="sectorEnd">The sector end.</param>
            <param name="sectorColor">Color of the sector.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSector.ToString">
            <summary>
            Returns a string description of this gauge sector.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSector.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSectorTypeConverter">
            <summary>
            A type converter for a gauge sector.
            It will inherit from SortedExpandableObjectConverter to allow
            property localization and sorting.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.GaugeSectorTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts to.
            </summary>
            <param name="context">The context.</param>
            <param name="culture">The culture.</param>
            <param name="value">The value.</param>
            <param name="destType">Type of the dest.</param>
            <returns></returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton">
            <summary>
            A tool used in the UIBuilder that displays an I/O button.
            
            The I/O Button tool is used to toggle a digital output or alternatively to display the state of a digital input.
            The pictures used for the different states of the toggle can be changed.
            </summary>	
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.IOLinkPressed">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.Controller">
            <summary>
            Gets or sets the controller or iRobot associated with the control.
            
            This property is only used by the property editor of the UI Builder designer, it is not serialized.
            </summary>
            <value>The variable properties.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.Signals">
            <summary>
            Gets or sets the signal numbers.
            
            This property is only used by the property editor of the UI Builder designer, it is not serialized.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.Click">
            <summary>
            Occurs when the control is clicked.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ToolTypes">
            <summary>
            The different types of this tool
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ToolTypes.DigitalInputRectangular">
            <summary>
            A rectangular digital input button.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ToolTypes.DigitalInputRound">
            <summary>
            A round digital input button.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ToolTypes.DigitalInputRoundedRectangle">
            <summary>
            A rounded rectangle digital input button.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ToolTypes.DigitalOutputRectangular">
            <summary>
            A rectangular digital output button.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ToolTypes.DigitalOutputRound">
            <summary>
            A round digital output button.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ToolTypes.DigitalOutputRoundedRectangle">
            <summary>
            A rounded rectangle digital output button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ToolType">
            <summary>
            Gets or sets the type of the tool.
            </summary>
            <value>The type of the tool.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
            <value></value>
            <returns>The foreground <see cref="T:System.Drawing.Color"/> of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor"/> property.</returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text associated with this control.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.TextSize">
            <summary>
            Gets or sets the size of the text.
            </summary>
            <value>The size of the text.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.OffColor">
            <summary>
            Gets or sets the color of the off state.
            </summary>
            <value>The color off.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.OnColor">
            <summary>
            Gets or sets the color of the on state.
            </summary>
            <value>The color on.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.UnknownColor">
            <summary>
            Gets or sets the color of the unknown state.
            </summary>
            <value>The color unknown.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.state">
            <summary>
            The internal state of the toggle.
            This can be false (not set) or true (set)
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.pressed">
            <summary>
            The appearance of the toggle, based on the I/Os we are connected to.
            0 is false (not set), -1 is true (set), other value is undefined
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.Pressed">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton"/> is pressed.
            </summary>
            <value><c>true</c> if pressed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ImageDisplayMode">
            <summary>
            The display mode and behavior for the I/O button.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ImageDisplayMode.DigitalInput">
            <summary>
            Digital input (read only)
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.ImageDisplayMode.DigitalOutput">
            <summary>
            Digital output (read and write)
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.IOButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the IOButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.UpdateImage">
            <summary>
            Updates the image.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.IOButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton">
            <summary>
            A tool used in the UIBuilder that displays a toggle button.
            
            The Toggle tool is used to toggle a Boolean value or alternatively to display the state of a Boolean value.
            It can be linked to a Boolean ACE item to directly control its state or display its state.
            The pictures used for the different states of the toggle can be changed.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.PropertyLinkPressed">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ValueWhenUnpressed">
            <summary>
            Gets or sets the value when unpressed.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when false.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ValueWhenPressed">
            <summary>
            Gets or sets the value when pressed.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.Click">
            <summary>
            Occurs when the control is clicked.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ToolTypes">
            <summary>
            The different types of this tool
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ToolTypes.Rectangular">
            <summary>
            A rectangular toggle button.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ToolTypes.Round">
            <summary>
            A round toggle button.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ToolTypes.RoundedRectangle">
            <summary>
            A rounded rectangle toggle button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ToolType">
            <summary>
            Gets or sets the type of the tool.
            </summary>
            <value>The type of the tool.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
            <value></value>
            <returns>The foreground <see cref="T:System.Drawing.Color"/> of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor"/> property.</returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text associated with this control.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.TextSize">
            <summary>
            Gets or sets the size of the text.
            </summary>
            <value>The size of the text.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ButtonColor">
            <summary>
            Gets or sets the color of the button.
            </summary>
            <value>The color of the button.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.pressed">
            <summary>
            The appearance of the toggle, based on the data item we are connected to.
            0 is false (not set), -1 is true (set)
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.Pressed">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton"/> is pressed.
            </summary>
            <value><c>true</c> if pressed; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.ToggleButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the ToggleButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.ToggleButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator">
            <summary>
            It is used to display a numeric value with a rendering similar to digital indicators.
            </summary>	
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.PropertyLinkValue">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.ToolTypes">
            <summary>
            The different types of this tool
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.ToolTypes.Rectangular">
            <summary>
            A rectangular numeric indicator.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.ToolTypes.Round">
            <summary>
            A round numeric indicator.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.ToolTypes.RoundedRectangle">
            <summary>
            A rounded rectangle numeric indicator.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.ToolType">
            <summary>
            Gets or sets the type of the tool.
            </summary>
            <value>The type of the tool.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.NumDigits">
            <summary>
            Gets or sets the num digits.
            Private property, only used for configuration.
            </summary>
            <value>The num digits.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.IndicatorBackgroundColor">
            <summary>
            Gets or sets the color of the indicator.
            </summary>
            <value>The color of the indicator.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.OffColor">
            <summary>
            Gets or sets the color of the off state.
            </summary>
            <value>The color off.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.OnColor">
            <summary>
            Gets or sets the color of the on state.
            </summary>
            <value>The color on.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.DecimalPlaces">
            <summary>
            Gets or sets the decimal places.
            </summary>
            <value>The decimal places.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.GetNumDigits">
            <summary>
            Gets the number of digits.
            Depending on the size of the control, we need to change the number of digits
            we display.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.UpdateValue">
            <summary>
            Update the value.
            This converts the internal value into individual digits and set them to the display.
            We will add additional zeros to the right to simulate a fixed-position decimal separator.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.NumericIndicator.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator">
            <summary>
            It is used to display a boolean value with a rendering similar to lights.
            </summary>	
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.PropertyLinkState">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ValueWhenOff">
            <summary>
            Gets or sets the value when off.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when false.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ValueWhenOn">
            <summary>
            Gets or sets the value when on.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ToolTypes">
            <summary>
            The different types of this tool
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ToolTypes.Rectangular">
            <summary>
            A rectangular digital indicator.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ToolTypes.Round">
            <summary>
            A round digital indicator.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ToolTypes.RoundedRectangle">
            <summary>
            A rounded rectangle digital indicator.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ToolType">
            <summary>
            Gets or sets the type of the tool.
            </summary>
            <value>The type of the tool.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
            <value></value>
            <returns>The foreground <see cref="T:System.Drawing.Color"/> of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor"/> property.</returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text associated with this control.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.TextSize">
            <summary>
            Gets or sets the size of the text.
            </summary>
            <value>The size of the text.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.OffColor">
            <summary>
            Gets or sets the color of the off state.
            </summary>
            <value>The color off.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.OnColor">
            <summary>
            Gets or sets the color of the on state.
            </summary>
            <value>The color on.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.UnknownColor">
            <summary>
            Gets or sets the color of the unknown state.
            </summary>
            <value>The color unknown.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.DigitalIndicator.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider">
            <summary>
            This tool is used to change a value using a moving knob.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.PropertyLinkValue">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.ValueChanged">
            <summary>
            Occurs when [value changed].
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.ToolTypes">
            <summary>
            The different types of this tool
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.ToolTypes.RectangularHorizontal">
            <summary>
            A rectangular horizontal slider.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.ToolTypes.RectangularVertical">
            <summary>
            A rectangular vertical slider.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.ToolType">
            <summary>
            Gets or sets the type of the tool.
            </summary>
            <value>The type of the tool.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.SliderBackgroundColor">
            <summary>
            Gets or sets the color of the slider background.
            </summary>
            <value>The color of the slider background.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.KnobColor">
            <summary>
            Gets or sets the color of the knob.
            </summary>
            <value>The color of the knob.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.Slider_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the Slider control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Slider.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge">
            <summary>
            A tool used to indicate a numeric value by a moving a needle or a pointer
            on a graduated surface or face.
            </summary>	
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.PropertyLinkValue">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.GaugeSectorCount">
            <summary>
            A constant defining how many gauge sectors we have
            This can be replaced by a greater value if needed
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.DefaultColors">
            <summary>
            This array size must match the GaugeSectorCount const
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.DefaultEnds">
            <summary>
            This array size must match the GaugeSectorCount const
            </summary>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ValueChanged">
            <summary>
            Occurs when [value changed].
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ToolTypes">
            <summary>
            The different types of this tool
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ToolTypes.RectangularDial">
            <summary>
            A rectangular dial.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ToolTypes.RoundDial">
            <summary>
            A round dial.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ToolTypes.RoundDialTop">
            <summary>
            A round dial with scale at the top.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ToolTypes.Thermometer">
            <summary>
            A thermometer.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ToolType">
            <summary>
            Gets or sets the type of the tool.
            </summary>
            <value>The type of the tool.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
            <value></value>
            <returns>The foreground <see cref="T:System.Drawing.Color"/> of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor"/> property.</returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.TextSize">
            <summary>
            Gets or sets the size of the text.
            </summary>
            <value>The size of the text.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value><c>true</c> if [read only]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.GaugeBackgroundColor">
            <summary>
            Gets or sets the color of the gauge background.
            </summary>
            <value>The color of the gauge background.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.IndicatorColor">
            <summary>
            Gets or sets the color of the indicator.
            </summary>
            <value>The color of the indicator.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.GaugeSectorCollectionForDesigner">
            <summary>
            Gets the gauge sector collection.
            This property is used by the Designer only.
            </summary>
            <value>The gauge sector collection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.GaugeSectorCollection">
            <summary>
            Gets the gauge sectors.
            This property is used to expose the gauge sectors in the PropertyGrid.
            </summary>
            <value>The gauge sectors.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.InitializeAtLoad">
            <summary>
            Initializes at load.
            All this code can not be placed in the consrtuctor.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.Dial_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the Dial control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Gauge.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgHost">
            <summary>
            This class is only a host for the GLG ActiveX control.
            When we load widget at Design time into an existing ActiveX control,
            it becomes active and catches the focus.
            To avoid that, we will create a new instance of this class each time we load a new widget.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgHost.axGlg1">
            <summary>
            The ActiveX object.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgHost.AxGlg">
            <summary>
            Gets the ActiveX object.
            </summary>
            <value>The ax GLG.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgHost.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgHost"/> class.
            It will load the ActiveX container with the widget described by a GLG drawing
            embedded in our Assembly.
            </summary>
            <param name="glgName">Name of the GLG.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl">
            <summary>
            This class is a container for the ActiveX host control
            and provides some helper function to interact with the widget
            hosted by the ActiveX container.
            We have to cope with some constraints
            - The ActiveX object can not be created in the constructor,
            because it is called by a MTA background thread in the UIBuilder
            - We must be able to dynamically load the GLG widget at design time
            to change the widget
            - We must be able to propagate the property values from one widget to another
            when the widget changes
            According to bug 7198, we need to call Invalidate(true) after every UpdateGlg()
            and use an Invoke call.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.FontSizes">
            <summary>
            The font sizes.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.FontSizes.XXSmall">
            <summary>
            XX Small
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.FontSizes.XSmall">
            <summary>
            X Small
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.FontSizes.Small">
            <summary>
            Small
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.FontSizes.Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.FontSizes.Large">
            <summary>
            Large
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.FontSizes.XLarge">
            <summary>
            X Large
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.FontSizes.XXLarge">
            <summary>
            XX Large
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.axGlgHost">
            <summary>
            The ActiveX host object.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.activeXCreationAllowed">
            <summary>
            A flag indicating if we can create the ActiveX object.
            Until the control is not loaded, do not try to create the ActiveX object.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.restoring">
            <summary>
            A flag indicating that we are restoring the resources after loading a new widget.
            In this case, we do not want the dictionaries to be changed.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.widgetType">
            <summary>
            The string corresponding to the type of the GLG widget
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.widgetDictionary">
            <summary>
            A dictionary that will be used to convert the tools type enumeration
            into a GLG widget name
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.resourceDictionary">
            <summary>
            As two widgets may have resources with different names for the same behavior,
            we will use this dictionary to map the widget resources to a common, virtual resource.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.doubleDictionary">
            <summary>
            A dictionary that will be used to store the double resources used by a GLG widget.
            This is required to restore the resources when the widget is reloaded after a type change.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.stringDictionary">
            <summary>
            A dictionary that will be used to store the string resources used by a GLG widget.
            This is required to restore the resources when the widget is reloaded after a type change.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.colorDictionary">
            <summary>
            A dictionary that will be used to store the color resources used by a GLG widget.
            This is required to restore the resources when the widget is reloaded after a type change.
            This is also required to restore the friendly names of the colors
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.fontDictionary">
            <summary>
            A dictionary that will be used to store the font resources used by a GLG widget.
            This is required to restore the resources when the widget is reloaded after a type change.
            </summary>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.WidgetActivate">
            <summary>
            Occurs when [widget activate].
            </summary>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.WidgetLoaded">
            <summary>
            Occurs when [widget loaded].
            </summary>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.WidgetValueChanged">
            <summary>
            Occurs when [widget value changed].
            </summary>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.WidgetMouseClick">
            <summary>
            Occurs when [widget mouse click].
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.inputEnabled">
            <summary>
            A temporary parameter used to store the input enable state
            before the ActiveX object is created.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.InputEnabled">
            <summary>
            Gets or sets a value indicating whether [input enabled].
            </summary>
            <value><c>true</c> if [input enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.BackColorForDesigner">
            <summary>
            Obsolete: the BackColor property is now working (Bug 7223)
            </summary>
            <value>The back color for designer.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Drawing.Color"/> that represents the background color of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor"/> property.</returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.AddWidget(System.String,System.String)">
            <summary>
            Adds the widget.
            </summary>
            <param name="widgetType">Type of the widget.</param>
            <param name="widgetName">Name of the widget.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.AddResourceMapping(System.String,System.String,System.String)">
            <summary>
            Adds the resource mapping.
            </summary>
            <param name="widgetType">Type of the widget.</param>
            <param name="internalResource">The internal resource.</param>
            <param name="widgetResource">The widget resource.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.LoadWidget">
            <summary>
            Loads the ActiveX container with the widget described by a Glg drawing
            embedded in our Assembly.
            As the container is an activeX object, we can not programmaticaly add it to the control.
            If we do that, it will be active at design time.
            So we need to add it in the Visual Studio Designer to create our control.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.AxGlg_Input(System.Object,AxGlgoleLib._DGlgEvents_InputEvent)">
            <summary>
            Handles the Input event of the axGlg1 control.
            This is used to process the events from input controls.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.ConvertResource(System.String)">
            <summary>
            Converts the resource.
            </summary>
            <param name="resource">The resource.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.GetWidgetType">
            <summary>
            Gets the type of the widget.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.SetWidgetType(System.String)">
            <summary>
            Sets the type of the widget.
            </summary>
            <param name="widgetType">Type of the widget.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.GetBooleanAsIO(System.String)">
            <summary>
            Gets the boolean value as an IO.
            Logic is:
            GLG = 0 => return 0
            GLG = 1 => return -1
            GLG = 2 => return 1
            </summary>
            <param name="resource">The resource.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.SetIOAsBoolean(System.String,System.Int32)">
            <summary>
            Sets the IO as a boolean value.
            Logic is:
            Value = 0 => set 0
            Value = -1 => set 1
            Other Value => set 2
            </summary>
            <param name="resource">The resource.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.GetBoolean(System.String)">
            <summary>
            Gets the boolean.
            </summary>
            <param name="resource">The resource.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.SetBoolean(System.String,System.Boolean)">
            <summary>
            Sets the boolean.
            </summary>
            <param name="resource">The resource.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.GetInteger(System.String)">
            <summary>
            Gets the integer.
            </summary>
            <param name="resource">The resource.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.SetInteger(System.String,System.Int32)">
            <summary>
            Sets the integer.
            </summary>
            <param name="resource">The resource.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.GetFontSize(System.String)">
            <summary>
            Gets the size of the font.
            </summary>
            <param name="resource">The resource.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.SetFontSize(System.String,Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.FontSizes)">
            <summary>
            Sets the size of the font.
            </summary>
            <param name="resource">The resource.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.GetDouble(System.String)">
            <summary>
            Gets the double.
            </summary>
            <param name="resource">The resource.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.SetDouble(System.String,System.Double)">
            <summary>
            Sets the double.
            </summary>
            <param name="resource">The resource.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.GetString(System.String)">
            <summary>
            Gets the string.
            </summary>
            <param name="resource">The resource.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.SetString(System.String,System.String)">
            <summary>
            Sets the string.
            </summary>
            <param name="resource">The resource.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.GetColor(System.String)">
            <summary>
            Gets the color.
            </summary>
            <param name="resource">The resource.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.SetColor(System.String,System.Drawing.Color)">
            <summary>
            Sets the color.
            </summary>
            <param name="resource">The resource.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.AdvancedTools.Glg.AxGlgControl.SetFont(System.String,System.Drawing.Font)">
            <summary>
            Sets the font.
            </summary>
            <param name="resource">The resource.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox">
            <summary>
            A tool used in the UIBuilder that displays a combo box.
            
            This tool is used to select a value in a drop-down list.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.PropertyLinkText">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.FormatString">
            <summary>
            Gets or sets the format string.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.Editable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox"/> is editable.
            We do not directly expose the DropDownStyle property as
            ComboBoxStyle.Simple is not working as expected (bug #6545).
            </summary>
            <value><c>true</c> if editable; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.ComboBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the ComboBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.ComboBox_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the ComboBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.ComboBox_Leave(System.Object,System.EventArgs)">
            <summary>
            Handles the Leave event of the ComboBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ComboBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView">
             <summary>
             A tool used in the UIBuilder that displays a list using different views.
            
             This tool is used to select a value in a list using one of four different views.
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.PropertyLinkText">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.FormatString">
            <summary>
            Gets or sets the format string.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.ListViewColumns">
            <summary>
            Gets or sets the columns of the ListView control.
            </summary>
            <value>
            The ListView columns.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.TextWrapper">
            <summary>
            Gets or sets a value wrapping the Text property of the ListBox.
            </summary>
            <value><c>true</c> if [text wrapper]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.LargeImageList">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.ImageList"/> to use when displaying items as large icons in the control.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Windows.Forms.ImageList"/> that contains the icons to use when the <see cref="P:System.Windows.Forms.ListView.View"/> property is set to <see cref="F:System.Windows.Forms.View.LargeIcon"/>. The default is null.</returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            	<IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.SmallImageList">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.ImageList"/> to use when displaying items as small icons in the control.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Windows.Forms.ImageList"/> that contains the icons to use when the <see cref="P:System.Windows.Forms.ListView.View"/> property is set to <see cref="F:System.Windows.Forms.View.SmallIcon"/>. The default is null.</returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            	<IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.StateImageList">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.ImageList"/> associated with application-defined states in the control.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Windows.Forms.ImageList"/> that contains a set of state images that can be used to indicate an application-defined state of an item. The default is null.</returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            	<IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.ListView_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDown event of the ListView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.ListView_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the ListView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.SerializableColumnHeader">
            <summary>
            Represents a Column Header that can be serialzied in code
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.SerializableColumnHeader.DisplayIndex">
            <summary>
            Gets or sets the display order of the column relative to the currently displayed columns.
            </summary>
            <value>
            The display order of the column, relative to the currently displayed columns.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.SerializableColumnHeader.ImageIndex">
            <summary>
            Gets or sets the index of the image displayed in the System.Windows.Forms.ColumnHeader.
            </summary>
            <value>
            The index of the image displayed in the System.Windows.Forms.ColumnHeader.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.SerializableColumnHeader.ImageKey">
            <summary>
            Gets or sets the key of the image displayed in the column.
            </summary>
            <value>
            The key of the image displayed in the column.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.SerializableColumnHeader.Text">
            <summary>
            Gets or sets the text displayed in the column header.
            </summary>
            <value>
            The text displayed in the column header.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.SerializableColumnHeader.TextAlign">
            <summary>
             Gets or sets the horizontal alignment of the text displayed in the System.Windows.Forms.ColumnHeader.
            </summary>
            <value>
            One of the System.Windows.Forms.HorizontalAlignment values. The default is System.Windows.Forms.HorizontalAlignment.Left.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.SerializableColumnHeader.Width">
            <summary>
             Gets or sets the width of the column.
            </summary>
            <value>
            The width of the column, in pixels.
            </value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.SerializableColumnHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListView.SerializableColumnHeader"/> class.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Timer">
            <summary>e
            A tool used in the UIBuilder as a timer.
            
            Timers are used to periodically call a C# script.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Timer.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Timer.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Timer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Timer"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Timer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton">
            <summary>
            A tool used in the UIBuilder that displays a toggle button.
            
            The Toggle tool is used to toggle a Boolean value or alternatively to display the state of a Boolean value.
            It can be linked to a Boolean ACE item to directly control its state or display its state.
            The pictures used for the different states of the toggle can be changed.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ConditionalLinkActive">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ConditionalLinkActiveInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link active inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link active inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ConditionalLinkActiveName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.PropertyLinkPressed">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ValueWhenUnpressed">
            <summary>
            Gets or sets the value when unpressed.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when false.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ValueWhenPressed">
            <summary>
            Gets or sets the value when pressed.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ImageDisplayMode">
            <summary>
            The display mode for the toggle button.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ImageDisplayMode.DigitalInput">
            <summary>
            Display the button using digital input icons
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ImageDisplayMode.DigitalOutput">
            <summary>
            Display the button using digital output icons
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ImageDisplayMode.Custom">
            <summary>
            Use custom images defined by the user
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.DisplayMode">
            <summary>
            The image display mode
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.Pressed">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton"/> is pressed.
            </summary>
            <value><c>true</c> if pressed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.Active">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton"/> is active.
            </summary>
            <value><c>true</c> if active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ImagePressedActive">
            <summary>
            Gets or sets the image when pressed in the active state.
            </summary>
            <value>The image pressed.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ImagePressedInactive">
            <summary>
            Gets or sets the image when pressed in the inactive state.
            </summary>
            <value>The image pressed.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ImageUnpressedActive">
            <summary>
            Gets or sets the image when unpressed in the active state.
            </summary>
            <value>The image unpressed.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ImageUnpressedInactive">
            <summary>
            Gets or sets the image when unpressed in the inactive state.
            </summary>
            <value>The image unpressed.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ToggleButton_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SizeChanged event of the ToggleButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.ToggleButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the ToggleButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.UpdateImage">
            <summary>
            Updates the image.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.GetDefaultButtonImage">
            <summary>
            Gets the default button image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.GetDefaultInputImage">
            <summary>
            Gets the default input image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.GetDefaultOutputImage">
            <summary>
            Gets the default output image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.GetUserImage">
            <summary>
            Gets the user image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ToggleButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox">
             <summary>
             A tool used in the UIBuilder that displays a list box.
            
             This tool is used to select a value in a list.
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.PropertyLinkText">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.FormatString">
            <summary>
            Gets or sets the format string.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.TextWrapper">
            <summary>
            Gets or sets a value wrapping the Text property of the ListBox.
            </summary>
            <value><c>true</c> if [text wrapper]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.ListBox_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDown event of the ListBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.ListBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the ListBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ListBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox">
            <summary>
            A tool used in the UIBuilder that displays a check box.
            
            The CheckBox is used to toggle a Boolean value or alternatively to display the state of a Boolean value.
            It can be linked to a Boolean ACE item to directly control its state or display its state.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.PropertyLinkChecked">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.ValueWhenUnchecked">
            <summary>
            Gets or sets the value when unchecked.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when false.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.ValueWhenChecked">
            <summary>
            Gets or sets the value when checked.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.CheckBox_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CheckedChanged event of the CheckBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button">
            <summary>e
            A tool used in the UIBuilder that displays a button.
            
            Buttons are used in an Operator Interface to execute actions.
            This tool is typically used to start the execution of a C# script.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.PropertyLinkPressed">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.ValueWhenPressed">
            <summary>
            Gets or sets the value when pressed.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.PulseTime">
            <summary>
            Gets or sets the pulse time.
            </summary>
            <value>The pulse time.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.Button_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the Button control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Button.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton">
            <summary>
            A tool used in the UIBuilder that displays a radio button.
            
            The RadioButton is used to toggle a Boolean value or alternatively to display the state of a Boolean value.
            It can be linked to a Boolean ACE item to directly control its state or display its state.
            Multiple RadioButtons can be grouped together to make them exclusive.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.PropertyLinkChecked">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.ValueWhenChecked">
            <summary>
            Gets or sets the value when checked.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.CheckBox"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.RadioButton_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CheckedChanged event of the RadioButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.RadioButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar">
            <summary>
            A tool used in the UIBuilder that displays a track bar.
            
            The TrackBar tool is typically used for numerical input from the operator.
            It can be linked to any exposed numeric ACE item to directly control its value.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.PropertyLinkValue">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.TrackBar_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the TrackBar control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TrackBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar">
            <summary>
            A tool used in the UIBuilder that displays a progress bar.
            
            The ProgressBar tool is used to graphically display a numerical value.
            As the name implies, a common usage is to display the percent done of a task while the task is running.
            The minimum (start of progress) and maximum (completion of progress) values are configurable.
            It can be linked to any exposed numeric ACE item to display its value in a graphical way.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.PropertyLinkValue">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Forms.ScrollBar"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.ProgressBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown">
            <summary>
            A tool used in the UIBuilder that displays a numeric up down.
            
            The NumericUpDown tool is a convenient tool for numerical input.
            This is a combination of a field into which the user may type the desired value
            and up/down arrows that modify the value by a specified increment.
            The acceptable range of values and increment/decrement, as well as the number of decimal places
            displayed are all configurable.
            It can be linked to any exposed numeric ACE item to directly control its value.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.PropertyLinkValue">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.NumericUpDown_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the NumericUpDown control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.NumericUpDown_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the NumericUpDown control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.NumericUpDown.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox">
            <summary>
            A tool used in the UIBuilder that displays a text box.
            
            The TextBox tool is used to display text to the operator or get text input from the operator.
            It can be linked to any exposed string ACE item to directly control its value.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.PropertyLinkText">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.FormatString">
            <summary>
            Gets or sets the format string.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.TextBox_Leave(System.Object,System.EventArgs)">
            <summary>
            Handles the Leave event of the TextBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.TextBox_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the TextBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.TextBox_Validated(System.Object,System.EventArgs)">
            <summary>
            Handles the Validated event of the TextBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TextBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer">
            <summary>
            A tool used in the UIBuilder that displays a split container.
            
            The SplitContainer separates a panel into two resizable regions into which one can place tools.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.SplitContainer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox">
            <summary>
            A tool used in the UIBuilder that displays a group box.
            
            The GroupBox tool is used to assist in visual grouping of tools in the user interface.
            It comes with a nice border and an area for the name of the group.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.PropertyLinkText">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.FormatString">
            <summary>
            Gets or sets the format string.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.GroupBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox">
            <summary>
            A tool used in the UIBuilder that displays a picture box.
            
            The PictureBox is another simple, but powerful tool.
            It is used to display graphics in the Operator Interface.
            Usability and understanding are greatly enhanced by the proper use of graphics.
            
            Note that this tool is able to display animated GIFs.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.PropertyLinkImage">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.PropertyLinkImageList">
            <summary>
            Gets or sets the property link image list.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.PictureBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl">
            <summary>
            A tool used in the UIBuilder that displays a tab control.
            
            The TabControl tool is used to help visually organize other tools in the operator interface.
            Tools can be displayed on the different tabs in the control.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.ImageListProperty">
            <summary>
            Gets or sets the image list property.
            </summary>
            <value>The image list property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.SizeModeProperty">
            <summary>
            Gets or sets the size mode property.
            This wrapper controls the Multiline property
            </summary>
            <value>The size mode property.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.TabControl_DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Handles the DrawItem event of the TabControl control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.DrawItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.TabControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar">
            <summary>
            A tool used in the UIBuilder that displays a status bar.
            
            The StatusBar tool is used at the bottom of a Form to display text to the user.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.PropertyLinkText">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.FormatString">
            <summary>
            Gets or sets the format string.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.StatusBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel">
            <summary>
            A tool used in the UIBuilder that displays a panel.
            
            The Panel tool is used to assist in visual grouping of tools in the user interface.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Panel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label">
            <summary>
            A tool used in the UIBuilder that displays a label.
            
            The Label tool is one of the simpler, but nonetheless powerful tools.
            It is used to display text.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.ParentProperty">
            <summary>
            Gets or sets the parent property.
            </summary>
            <value>The parent property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.ClientConnectionAccessLevel">
            <summary>
            Gets or sets the client connection associated with the access level of this control.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.ConditionalLinkVisibleInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link visible inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link visible inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.ConditionalLinkVisibleName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.PropertyLinkText">
            <summary>
            Gets or sets the property link.
            </summary>
            <value>The property link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.FormatString">
            <summary>
            Gets or sets the format string.
            Let the user have direct access to the property in the Property Grid
            without having to go through the PropertyLink object.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.SetParentControl(Ace.UIBuilder.Client.Controls.UIBuilderForm)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.Tools.WindowsForms.Label.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.IOLink">
            <summary>
            A class used to link the property of a tool with a controller signal.
            The values used will correspond to V+ states:
            -1 = TRUE
             0 = FALSE
             1 = UNDEFINED
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.IOLink.ParentForm">
            <summary>
            Gets or sets the parent form.
            </summary>
            <value>
            The parent form.
            </value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.IOLink.MaximumNumberOfIOPoints">
            <summary>
            The maximum number of IO points
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.IOLink.SignalDelimiter">
            <summary>
            The delimiter between I/O signals in the text lines.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.IOLink.Property">
            <summary>
            Gets the property.
            </summary>
            <value>The property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.IOLink.ClientConnectionController">
            <summary>
            Gets or sets the client connection associated with the controller.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.IOLink.LinkDirectionEnum">
             <summary>
             The link direction.
            
             We use the point of view of the data.
             </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.IOLink.LinkDirectionEnum.ReadOnly">
            <summary>
            Read only: tool can only read the data
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.IOLink.LinkDirectionEnum.WriteOnly">
            <summary>
            Write only: tool can only write the data
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.IOLink.LinkDirectionEnum.ReadWrite">
            <summary>
            Read and write: tool can read and write the data
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.IOLink.LinkDirection">
            <summary>
            Gets or sets the link direction.
            </summary>
            <value>The link direction.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.IOLink.signalsArray">
            <summary>
            An array containing the signal numbers
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.IOLink.Signals">
            <summary>
            Gets or sets the signal numbers.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLink.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.IOLink"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLink.#ctor(System.Windows.Forms.Control,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.IOLink"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLink.Initialize(System.Windows.Forms.Control,System.String)">
            <summary>
            Initializes this instance.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLink.clientConnection_AfterUpdateRemoting(System.Object,System.EventArgs)">
            <summary>
            Handles the AfterUpdateRemoting event of the clientConnection control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLink.clientConnectionData_RootCollectionChanged(System.Object,Ace.Core.Server.Event.ContentsChangeEventArgs)">
             <summary>
             Handles the RootCollectionChanged event of the clientConnectionData control.
            
             When the ACE object used in this link is renamed,
             refreshing the property grid will force to refresh the link properties
             and the new name of the ACE object will be displayed.
             </summary>
             <param name="sender">The source of the event.</param>
             <param name="e">The <see cref="T:Ace.Core.Server.Event.ContentsChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLink.StartPolling">
            <summary>
            Starts the polling.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLink.StopPolling">
            <summary>
            Stops the polling.		
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLink.parentForm_BackgroundUpdate(System.Object,System.EventArgs)">
            <summary>
            Handles the BackgroundUpdate event of the parentForm control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.IOLink.SetPropertyDelegate">
            <summary>
            Sets the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLink.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLink.UpdateControl">
            <summary>
            Updates the control.
            For efficiency reasons, we will only switch to the UI thread when we will really update the control.
            The polling of the data must be done in the background thread
            to ensure that the UI will remain responsive.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLink.UpdateData(System.Object)">
            <summary>
            Updates the data.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IOLink.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.PropertyLinkTypeEditor">
            <summary>
            Provides an edit control for selecting the "ExposableDataItem" object for a property link
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit AceObjects: provides a drop-down selection menu.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkTypeEditor.CheckNumericValueWhenFalse(System.String)">
            <summary>
            Checks the numeric value when false.
            If it is not a numeric value, force it to a default value.
            </summary>
            <param name="valueWhenFalse">The value when false.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkTypeEditor.CheckNumericValueWhenTrue(System.String)">
            <summary>
            Checks the numeric value when true.
            If it is not a numeric value, force it to a default value.
            </summary>
            <param name="valueWhenTrue">The value when true.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkTypeEditor.CheckStringValueWhenFalse(System.String)">
            <summary>
            Checks the string value when false.
            If it is not a string value, force it to a default value.
            </summary>
            <param name="valueWhenFalse">The value when false.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkTypeEditor.CheckStringValueWhenTrue(System.String)">
            <summary>
            Checks the string value when true.
            If it is not a string value, force it to a default value.
            </summary>
            <param name="valueWhenTrue">The value when true.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkTypeEditor.EditSetValues(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Type,System.String@,System.String@)">
            <summary>
            Edits the "set" values associated with a property ink
            </summary>
            <param name="editorService">The editor service.</param>
            <param name="valueType">Type of the value.</param>
            <param name="trueValue">The true value.</param>
            <param name="falseValue">The false value.</param>
            <returns>Was the item edited</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Specifies to use a modal editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.PropertyLinkImage">
            <summary>
            A class used to link the property of a tool with an exposable data item.
            It contains a collection of images.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLinkImage.ImageList">
            <summary>
            Gets or sets the image list.
            </summary>
            <value>The image list.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkImage.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.PropertyLinkImage"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkImage.#ctor(System.Windows.Forms.Control,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.PropertyLinkImage"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkImage.ApplyFormattingFromDataToControl(System.Object)">
            <summary>
            Applies the formatting from the data to the control.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkImage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.IComponentTypeConverter">
            <summary>
            Converts between an 'IComponent' value and the string description shown in property grids.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IComponentTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Returns an empty string if the value is null, or a string describing the data item if non-null.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IComponentTypeConverter.ConvertTo(System.ComponentModel.IComponent)">
            <summary>
            Converts to.
            </summary>
            <param name="component">The component.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.IComponentTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ImageListTypeEditor">
            <summary>
            Provides a property grid drop-down list for selecting
            "ImageList" objects in the Designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ImageListTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to select an ImageList: provides a drop-down selection menu.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ImageListTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Specifies to use a drop-down editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.IControlWithAccessLevel">
            <summary>
            An interface implemented in a control that has access level.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.IControlWithAccessLevel.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link enabled.
            </summary>
            <value>The conditional link enabled.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.IControlWithAccessLevel.ConditionalLinkVisible">
            <summary>
            Gets or sets the conditional link visible.
            </summary>
            <value>The conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.IControlWithAccessLevel.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.IControlWithAccessLevel.AccessVisibility">
            <summary>
            Gets or sets the access visibility.
            When the user's access level does not exceed the required level, the access visibility for this control will be applied.
            </summary>
            <value>The access visibility.</value>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.EditBitmaskControl">
            <summary>
            Control for editing a 32-bit bit mask value
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.EditBitmaskControl.DefaultBitMask">
            <summary>
            The default bit mask value.
            This is int.Parse("FFFFFFFF", System.Globalization.NumberStyles.HexNumber) = -1
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.EditBitmaskControl.singleBitSelectionBase">
            <summary>
            The current single bit selection base number
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.EditBitmaskControl.SingleBitSelectionBase">
            <summary>
            Gets or sets the current single bit selection base number.
            </summary>
            <value>The single bit selection base number.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.EditBitmaskControl.singleBitSelection">
            <summary>
            Can the user select only 1 bit value
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.EditBitmaskControl.SingleBitSelection">
            <summary>
            Gets or sets a value indicating whether single bit selection mode is enabled.
            </summary>
            <value><c>true</c> if single bit selection is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.EditBitmaskControl.NumberOfBits">
            <summary>
            Gets or sets the number of bits available for selection.
            </summary>
            <value>The number of bits.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.EditBitmaskControl.Instructions">
            <summary>
            Gets or sets the instructions.
            </summary>
            <value>The instructions.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.EditBitmaskControl.bitControls">
            <summary>
            The checkboxes used to display the bits in bit-order 
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.EditBitmaskControl.Mask">
            <summary>
            Gets or sets the mask.
            </summary>
            <value>The mask.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.EditBitmaskControl.SelectedBits">
            <summary>
            Gets or sets the selected bits.
            </summary>
            <value>The mask.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.EditBitmaskControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.EditBitmaskControl"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.EditBitmaskControl.checkBox_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CheckedChanged event of the checkBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.EditBitmaskControl.buttonAccept_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonAccept control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.EditBitmaskControl.buttonToogle_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonToogle control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.EditBitmaskControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.EditBitmaskControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.EditBitmaskControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.PropertyLinkDualState">
            <summary>
            A class used to link the property of a tool with an exposable data item.
            It has one active (true) state and one inactive (false) state.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLinkDualState.ValueWhenTrue">
            <summary>
            Gets or sets the value when true.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLinkDualState.ValueWhenFalse">
            <summary>
            Gets or sets the value when false.
            </summary>
            <value>The value when false.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkDualState.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.PropertyLinkDualState"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkDualState.#ctor(System.Windows.Forms.Control,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.PropertyLinkDualState"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkDualState.ApplyFormattingFromDataToControl(System.Object)">
            <summary>
            Applies the formatting from the data to the control.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkDualState.ApplyFormattingFromControlToData(System.Object)">
            <summary>
            Applies the formatting from the control to the data.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkDualState.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.PropertyLinkSingleState">
            <summary>
            A class used to link the property of a tool with an exposable data item.
            It only has one active (true) state.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLinkSingleState.ValueWhenTrue">
            <summary>
            Gets or sets the value when true.
            </summary>
            <value>The value when true.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkSingleState.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.PropertyLinkSingleState"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkSingleState.#ctor(System.Windows.Forms.Control,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.PropertyLinkSingleState"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkSingleState.ApplyFormattingFromDataToControl(System.Object)">
            <summary>
            Applies the formatting from the data to the control.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkSingleState.ApplyFormattingFromControlToData(System.Object)">
            <summary>
            Applies the formatting from the control to the data.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkSingleState.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.PropertyLink">
            <summary>
            A class used to link the property of a tool with an exposable data item.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLink.ParentForm">
            <summary>
            Gets or sets the parent form.
            </summary>
            <value>
            The parent form.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLink.Property">
            <summary>
            Gets the property.
            </summary>
            <value>The property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLink.ClientConnectionData">
            <summary>
            Gets or sets the client connection associated with the data.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLink.ExposableDataItemWrapper">
            <summary>
            Gets or sets the data item associated with the control.
            
            This property is only used by the property editor of the UI Builder designer, it is not serialized.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.PropertyLink.LinkDirectionEnum">
            <summary>
            The link direction.
            
            We use the point of view of the data.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.PropertyLink.LinkDirectionEnum.ReadOnly">
            <summary>
            Read only: tool can only read the data
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.PropertyLink.LinkDirectionEnum.WriteOnly">
            <summary>
            Write only: tool can only write the data
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.PropertyLink.LinkDirectionEnum.ReadWrite">
            <summary>
            Read and write: tool can read and write the data
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLink.LinkDirection">
            <summary>
            Gets or sets the link direction.
            </summary>
            <value>The link direction.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLink.FormatString">
            <summary>
            Gets or sets the format string.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.PropertyLink"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.#ctor(System.Windows.Forms.Control,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.PropertyLink"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.#ctor(System.Windows.Forms.Control,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.PropertyLink"/> class.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="property">The property.</param>
            <param name="propertyMinimum">The property minimum.</param>
            <param name="propertyMaximum">The property maximum.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.Initialize(System.Windows.Forms.Control,System.String,System.String,System.String)">
            <summary>
            Initializes this instance.
            </summary>
            <param name="hostControl">The host control.</param>
            <param name="property">The property.</param>
            <param name="propertyMinimum">The property minimum.</param>
            <param name="propertyMaximum">The property maximum.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.clientConnection_AfterUpdateRemoting(System.Object,System.EventArgs)">
            <summary>
            Handles the AfterUpdateRemoting event of the clientConnection control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.clientConnectionData_RootCollectionChanged(System.Object,Ace.Core.Server.Event.ContentsChangeEventArgs)">
            <summary>
            Handles the RootCollectionChanged event of the clientConnectionData control.
            
            When the ACE object used in this link is renamed,
            refreshing the property grid will force to refresh the link properties
            and the new name of the ACE object will be displayed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.ContentsChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.StartPolling">
            <summary>
            Starts the polling.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.StopPolling">
            <summary>
            Stops the polling.		
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.parentForm_BackgroundUpdate(System.Object,System.EventArgs)">
            <summary>
            Handles the BackgroundUpdate event of the parentForm control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.PropertyLink.SetPropertyDelegate">
            <summary>
            Sets the property.
            On the error reporting, we must handle the following cases:
            - a value goes outside the Min/Max range
            - the control reports an exception in the SetProperty call
            - a value comes back inside the Min/Max range (in this case the error message must disappear)
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.ApplyFormattingFromDataToControl(System.Object)">
            <summary>
            Applies the formatting from the data to the control.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.ApplyFormattingFromControlToData(System.Object)">
            <summary>
            Applies the formatting from the control to the data.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.UpdateControl">
            <summary>
            Updates the control.
            For efficiency reasons, we will only switch to the UI thread when we will really update the control.
            The polling of the data must be done in the background thread
            to ensure that the UI will remain responsive.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.UpdateData(System.Object)">
            <summary>
            Updates the data.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.UpdateData(System.Object,System.Int32)">
            <summary>
            Updates the data.
            When a pulse time is defined, the data will be reset with its previous value
            after the pulse time elapses.
            </summary>
            <param name="value">The value.</param>
            <param name="pulseTime">The pulse time.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.UpdateData(System.Object,System.Object,System.Int32)">
            <summary>
            Updates the data.
            When a pulse time is defined, the data will be updated with another value
            after the pulse time elapses.
            </summary>
            <param name="valueSet">The value set.</param>
            <param name="valueReset">The value reset.</param>
            <param name="pulseTime">The pulse time.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.UpdateDataInternal(System.Object)">
            <summary>
            Updates the data internal.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            
            As we are already using a SortedExpandableObjectConverter for this class, we will override the ToString() method
            to dispay a friendly string in the PropertyGrid.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLink.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl">
            <summary>
            Control used to get "set" values from the user
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.dataType">
            <summary>
            The type of data being edited
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.DataType">
            <summary>
            Gets or sets the type of data being edited
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.trueValue">
            <summary>
            The value of the data when "True"
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.TrueValue">
            <summary>
            Gets or sets the value of the data when "True"
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.falseValue">
            <summary>
            The value of the data when "False"
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.FalseValue">
            <summary>
            Gets or sets the value of the data when "False"
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.PropertyLinkValueSetControl_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the PropertyLinkValueSetControl control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.buttonAccept_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonAccept control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.buttonCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonCancel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.numericUpDownFalse_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the numericUpDownFalse control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.numericUpDownSet_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the numericUpDownSet control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.numericUpDownTrue_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the numericUpDownTrue control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.textBoxSet_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the TextChanged event of the textBoxSet control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.textBoxTrue_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the TextChanged event of the textBoxTrue control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.textBoxFalse_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the TextChanged event of the textBoxFalse control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.radioButtonTrue_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CheckedChanged event of the radioButtonTrue control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.radioButtonFalse_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CheckedChanged event of the radioButtonFalse control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.radioButtonFalseTrue_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CheckedChanged event of the radioButtonFalseTrue control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.radioButtonTrueFalse_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CheckedChanged event of the radioButtonTrueFalse control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.PropertyLinkValueSetControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ClientConnectionEditControl">
            <summary>
            Control for selecting an exposable data item of an ACE object
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ClientConnectionEditControl.ManualParameters">
            <summary>
            Gets or sets the flag indicating if the connection properties are set manually
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ClientConnectionEditControl.ServerName">
            <summary>
            Gets or sets the server name associated with this control
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ClientConnectionEditControl.ServerAddress">
            <summary>
            Gets or sets the server address associated with this control
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.ClientConnectionEditControl.ServerPort">
            <summary>
            Gets or sets the server port associated with this control
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionEditControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.ClientConnectionEditControl"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionEditControl.checkBoxManualParameters_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CheckedChanged event of the checkBoxManualParameters control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.ClientConnectionEditControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionEditControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionEditControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ClientConnectionTypeConverter">
            <summary>
            Converts between an 'ClientConnection' value and the string description shown in property grids.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Returns an empty string if the value is null, or a string describing the data item if non-null.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionTypeConverter.ConvertTo(Ace.UIBuilder.Client.Controls.ClientConnection)">
            <summary>
            Converts to.
            </summary>
            <param name="clientConnection">The client connection.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.ClientConnectionTypeEditor">
            <summary>
            Provides a property grid drop-down control for setting
            the client connection properties.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit AceObjects: provides a drop-down selection menu.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionTypeEditor.EditInAceForm(Ace.UIBuilder.Client.Controls.ClientConnection)">
            <summary>
            Edits the object in an ACE form.
            </summary>
            <param name="clientConnection">The client connection.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.ClientConnectionTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Specifies to use a drop-down editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.UIBuilderForm">
            <summary>
            The root component used in the UIBuilder.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.NameProperty">
            <summary>
            Gets or sets the name property.
            We can not directly expose the "Name" property of the component
            because it is set with the Browsable(false) attribute
            We use the Site object to rename the component.
            This property is not serialized as this is the name of the component variable in the C# code.
            </summary>
            <value>The name property.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.DebugMode">
            <summary>
            Gets or sets a value indicating whether the form is running in debug mode.
            </summary>
            <value>
              <c>true</c> if running in debug mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="E:Ace.UIBuilder.Client.Controls.UIBuilderForm.BackgroundUpdate">
            <summary>
            Background event called when a periodic update is required
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.ConditionalLinkEnabled">
            <summary>
            Gets or sets the conditional link.
            </summary>
            <value>The conditional link.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.ConditionalLinkEnabledInvertedLogic">
            <summary>
            Gets or sets a value indicating whether [conditional link enabled inverted logic].
            </summary>
            <value>
            	<c>true</c> if [conditional link enabled inverted logic]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.ConditionalLinkEnabledName">
            <summary>
            Gets or sets the name of the conditional link.
            This property is used to solve issue 5264.
            Note that we can not use [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)] to hide this property from the code
            </summary>
            <value>The name of the conditional link visible.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.ClientConnectionUIForm">
            <summary>
            Gets or sets the client connection associated with the server object.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.UIFormFullPath">
            <summary>
            Gets the UI form full path.
            </summary>
            <value>The UI form full path.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.ClientConnectionFormClosingEvent">
            <summary>
            Gets or sets the client connection associated with the FormClosing event.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.ClientConnectionLoadEvent">
            <summary>
            Gets or sets the client connection associated with the Load event.
            </summary>
            <value>The client connection.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.ErrorProvider">
            <summary>
            Gets the error provider.
            </summary>
            <value>The error provider.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.SignOutAtStartup">
            <summary>
            Gets or sets a value indicating whether [sign out at startup].
            </summary>
            <value><c>true</c> if [sign out at startup]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.Client">
            <summary>
            Gets the AceClient associated with the control.
            This property can be used in client scripting,
            for example to get the current access level.
            </summary>
            <value>The client.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.UIBuilderForm"/> class.
            Note: we are called twice when creating a new form.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.UIBuilderForm_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the UIBuilderForm control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.InitializeInDesigner(System.String,Ace.Core.Client.IAceClient,Ace.Core.Server.IAceServer)">
            <summary>
            Initializes the UI when run in the designer.
            </summary>
            <param name="uiFormFullPath">The UI form full path.</param>
            <param name="aceClient">The ace client.</param>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.InitializeInACEClient(Ace.Core.Client.IAceClient,Ace.Core.Server.IAceServer)">
            <summary>
            Initializes the UI when run in an ACE client.
            </summary>
            <param name="aceClient">The ace client.</param>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.SignIn(Ace.Core.Client.IAceClient)">
            <summary>
            Called to when a new user attempts to sign in. Generates an exception if
            the username is unknown or the password is invalid.
            Used by the Executioner class to sign in when the UI is displayed from a button.
            </summary>
            <param name="aceClient">The ace client.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.UpdateControl">
            <summary>
            Gets the ACE server and updates the ACE object using remoting.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.FindControl(System.Windows.Forms.Control,System.String)">
            <summary>
            Finds the control.
            This will perform a recursive search in all the controls tree of a given control
            and return the target control, if any.
            </summary>
            <param name="control">The control.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.clientConnectionUIForm_UpdateControl(System.Object,System.EventArgs)">
            <summary>
            Handles the UpdateControl event of the clientConnectionUIForm control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.InitializeFormHandles">
            <summary>
            Initializes the form handles.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.StartUpdateThread">
            <summary>
            Starts the update thread.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.StopUpdateThread">
            <summary>
            Stops the update thread.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.UpdateMain">
            <summary>
            The update thread.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.ControlPanelManager">
            <summary>
            Gets the control panel manager associated with the UI
            </summary>
            <value>The control panel manager.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.AddTab(System.String,Ace.Core.Server.IAceObject)">
            <summary>
            Add an editor for the specified object.
            </summary>
            <param name="title">The title of the editor. If in a tabbed display, it will be the
            title of the tab. If in a windowed display, it will be the title of the window.</param>
            <param name="o">The object to edit.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.RemoveTab(Ace.Core.Server.IAceObject)">
            <summary>
            Remove a tab from the display.
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.Highlight(Ace.Core.Server.IAceObject)">
            <summary>
            Highlights the specified object in the workspace.
            </summary>
            <param name="o">The object to highlight.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.Highlight(Ace.Core.Server.IAceObject,System.String)">
            <summary>
            Highlights the element of the specified object in the workspace.
            </summary>
            <param name="o">The object to highlight.</param>
            <param name="element">The name of the element.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.ResetTabs">
            <summary>
            Resets tabs to default state
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.GetAllEditedObjects">
            <summary>
            Gets all open objects being edited.
            </summary>
            <returns>The list of objects being edited</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.GetActiveEditorObject">
            <summary>
            Gets the object currently being edited.
            </summary>
            <returns>The currently active object</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.DisplayFind(System.String)">
            <summary>
            Shows the find window and updates the selected text
            </summary>
            <param name="selectedText">The selected text.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.DisplayFind(Ace.Core.Util.FindProviderInstance)">
            <summary>
            Display the specified find item in the editor
            </summary>
            <param name="findItem">The find item.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.FindAndReplace(Ace.Core.Util.FindProviderInstance)">
            <summary>
            Display the specified find item in the editor and perform a replacement
            </summary>
            <param name="findItem">The find item.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.AddContent(System.Windows.Forms.Control,System.String,System.Drawing.Image)">
            <summary>
            Adds content to the display.
            </summary>
            <param name="control">Control to display.</param>
            <param name="name">Name by which control will be referred.</param>
            <param name="image">Optional image. Specify null if no image is to be used.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.RemoveContent(System.Windows.Forms.Control)">
            <summary>
            Remove the specified content from the display.
            </summary>
            <param name="control">Control to remove.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.SetContentVisible(System.Boolean,System.Windows.Forms.Control)">
            <summary>
            Set the specified control to be visible or invisible with default docking on the right
            </summary>
            <param name="isVisible">if set to <c>true</c> the control is visible.</param>
            <param name="control">The control.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.SetContentVisible(System.Boolean,System.Windows.Forms.Control,Ace.Core.Client.DockingState)">
            <summary>
            Set the specified control to be visible or invisible.
            </summary>
            <param name="isVisible">if set to <c>true</c> the control is visible.</param>
            <param name="control">The control.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.RenameContent(System.Windows.Forms.Control,System.String)">
            <summary>
            Rename the tab associated with a given control content
            </summary>
            <param name="control">The control to rename</param>
            <param name="newName">The new name of the content/tab</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.ShowDefaultContent(Ace.Core.Server.Program.ITaskUIComponent,System.Boolean)">
            <summary>
            Shows the default content display
            </summary>
            <param name="component">The task component to display.</param>
            <param name="show3D">Should the 3D window be displayed</param>
            <returns>Was a default configuration opened rather than the default</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.IndicateLicenseEnabled(System.String,System.Drawing.Image)">
            <summary>
            Indicates that a license is enabled and available to the user.
            </summary>
            <param name="licenseName">Name of the license.</param>
            <param name="licenseImage">The license image.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.IndicateLicenseState(System.String,System.Boolean,System.Drawing.Image)">
            <summary>
            Indicates that a license is enabled and available to the user.
            </summary>
            <param name="licenseName">Name of the license.</param>
            <param name="enabled">if set to <c>true</c> the license is enabled.</param>
            <param name="licenseImage">The license image.</param>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderForm.PulldownMenuStrip">
            <summary>
            Returns the main menu
            </summary>
            <value></value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.AddToolStrip(System.String,Ace.Core.Client.ToolStripBase)">
            <summary>
            Add a control to the toolbar
            </summary>
            <param name="displayName">The display name of the tool strip.</param>
            <param name="toolStrip">The tool strip.</param>
            <remarks>
            When a tool strip is added, the display name is shown to the user for hiding or showing the
            tool strip. The ToolStrip:Name property is used to identify the tool strip for purposes of
            accessing the tool strip.
            </remarks>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.RemoveToolStrip(Ace.Core.Client.ToolStripBase)">
            <summary>
            Remove a tool strip from the toolbar
            </summary>
            <param name="toolStrip">The tool strip.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.GetToolStrip(System.String)">
            <summary>
            Get the tool strip with the specified name
            </summary>
            <param name="name">The name of the tool strip.</param>
            <returns>
            The tool strip, or null if none was found
            </returns>
            <remarks>The ToolStrip::Name property of all tool strips is searched. The one with the
            matching name is returned. This is not the name used for display.</remarks>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.ShowExceptionDialog(System.Exception)">
            <summary>
            Shows the exception dialog to the user.
            </summary>
            <param name="ex">The exception information.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.ShowExceptionDialog(System.String,System.Exception)">
            <summary>
            Shows the exception dialog to the user.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="ex">The exception information.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.RegisterSerializableControl(Ace.Core.Client.ISerializableLayoutControl)">
            <summary>
            Register a control that has configuration or layout information that needs
            to be saved with the workspace.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.UnregisterSerializableControl(Ace.Core.Client.ISerializableLayoutControl)">
            <summary>
            Unregister a control that has configuration or layout information that needs
            to be saved with the workspace.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.GetSettings(Ace.Core.Client.ISerializableLayoutControl)">
            <summary>
            Gets the settings for the specified serializable layout control.
            </summary>
            <param name="control">The control.</param>
            <returns>The settings for the control</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.AnnotateDisplay(System.String,System.String)">
            <summary>
            Define text to annotate the display of the current workspace
            </summary>
            <param name="source">The source.</param>
            <param name="text">The text.</param>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.UIBuilderForm.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderForm.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper">
            <summary>
            Tells that a control can be used in the Designer.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.TypeAttributeClass">
            <summary>
            A class used to store the attributes of a type
            This type can be:
            - a sealed type we want to expose in the ToolBox,
            but that we can not derive (example : ImageList)
            - an internal type that we do not want to expose in the ToolBox
            but for which we want to control its exposed properties (example : TabPage)
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.TypeAttributeClass.CustomTypeDescriptorType">
            <summary>
            Gets the type of the custom type descriptor.
            </summary>
            <value>The type of the custom type descriptor.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.TypeAttributeClass.ToolboxTabName">
            <summary>
            Gets the name of the toolbox tab.
            </summary>
            <value>The name of the toolbox tab.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.TypeAttributeClass.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.TypeAttributeClass"/> class.
            </summary>
            <param name="customTypeDescriptorType">Type of the custom type descriptor.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.TypeAttributeClass.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.TypeAttributeClass"/> class.
            </summary>
            <param name="customTypeDescriptorType">Type of the custom type descriptor.</param>
            <param name="toolboxTabName">Name of the toolbox tab.</param>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.sealedTypeAttributes">
            <summary>
            A dictionary of sealed types attributes.
            The sealed types can not be inherited to create custom tools.
            Anyway, we want to add them to the toolbox and thus use custom type descriptors for them.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.SealedTypeAttributes">
            <summary>
            Gets the sealed type attributes.
            </summary>
            <value>The sealed type attributes.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.internalTypeAttributes">
            <summary>
            A dictionary of internal types attributes.
            The internal types can not be created using the ToolBox, but can be created by other components in the Designer.
            We want to control their properties and thus use custom type descriptors for them.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.CreateCustomTypeDescriptor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Create a custom type descriptor for the specified object.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.GetTabName(System.Type)">
            <summary>
            Get the tab name for the specified object.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.GetDisplayName(System.Type)">
            <summary>
            Gets the display name.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.GetToolTipText(System.Type)">
            <summary>
            Gets the tool tip text.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.GetImage(System.Type)">
            <summary>
            Gets the image.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper.#cctor">
            <summary>
            Initializes the <see cref="T:Ace.UIBuilder.Client.Controls.UIBuilderAttributeHelper"/> class.
            This is the static constructor for this class, used to initialize the list of sealed and internal types.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.CustomTypeDescriptorUserControl">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.CustomTypeDescriptorUserControl.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.CustomTypeDescriptorUserControl"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.CustomTypeDescriptorAxGlgControl">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.CustomTypeDescriptorAxGlgControl.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.CustomTypeDescriptorAxGlgControl"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorRecipeSelector">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorRecipeSelector.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorRecipeSelector"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorTransformEditor">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorTransformEditor.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorTransformEditor"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorChangePasswordButton">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorChangePasswordButton.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorChangePasswordButton"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorGraph">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorGraph.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorGraph"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorTransformEditorNumericUpDown">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorTransformEditorNumericUpDown.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorTransformEditorNumericUpDown"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorTransformEditorNumericUpDown.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorEventLog">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorEventLog.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorEventLog"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorRobotJogControl">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorRobotJogControl.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorRobotJogControl"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorEventLogDisplayButton">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorEventLogDisplayButton.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorEventLogDisplayButton"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorCloseButton">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorCloseButton.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorCloseButton"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorIOButton">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorIOButton.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorIOButton"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorSignInButton">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorSignInButton.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorSignInButton"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorSignOutButton">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorSignOutButton.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorSignOutButton"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorRobotJogControlDisplayButton">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorRobotJogControlDisplayButton.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorRobotJogControlDisplayButton"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorUIFormDisplayButton">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorUIFormDisplayButton.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorUIFormDisplayButton"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorVisionDisplay">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorVisionDisplay.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorVisionDisplay"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorWorkspaceObjectEditor">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorWorkspaceObjectEditor.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdeptAce.CustomTypeDescriptorWorkspaceObjectEditor"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorIOButton">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorIOButton.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorIOButton"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorToggleButton">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorToggleButton.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorToggleButton"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorNumericIndicator">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorNumericIndicator.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorNumericIndicator"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorDigitalIndicator">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorDigitalIndicator.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorDigitalIndicator"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorSlider">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorSlider.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorSlider"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorButton">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorButton.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorButton"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorGauge">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorGauge.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.AdvancedTools.CustomTypeDescriptorGauge"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorDataGridView">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorDataGridView.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorDataGridView"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorListView">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorListView.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorListView"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTimer">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTimer.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTimer"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTabPage">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTabPage.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTabPage"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorImageList">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorImageList.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorImageList"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorToggleButton">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorToggleButton.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorToggleButton"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorComboBox">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorComboBox.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorComboBox"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorListBox">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorListBox.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorListBox"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorStatusBar">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorStatusBar.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorStatusBar"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorSplitContainer">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorSplitContainer.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorSplitContainer"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTabControl">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTabControl.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTabControl"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorRadioButton">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorRadioButton.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorRadioButton"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorPanel">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorPanel.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorPanel"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorLabel">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorLabel.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorLabel"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorProgressBar">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorProgressBar.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorProgressBar"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTrackBar">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTrackBar.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTrackBar"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorNumericUpDown">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorNumericUpDown.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorNumericUpDown"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorButton">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorButton.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorButton"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorCheckBox">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorCheckBox.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorCheckBox"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTextBox">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTextBox.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorTextBox"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorPictureBox">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorPictureBox.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.WindowsForms.CustomTypeDescriptorPictureBox"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.CustomTypeDescriptorConditionalLink">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.CustomTypeDescriptorConditionalLink.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.CustomTypeDescriptorConditionalLink"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Descriptors.CustomTypeDescriptorUIBuilderForm">
            <summary>
            This class implements ICustomTypeDescriptor and is used to filter
            the properties shown in the PropertyGrid in the designer.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Descriptors.CustomTypeDescriptorUIBuilderForm.#ctor(Ace.Core.Client.DefaultObjectEditor,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Descriptors.CustomTypeDescriptorUIBuilderForm"/> class.
            </summary>
            <param name="objectEditor">The object editor.</param>
            <param name="component">The component.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.EventAsPropertyTab">
            <summary>
            A custom PropertyTab that will display a list of properties.
            We will use this tab to display a set of properties
            that reflect the events of the tools.
            We will mimic Visual Studio presentation of events.
            It will allow us to use our property filtering and localization mechanism.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.EventAsPropertyTab.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.EventAsPropertyTab"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.EventAsPropertyTab.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.EventAsPropertyTab"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.EventAsPropertyTab.#ctor(System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.EventAsPropertyTab"/> class.
            </summary>
            <param name="designerHost">The designer host.</param>
        </member>
        <member name="P:Ace.UIBuilder.Client.EventAsPropertyTab.Bitmap">
            <summary>
            Gets the bitmap that is displayed for the <see cref="T:System.Windows.Forms.Design.PropertyTab"/>.
            </summary>
            <value></value>
            <returns>The <see cref="T:System.Drawing.Bitmap"/> to display for the <see cref="T:System.Windows.Forms.Design.PropertyTab"/>.</returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Ace.UIBuilder.Client.EventAsPropertyTab.TabName">
            <summary>
            Gets the name for the property tab.
            </summary>
            <value></value>
            <returns>The name for the property tab.</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.EventAsPropertyTab.GetProperties(System.Object)">
            <summary>
            Gets the properties of the specified component.
            </summary>
            <param name="component">The component to retrieve the properties of.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that contains the properties of the component.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.EventAsPropertyTab.GetProperties(System.Object,System.Attribute[])">
            <summary>
            Gets the properties of the specified component that match the specified attributes.
            </summary>
            <param name="component">The component to retrieve properties from.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that indicates the attributes of the properties to retrieve.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that contains the properties.
            </returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.UIExecutioner">
            <summary>
            Class responsible for loading and executing a script. This class is designed to run in a secondary application domain.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIExecutioner.CreateAceClient(System.String)">
            <summary>
            Creates the ACE client.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIExecutioner.CallMethod(System.String,System.Object[],System.Boolean)">
            <summary>
            Call a method associated with the script
            </summary>
            <param name="methodName">Name of the method.</param>
            <param name="parameters">The parameters.</param>
            <param name="methodMustBeDefined">if set to <c>true</c> the method must be defined.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIExecutioner.Run(System.String)">
            <summary>
            Runs the user interface. This is a blocking function that runs the form in the current thread,
            so there is no need to pass the culture to the UI.
            Also, there is no need to set the start position as we are not relative to a parent,
            so we will use the Location property if needed.
            </summary>
            <param name="typeName">Name of the type.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIExecutioner.Show(System.String,System.IntPtr,System.Drawing.Point,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Boolean,System.Boolean,System.Boolean,Ace.Core.Client.IAceClient)">
            <summary>
            Shows the modal or modeless user interface, relative to the parent form if any.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="parentFormHandle">The parent form handle.</param>
            <param name="parentLocation">The parent location.</param>
            <param name="parentWidth">Width of the parent.</param>
            <param name="parentHeight">Height of the parent.</param>
            <param name="culture">The culture.</param>
            <param name="modal">if set to <c>true</c> [modal].</param>
            <param name="debug">if set to <c>true</c> run the script in debug mode.</param>
            <param name="signOutAtStartup">if set to <c>true</c> [sign out at startup].</param>
            <param name="aceClientToSignIn">The ace client to sign in.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIExecutioner.SetAceClient(System.Boolean)">
            <summary>
            Sets the ACE client to the script
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIExecutioner.SetProperty(System.String,System.Object,System.Boolean)">
            <summary>
            Sets the property associated with the script
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
            <param name="propertyMustBeDefined">if set to <c>true</c> the property must be defined.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIExecutioner.SignIn(Ace.Core.Client.IAceClient)">
            <summary>
            Called to when a new user attempts to sign in. Generates an exception if
            the username is unknown or the password is invalid.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIExecutioner.Close">
            <summary>
            Closes the user interface.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.UIExecutioner.IWin32WindowWrapper">
            <summary>
            A wrapper that converts an IntPtr to an IWin32Window.
            It will be use to be able to call ShowDialog
            for two forms that are not in the same thread.
            An alternative would have been to use the
            EnableWindow(false) API call to disable the parent
            (be sure to re-enable it in before the dialog closes
            or Windows will go hunting for another app's window to give the focus to)
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIExecutioner.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="T:Ace.UIBuilder.Client.UIScriptExecution">
            <summary>
            Class that manages the compilation and execution of a CSharp script. The execution is
            done in a secondary application domain.
            </summary>
            <remarks>
            This class will typically not be used by an end-user application.
            </remarks>
        </member>
        <member name="F:Ace.UIBuilder.Client.UIScriptExecution.basePortServer">
            <summary>
            The base port number for communications with external processed
            Used in the context of the server. Since we can be debugging
            client and server scripts on the same machine and in two separate processes,
            we must have different ranges for the two cases.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.UIScriptExecution.basePortClient">
            <summary>
            The base port number for communications with external processed
            Used in the context of the client. Since we can be debugging
            client and server scripts on the same machine and in two separate processes,
            we must have different ranges for the two cases.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.UIScriptExecution.allocatedPorts">
            <summary>
            The port numbers currently allocated
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.AllocatePort(System.Boolean)">
            <summary>
            Perform a port allocation
            </summary>
            <param name="isClient">if set to <c>true</c> [is client].</param>
            <returns>The port number</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.DeallocatePort(System.Int32)">
            <summary>
            Deallocates the port.
            </summary>
            <param name="port">The port.</param>
        </member>
        <member name="P:Ace.UIBuilder.Client.UIScriptExecution.Mode">
            <summary>
            Gets the mode of script execution
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.UIScriptExecution.ResetRequired">
            <summary>
            Gets if a reset of the executioner is required
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.UIScriptExecution.ActiveBreakpoints">
            <summary>
            Gets the list of all active breakpoints
            </summary>
        </member>
        <member name="E:Ace.UIBuilder.Client.UIScriptExecution.CurrentLineChange">
            <summary>
            Event thrown when the current line number changes
            </summary>
        </member>
        <member name="E:Ace.UIBuilder.Client.UIScriptExecution.TraceMessageReceived">
            <summary>
            Event thrown when a trace message is detected in the executing script
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.UIScriptExecution"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.UIScriptExecution"/> class.
            </summary>
            <param name="filePath">The path for generating the assembly.</param>
            <param name="scriptTypeName">Name of the script type.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.#ctor(System.String,System.String,Ace.Core.Server.Scripting.CSharpScriptExecutionMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.CSharpScriptExecution"/> class.
            </summary>
            <param name="filePath">The path for generating the assembly.</param>
            <param name="scriptTypeName">Name of the script type.</param>
            <param name="executionMode">The mode of script execution.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.Compile(System.String)">
            <summary>
            Utility method to perform a compilation.
            </summary>
            <param name="text">The text for the script.</param>
            <returns>
            The collection of errors associated with the compilation
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.Compile(System.String,System.String,System.String)">
            <summary>
            Utility method to perform a compilation.
            </summary>
            <param name="text">The text for the script.</param>
            <param name="designerCode">The designer code.</param>
            <param name="embeddedResources">The embedded resources.</param>
            <returns>
            The collection of errors associated with the compilation
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.CompileInternal(System.String,System.String,System.String)">
            <summary>
            Internal method to perform a compilation.
            </summary>
            <param name="text">The text for the script.</param>
            <param name="designerCode">The designer code.</param>
            <param name="embeddedResources">The embedded resources.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.ModifyThreadAccess(System.String@,System.Int32@)">
            <summary>
            Modifies the script for thread access.
            </summary>
            <param name="text">The script text.</param>
            <param name="count">The number of lines added to the script.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.Clear">
            <summary>
            Clears any application domains from memory
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.Initialize(Ace.Core.Server.IAceServer,System.String,System.Boolean)">
            <summary>
            Initializes the domain helper.
            </summary>
            <param name="server">The server.</param>
            <param name="dllFile">The DLL file.</param>
            <param name="isClient">if set to <c>true</c> [is client].</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.CreateInstance">
            <summary>
            Creates an instance of the object.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.StepOver">
            <summary>
            Issue a debug step over operation
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.StepIn">
            <summary>
            Issue a debug step into operation
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.Go">
            <summary>
            Issue a debug go operation
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.SetLine(System.Int32)">
            <summary>
            Sets the current line in the script to the specified line.
            </summary>
            <param name="line">The line to set</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.UpdateCurrentLine">
            <summary>
            Update the current line number
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.AddBreakpoint(System.Int32)">
            <summary>
            Adds the breakpoint at the specified line
            </summary>
            <param name="lineIndex">Index of the line.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.RemoveBreakpoint(System.Int32)">
            <summary>
            Removes the breakpoint at the specified line
            </summary>
            <param name="lineIndex">Index of the line.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.ResolveVariable(System.String[])">
            <summary>
            Find a variable in the script
            </summary>
            <param name="variableStack">The list of the variable stack.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.CreateAceClient(System.String)">
            <summary>
            Creates the ACE client.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.SetField(System.String,System.Object)">
            <summary>
            Sets the field associated with the script
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.SetField(System.String,System.Object,System.Boolean)">
            <summary>
            Sets the field associated with the script
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <param name="fieldMustBeDefined">if set to <c>true</c> the field must be defined.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.Execute(System.String)">
            <summary>
            Executes the script.
            </summary>
            <param name="entryMethod">The entry method.</param>
            <returns>Results of the script execution</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.Execute(System.String,System.Object[])">
            <summary>
            Executes the script.
            </summary>
            <param name="entryMethod">The entry method.</param>
            <param name="arguments">The arguments to pass to the entry method.</param>
            <returns>Results of the script execution</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.Run(System.Object[])">
            <summary>
            Runs the user interface. This is a blocking function that runs the form in the current thread,
            so there is no need to pass the culture to the UI.
            Also, there is no need to set the start position as we are not relative to a parent,
            so we will use the Location property if needed.
            </summary>
            <param name="arguments">The arguments.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.Show(System.Object[])">
            <summary>
            Shows the modal or mode-less user interface, relative to the parent form if any.
            This is a blocking function.
            </summary>
            <param name="arguments">The arguments.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.Close">
            <summary>
            Closes the user interface.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.ExecutionerMain(System.Object)">
            <summary>
            Executioners the main. This is done so the execution is not done on the vision server thread.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.ExecutionerRun(System.Object)">
            <summary>
            Executioners the run.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.ExecutionerShow(System.Object)">
            <summary>
            Executioners the show.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.OnLineChange(Ace.Core.Server.Scripting.Debug.ISourcePosition)">
            <summary>
            Called when the current line changes.
            </summary>
            <param name="position">The new source code position.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.CheckScriptStack(System.Boolean@,System.Boolean@)">
            <summary>
            Checks the status of the script
            </summary>
            <param name="isAtEnd">if set to <c>true</c> we are at the end of the script.</param>
            <param name="isTopStackKnown">if set to <c>true</c> the program at the top of the stack is a known .</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.debugHelper_BreakpointDetected(System.Object,Ace.Core.Server.Scripting.Debug.BreakpointEventArgs)">
            <summary>
            Handles the BreakpointDetected event of the debugHelper control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Scripting.Debug.BreakpointEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.executionerEventMonitor_TraceMessageReceived(System.Object,Ace.Core.Util.LogEventArgs)">
            <summary>
            Handles the TraceMessageReceived event of the executionerEventMonitor control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Util.LogEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.UIScriptExecution.RemoteExecutionerMonitor">
            <summary>
            Event handler managing the remote events for a given executioner. 
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.UIScriptExecution.RemoteExecutionerMonitor.executioner">
            <summary>
            Handle to the executioner being monitored. 
            </summary>
        </member>
        <member name="E:Ace.UIBuilder.Client.UIScriptExecution.RemoteExecutionerMonitor.TraceMessageReceived">
            <summary>
            Event thrown when the executioner issues a trace message event
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.RemoteExecutionerMonitor.UnhookEvents">
            <summary>
            Unhooks the event handlers from the target
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.RemoteExecutionerMonitor.#ctor(Ace.UIBuilder.Client.UIExecutioner)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.UIScriptExecution.RemoteExecutionerMonitor"/> class.
            </summary>
            <param name="executionerObject">The executioner object.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.RemoteExecutionerMonitor.executioner_TraceMessageReceived(System.Object,Ace.Core.Util.LogEventArgs)">
            <summary>
            Handles the LogEvent event of the executioner control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Util.LogEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIScriptExecution.RemoteExecutionerMonitor.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="T:Ace.UIBuilder.Client.CSharpCustomScriptEditor">
            <summary>
            Editor for a CSharp script
            It will be used by the UIBuilder editor, mainly to update its status based on the status of the base class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.CSharpCustomScriptEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.CSharpCustomScriptEditor"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.CSharpCustomScriptEditor.AddProtectedLine(System.String)">
            <summary>
            Adds the protected line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.CSharpCustomScriptEditor.RemoveProtectedLine(System.String)">
            <summary>
            Removes the protected line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.UIFormFindProvider">
            <summary>
            Defines the default find provider for a C# script based object
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormFindProvider.Find(Ace.Core.Server.IAceObject,System.String,System.Boolean,System.Boolean)">
            <summary>
            Performs a search for the specified text in the specified object.
            </summary>
            <param name="findObject">The find object.</param>
            <param name="searchText">The search text.</param>
            <param name="matchCase">if set to <c>true</c> the search should match the case exactly.</param>
            <param name="systemContent">if set to <c>true</c> include system level content in the listing.</param>
            <returns>The results of the find operation</returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.Host.EventBindingService">
            <summary>
            Implementation of the EventBindingService that is used when the user double-clicks
            an event in the PropertyGrid.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.EventBindingService.#ctor(System.IServiceProvider,Ace.UIBuilder.Client.UIFormEditor)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Host.EventBindingService"/> class.
            </summary>
            <param name="myhost">The myhost.</param>
            <param name="uiFormEditor">The UI form editor.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.EventBindingService.DefaultEventLine(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
            <summary>
            Defaults the event line.
            </summary>
            <param name="component">The component.</param>
            <param name="eventDescriptor">The event descriptor.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.EventBindingService.FindEventHandlerInCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String@,System.String[]@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Finds the event handler in code.
            </summary>
            <param name="component">The component.</param>
            <param name="eventDescriptor">The event descriptor.</param>
            <param name="eventHandler">The event handler.</param>
            <param name="lines">The lines.</param>
            <param name="aceServerDeclarationLine">The ace server declaration line.</param>
            <param name="aceServerDeclarationOffset">The ace server declaration offset.</param>
            <param name="insertOffset">The insert offset.</param>
            <param name="eventHandlerLine">The event handler line.</param>
            <param name="eventHandlerOffset">The event handler offset.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.EventBindingService.SelectEventHandlerInCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
            <summary>
            Selects the event handler in code.
            </summary>
            <param name="component">The component.</param>
            <param name="eventDescriptor">The event descriptor.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.EventBindingService.RemoveEmptyEventHandlerInCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
            <summary>
            Removes the empty event handler in code.
            </summary>
            <param name="component">The component.</param>
            <param name="eventDescriptor">The event descriptor.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.EventBindingService.AddEventHandler(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
            <summary>
            Adds the event handler.
            It will be added to the Designer code and to the Custom code.
            </summary>
            <param name="component">The component.</param>
            <param name="eventDescriptor">The event descriptor.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.EventBindingService.RemoveEventHandler(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
            <summary>
            Removes the event handler.
            It will be removed from the Designer code and from the Custom code.
            </summary>
            <param name="component">The component.</param>
            <param name="eventDescriptor">The event descriptor.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.EventBindingService.IsEventHandlerUsed(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
            <summary>
            Determines whether [is event handler used] [the specified component].
            </summary>
            <param name="component">The component.</param>
            <param name="eventDescriptor">The event descriptor.</param>
            <returns>
            	<c>true</c> if [is event handler used] [the specified component]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
            <summary>
            Creates a unique method name.
            </summary>
            <param name="component">The component for which the method name will be created.</param>
            <param name="e">The event to create a name for.</param>
            <returns>The unique method name.</returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="component"/> or <paramref name="e"/> is null.</exception>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
            <summary>
            Returns a collection of names of compatible methods.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.EventDescriptor"/> containing the compatible delegate.</param>
            <returns>
            A collection of strings that are names of compatible methods.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="e"/> is null.</exception>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
            <summary>
            Displays the user code for the specified event.
            This method is called when a control is double clicked in the Designer.
            </summary>
            <param name="component">The component that the event is connected to.</param>
            <param name="e">The event to display.</param>
            <returns>
            true if the code is displayed; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
            <summary>
            Displays the user code for the specified method.
            </summary>
            <param name="component">The component to which the method is bound.</param>
            <param name="e">The <see cref="T:System.ComponentModel.EventDescriptor"/> for the event handler.</param>
            <param name="methodName">The name of the method for which to display code.</param>
            <returns>
            true if it is possible to display the code; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.EventBindingService.ShowCode(System.Int32)">
            <summary>
            Displays the user code at the given line number.
            </summary>
            <param name="lineNumber">The line number to show.</param>
            <returns>
            true if it is possible to display the code; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.EventBindingService.ShowCode">
            <summary>
            Displays user code.
            </summary>
            <returns>
            true if it is possible to display the code; otherwise, false.
            </returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.Host.MenuCommandService">
            <summary>
            A class that implements IMenuCommandService
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Host.MenuCommandService.DeleteInProgress">
            <summary>
            Gets a value indicating whether [delete in progress].
            </summary>
            <value><c>true</c> if [delete in progress]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.MenuCommandService.#ctor(System.ComponentModel.Design.ServiceContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Host.MenuCommandService"/> class.
            </summary>
            <param name="serviceContainer">The service container.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.MenuCommandService.CreateContextMenu">
            <summary>
            Creates the context menu.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
            <summary>
            Adds the specified standard menu command to the menu.
            </summary>
            <param name="command">The <see cref="T:System.ComponentModel.Design.MenuCommand"/> to add.</param>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.CommandID"/> of the specified <see cref="T:System.ComponentModel.Design.MenuCommand"/> is already present on a menu. </exception>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
            <summary>
            Adds the specified designer verb to the set of global designer verbs.
            </summary>
            <param name="verb">The <see cref="T:System.ComponentModel.Design.DesignerVerb"/> to add.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
            <summary>
            Searches for the specified command ID and returns the menu command associated with it.
            </summary>
            <param name="commandID">The <see cref="T:System.ComponentModel.Design.CommandID"/> to search for.</param>
            <returns>
            The <see cref="T:System.ComponentModel.Design.MenuCommand"/> associated with the command ID, or null if no command is found.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
            <summary>
            Invokes a menu or designer verb command matching the specified command ID.
            </summary>
            <param name="commandID">The <see cref="T:System.ComponentModel.Design.CommandID"/> of the command to search for and execute.</param>
            <returns>
            true if the command was found and invoked successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
            <summary>
            Removes the specified standard menu command from the menu.
            </summary>
            <param name="command">The <see cref="T:System.ComponentModel.Design.MenuCommand"/> to remove.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
            <summary>
            Removes the specified designer verb from the collection of global designer verbs.
            </summary>
            <param name="verb">The <see cref="T:System.ComponentModel.Design.DesignerVerb"/> to remove.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
            <summary>
            Shows the specified shortcut menu at the specified location.
            </summary>
            <param name="menuID">The <see cref="T:System.ComponentModel.Design.CommandID"/> for the shortcut menu to show.</param>
            <param name="x">The x-coordinate at which to display the menu, in screen coordinates.</param>
            <param name="y">The y-coordinate at which to display the menu, in screen coordinates.</param>
        </member>
        <member name="P:Ace.UIBuilder.Client.Host.MenuCommandService.Verbs">
            <summary>
            Gets or sets an array of the designer verbs that are currently available.
            </summary>
            <value></value>
            <returns>An array of type <see cref="T:System.ComponentModel.Design.DesignerVerb"/> that indicates the designer verbs that are currently available.</returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.Host.OptionService">
            <summary>
            This service is used to manage the options of the design surface.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.OptionService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Host.OptionService"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.OptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
            <summary>
            Populates an option collection with the settings for the DesignSurface.
            </summary>
            <param name="options">The collection to populate.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Host.HostControl">
            <summary>
            This control will host the HostSurface which inherits from DesignSurface.
            
            This is mainly a container for the host surface view, that allows to keep a link to the host surface itself.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Host.HostControl.selectionService">
            <summary>
            The selection service.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Host.HostControl.hostSurface">
            <summary>
            The host surface we are containing.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Host.HostControl.HostSurface">
            <summary>
            Gets the host surface.
            </summary>
            <value>The host surface.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            </summary>
            <param name="msg">A <see cref="T:System.Windows.Forms.Message"/>, passed by reference, that represents the window message to process.</param>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values that represents the key to process.</param>
            <returns>
            true if the character was processed by the control; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostControl.#ctor(Ace.UIBuilder.Client.UIFormEditor,Ace.UIBuilder.Client.Host.HostSurface)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Host.HostControl"/> class.
            </summary>
            <param name="uiFormEditor">The UI form editor.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostControl.selectionService_SelectionChanged(System.Object,System.EventArgs)">
            <summary>
            When the selection changes this sets the PropertyGrid's selected component 
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostControl.SetSelectedComponents(System.Collections.ICollection)">
            <summary>
            Sets the selected components.
            </summary>
            <param name="components">The components.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostControl.CreateDesignerView">
            <summary>
            Creates the designer view.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Host.HostControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Host.HostSurface">
            <summary>
            Inherits from DesignSurface and hosts the RootComponent and
            all other designers. It uses the CodeDomDesignerLoader loader
            when required. It also provides various services to the designers.
            Adds MenuCommandService which is used
            for Cut, Copy, Paste, etc.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Host.HostSurface.loader">
            <summary>
            The loader we used to load the design surface.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Host.HostSurface.Loader">
            <summary>
            Gets the loader.
            </summary>
            <value>The loader.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Host.HostSurface.UndoRedo">
            <summary>
            Gets the undo redo.
            </summary>
            <value>The undo redo.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Host.HostSurface.MenuCommandService">
            <summary>
            Gets the menu command service.
            </summary>
            <value>The menu command service.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Host.HostSurface.DesignerHost">
            <summary>
            Gets the designer host.
            </summary>
            <value>The designer host.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostSurface.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Host.HostSurface"/> class.
            </summary>
            <param name="parentProvider">The parent provider.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostSurface.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface"/>.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostSurface.LoadWithNew(Ace.UIBuilder.Server.UIForm)">
            <summary>
            Loads a HostSurface it with the appropriate type of
            root component.
            Uses CodeDomHostLoader to load the HostSurface.
            </summary>
            <param name="uiForm">The UI form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostSurface.LoadWithSourceCode(Ace.UIBuilder.Server.UIForm)">
            <summary>
            Loads a HostSurface with a C# text.
            Uses CodeDomHostLoader to load the HostSurface
            Uses the SharpDevelop NRefactory dll to parse the C# code
            </summary>
            <param name="uiForm">The UI form.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Host.HostSurfaceManager">
            <summary>
            Manages numerous HostSurfaces. Any services added to HostSurfaceManager
            will be accessible to all HostSurfaces
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostSurfaceManager.#ctor(Ace.UIBuilder.Client.UIFormEditor)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Host.HostSurfaceManager"/> class.
            </summary>
            <param name="uiFormEditor">The UI form editor.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
            <summary>
            Implementation that creates the design surface.
            </summary>
            <param name="parentProvider">A service provider to pass to the design surface. This is either an instance of <see cref="T:System.ComponentModel.Design.DesignSurfaceManager"></see> or an object that implements <see cref="T:System.IServiceProvider"></see>, and represents a merge between the service provider of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager"></see> class and an externally passed provider.</param>
            <returns>A new design surface instance.</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostSurfaceManager.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.HostSurfaceManager.CreateHostSurface">
            <summary>
            Creates the host surface.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.Host.NameCreationService">
            <summary>
            This is responsible for naming the components as they are created.
            This is added as a service by the HostSurfaceManager
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.NameCreationService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Host.NameCreationService"/> class.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Host.UndoRedo">
            <summary>
            The undo/redo class implementation.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.UndoRedo.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Host.UndoRedo"/> class.
            
            http://www.codeproject.com/KB/cs/DesignSurfaceExtended.aspx
            http://www.codeproject.com/KB/miscctrl/DesignSurfaceManager_Ext.aspx
            </summary>
            <param name="provider">A parenting service provider.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="provider"/> is null.</exception>
            <exception cref="T:System.NotSupportedException">A required service cannot be found. See <see cref="T:System.ComponentModel.Design.UndoEngine"/> for required services. If you have removed this service, ensure that you provide a replacement.</exception>
        </member>
        <member name="P:Ace.UIBuilder.Client.Host.UndoRedo.EnableUndo">
            <summary>
            Gets a value indicating whether [enable undo].
            </summary>
            <value><c>true</c> if [enable undo]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Host.UndoRedo.EnableRedo">
            <summary>
            Gets a value indicating whether [enable redo].
            </summary>
            <value><c>true</c> if [enable redo]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.UndoRedo.Undo">
            <summary>
            Perform a undo action.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.UndoRedo.Redo">
            <summary>
            Perform a redo action.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.UndoRedo.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
            <summary>
            Adds an <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit"/> to the undo stack.
            </summary>
            <param name="unit">The undo unit to add</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Host.ResourceStorage">
            <summary>
            This class implements the read / write functionalities of the resource file.
            
            The resource is stored here at run-time.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Host.ResourceStorage.ResourceType">
            <summary>
            The resource type.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Host.ResourceStorage.ResourceType.Resx">
            <summary>
            Resx (text) resource file.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Host.ResourceStorage.ResourceType.Resources">
            <summary>
            Resources (binary) resource file.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Host.ResourceStorage.ContainsData">
            <summary>
            true, if the currently stored resource is not empty.
            Note that this property is only valid after at least one
            of GetReader, GetWriter or Save has been called.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceStorage.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceStorage.GetBuffer">
            <summary>
            Writes the byte array containing the most recent version of the resource
            represented by this instance into the private field "buffer" and returns it.
            Returns null, if this resource has not been written to yet.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceStorage.ReadBuffer">
            <summary>
            Reads the buffer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceStorage.WriteBuffer(System.String)">
            <summary>
            Reads the buffer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceStorage.GetReader(System.String)">
            <summary>
            Returns a new resource reader for this resource based on the most recent
            version available (either in memory or on disk).
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceStorage.GetWriter">
            <summary>
            Returns a new resource writer for this resource.
            According to the SDK documentation of IResourceService.GetResourceWriter,
            a new writer needs to be returned every time one is requested, discarding any
            data written by previously returned writers.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceStorage.Load(System.String)">
            <summary>
            Loads the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceStorage.Save(System.String)">
            <summary>
            Saves the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceStorage.GenerateResourcesFile(System.String)">
            <summary>
            Generates the .resources file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceStorage.GenerateResXFile(System.String)">
            <summary>
            Generates the .resx file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceStorage.GetResourceType(System.String)">
            <summary>
            Gets the type of the resource.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceStorage.CreateResourceReader(System.String,Ace.UIBuilder.Client.Host.ResourceStorage.ResourceType)">
            <summary>
            Creates the resource reader.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceStorage.CreateResourceReader(System.IO.Stream,Ace.UIBuilder.Client.Host.ResourceStorage.ResourceType)">
            <summary>
            Creates the resource reader.
            </summary>
            <param name="stream">The stream.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceStorage.CreateResourceWriter(System.IO.Stream,Ace.UIBuilder.Client.Host.ResourceStorage.ResourceType)">
            <summary>
            Creates the resource writer.
            </summary>
            <param name="stream">The stream.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.Host.ResourceService">
            <summary>
            This service is used to manage the resources needed by the designed components.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Host.ResourceService.resourceStorage">
            <summary>
            Where the resource is stored.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Host.ResourceService"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceService.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceService.Read">
            <summary>
            Reads this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceService.Write(System.String)">
            <summary>
            Writes the specified resources.
            </summary>
            <param name="resources">The resources.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceService.GenerateResourcesFile(System.String)">
            <summary>
            Generates the .resources file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceService.GenerateResXFile(System.String)">
            <summary>
            Generates the .resx file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceService.GetResourceWriter(System.Globalization.CultureInfo)">
            <summary>
            Locates the resource writer for the specified culture and returns it.
            
            Called by the DesignSurface.Flush() function
            </summary>
            <param name="info">The <see cref="T:System.Globalization.CultureInfo"></see> of the resource for which to create a resource writer.</param>
            <returns>
            An <see cref="T:System.Resources.IResourceWriter"></see> interface for the specified culture.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Host.ResourceService.GetResourceReader(System.Globalization.CultureInfo)">
            <summary>
            Locates the resource reader for the specified culture and returns it.
            
            Called by the DesignSurface.BeginLoad() function
            </summary>
            <param name="info">The <see cref="T:System.Globalization.CultureInfo"></see> of the resource for which to retrieve a resource reader.</param>
            <returns>
            An <see cref="T:System.Resources.IResourceReader"></see> interface that contains the resources for the culture, or null if no resources for the culture exist.
            </returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.FormDeploy">
            <summary>
            Form for defining the parameters to deploy a user interface
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.FormDeploy.#ctor(Ace.Core.Client.IAceClient,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.FormDeploy"/> class.
            </summary>
            <param name="client">The client.</param>
            <param name="selectedFormName">Name of the selected form.</param>
            <param name="selectedFormFullPath">The selected form full path.</param>
            <param name="iconLocation">The icon location.</param>
            <param name="serverName">Name of the server.</param>
            <param name="serverAddress">The server address.</param>
            <param name="serverPort">The server port.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.FormDeploy.buttonSave_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonSave control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.FormDeploy.buttonCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonCancel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.FormDeploy.textBoxIconLocation_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the TextChanged event of the textBoxIconLocation control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.FormDeploy.buttonIconLocation_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonIconLocation control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ace.UIBuilder.Client.FormDeploy.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.FormDeploy.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.FormDeploy.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Loader.CodeDomHostLoader">
            <summary>
            Inherits from CodeDomDesignerLoader. It can generate C# code
            for a HostSurface. This loader does not support parsing a
            C# file.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.UIForm">
            <summary>
            Gets the UI form.
            </summary>
            <value>The UI form.</value>
        </member>
        <member name="T:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.LoadModeEnum">
            <summary>
            The load mode of the compile unit.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.LoadModeEnum.LoadModeFromFile">
            <summary>
            Loading the compile unit from a file.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.LoadModeEnum.LoadModeFromSourceCode">
            <summary>
            Loading the compile unit from source code.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.LoadModeEnum.LoadModeNew">
            <summary>
            Create a new compile unit.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.LoadModeEnum.LoadModeReload">
            <summary>
            Reload the current compile unit because it has changed
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.loadMode">
            <summary>
            The load mode.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.MainName">
            <summary>
            The UIBuilder user main function name.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.InitializeComponentName">
            <summary>
            The UIBuilder user InitializeComponent function name.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.ConstructorTag">
            <summary>
            The constructor tag written into the code
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.STAThreadAttribute">
            <summary>
            The UIBuilder user thread attribute.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.fileName">
            <summary>
            The file name.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.resources">
            <summary>
            The resources.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.#ctor(Ace.UIBuilder.Server.UIForm,Ace.UIBuilder.Client.Loader.CodeDomHostLoader.LoadModeEnum,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Loader.CodeDomHostLoader"/> class.
            </summary>
            <param name="uiForm">The UI form.</param>
            <param name="loadModeValue">The load mode value.</param>
            <param name="fileNameValue">The file name value.</param>
        </member>
        <member name="P:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.TypeResolutionService">
            <summary>
            Gets the type resolution service to be used with this designer loader.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.ComponentModel.Design.ITypeResolutionService"></see> that the CodeDOM serializers will use when resolving types.</returns>
        </member>
        <member name="P:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.CodeDomProvider">
            <summary>
            Gets the <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider"></see> this designer loader will use.
            </summary>
            <value></value>
            <returns>The <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider"></see> this designer loader will use</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.Parse">
            <summary>
            Bootstrap method - loads the form to the HostSurface
            This function is called during the BeginLoad call of the design surface
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.GetDefaultCodeCompileUnit(System.ComponentModel.Design.IDesignerHost)">
            <summary>
            This function generates the default CodeCompileUnit template
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.GetUIClass">
            <summary>
            Gets the UI class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.GetMethod(System.CodeDom.CodeTypeDeclaration,System.String)">
            <summary>
            Gets a method.
            </summary>
            <param name="uiClass">The UI class.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.CheckCompileUnit">
            <summary>
            Checks the compile unit.
            Mainly search for the STA thread attribute and add it if necessary.
            The STAThreadAttribute attribute can be lost when loading the code so restore it
            because this attribute is needed at run-time
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.ForceReload">
            <summary>
            Forces the reload.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.ReplaceInDesignerApplicationRun(System.String,System.String)">
            <summary>
            Replaces the Application.Run statement in the compile unit, so that the Designer code
            will be updated.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.ReplaceInDesignerEventHandler(System.String,System.String)">
            <summary>
            Replaces the Event Handler statement in the compile unit, so that the Designer code
            will be updated.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.AddEventHandler(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
            <summary>
            Adds the event handler.
            </summary>
            <param name="component">The component.</param>
            <param name="eventDescriptor">The event descriptor.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.RemoveEventHandler(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
            <summary>
            Removes the event handler.
            </summary>
            <param name="component">The component.</param>
            <param name="eventDescriptor">The event descriptor.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.IsEventHandlerUsed(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
            <summary>
            Determines whether [is event handler used] [the specified component].
            </summary>
            <param name="component">The component.</param>
            <param name="eventDescriptor">The event descriptor.</param>
            <returns>
            	<c>true</c> if [is event handler used] [the specified component]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.IsEventHandlerUsed(System.CodeDom.CodeMemberMethod,System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.CodeDom.CodeAttachEventStatement@)">
            <summary>
            Determines whether [is event handler used] [the specified initialize component].
            </summary>
            <param name="initializeComponent">The initialize component.</param>
            <param name="component">The component.</param>
            <param name="eventDescriptor">The event descriptor.</param>
            <param name="eventStatementReturned">The event statement returned.</param>
            <returns>
            	<c>true</c> if [is event handler used] [the specified initialize component]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.GenerateDesignerCode(System.String)">
            <summary>
            Generates the designer code.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.GenerateCustomCode(System.String)">
            <summary>
            Generates the custom code.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.Write(System.CodeDom.CodeCompileUnit)">
            <summary>
            When the Loader is Flushed this method is called. The base class
            (CodeDomDesignerLoader) creates the CodeCompileUnit. We
            simply cache it and use this when we need to generate code from it.
            To generate the code we use CodeProvider.
            
            Note that the SharpDevelop program uses a different strategy:
            rather than getting the code compile unit it merges the changes
            made by the designer.
            See MergeFormChanges() in the AbstractDesignGenerator.cs file of SharpDevelop
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
            <summary>
            Notifies the designer loader that loading is complete.
            </summary>
            <param name="successful">true to indicate that the load completed successfully; otherwise, false.</param>
            <param name="errors">An <see cref="T:System.Collections.ICollection"></see> of objects (usually exceptions) that were reported as errors.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.GetCodeCompileUnit">
            <summary>
            Flushes the host and returns the updated CodeCompileUnit
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.GetDesignerCode">
            <summary>
            This method writes out the contents of our designer in C#.
            It generates code from our codeCompileUnit using CodeProvider
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeDomHostLoader.GetCustomCode">
            <summary>
            Gets the custom code.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.Loader.CodeGenNRefactory">
            <summary>
            Wrapper for the NRefactory DLL. It can generate C# code from a code compile unit.
            
            Actual version is 2.2.1.2648
            This DLL is part of the SharpDevelop project:
            http://www.icsharpcode.net/OpenSource/SD/Default.aspx
            
            It is under the LGPL license:
            http://laputa.sharpdevelop.net/SharpDevelop2LicenseChangedToLGPL.aspx
            
            LGPL license:
            http://www.gnu.org/licenses/lgpl.html
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Loader.CodeGenNRefactory.parser">
            <summary>
            The parser object we will use.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Loader.CodeGenNRefactory.Parser">
            <summary>
            Gets or sets the parser.
            </summary>
            <value>The parser.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Loader.CodeGenNRefactory.provider">
            <summary>
            The CodeDom provider object we will use.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Loader.CodeGenNRefactory.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Loader.CodeGenNRefactory.options">
            <summary>
            The code generation options we will use.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Loader.CodeGenNRefactory.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeGenNRefactory.#ctor(System.CodeDom.Compiler.ICodeParser,System.CodeDom.Compiler.CodeDomProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Loader.CodeGenNRefactory"/> class.
            </summary>
            <param name="parser">The parser.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeGenNRefactory.#ctor(System.CodeDom.Compiler.ICodeParser,System.CodeDom.Compiler.CodeDomProvider,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Loader.CodeGenNRefactory"/> class.
            </summary>
            <param name="parser">The parser.</param>
            <param name="provider">The provider.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeGenNRefactory.GetDefaultOptions">
            <summary>
            Gets the default options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.CodeGenNRefactory.GenerateCode(System.IO.TextReader,System.IO.TextWriter)">
            <summary>
            Generates the code.
            </summary>
            <param name="reader">The reader.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Loader.Parser">
            <summary>
            Wrapper for the NRefactory DLL.It can generate a code compile unit from C# code.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.Parser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Loader.Parser"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.Parser.Parse(System.IO.TextReader)">
            <summary>
            When implemented in a derived class, compiles the specified text stream into a <see cref="T:System.CodeDom.CodeCompileUnit"></see>.
            </summary>
            <param name="codeStream">A <see cref="T:System.IO.TextReader"></see> that can be used to read the code to be compiled.</param>
            <returns>
            A <see cref="T:System.CodeDom.CodeCompileUnit"></see> that contains a representation of the parsed code.
            </returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.Loader.EnvironmentInformationProvider">
            <summary>
            Implementation of the IEnvironmentInformationProvider interface.
            
            IEnvironmentInformationProvider is used by a Visitor to determine whether a Type contains
            a field with the specific name. This is necessary because the parser can't tell, from reading the code,
            whether a member is a field or a property. An Enum's values, for instance, cannot be differentiated
            from a class type's properties.
            
            Failure to make this determination can result in failure to load the member.
            
            See http://social.msdn.microsoft.com/Forums/en-US/winformsdesigner/thread/8276a7f1-1ad1-4bd5-a931-ed5ca1486752
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.EnvironmentInformationProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Loader.EnvironmentInformationProvider"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.EnvironmentInformationProvider.HasField(System.String,System.String)">
            <summary>
            Determines whether the specified full type name has field.
            </summary>
            <param name="fullTypeName">Full name of the type.</param>
            <param name="fieldName">Name of the field.</param>
            <returns>
            <c>true</c> if the specified full type name has field; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Ace.UIBuilder.Client.Loader.TypeResolutionService">
            <summary>
            This service resolved the types and is required when using the
            CodeDomHostLoader
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.TypeResolutionService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Loader.TypeResolutionService"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.TypeResolutionService.GetAssembly(System.Reflection.AssemblyName)">
            <summary>
            Gets the requested assembly.
            </summary>
            <param name="name">The name of the assembly to retrieve.</param>
            <returns>
            An instance of the requested assembly, or null if no assembly can be located.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.TypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
            <summary>
            Gets the assembly.
            </summary>
            <param name="name">The name.</param>
            <param name="throwOnErrors">if set to <c>true</c> [throw on errors].</param>
            <returns></returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.TypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)">
            <summary>
            Gets the path to the file from which the assembly was loaded.
            </summary>
            <param name="name">The name of the assembly.</param>
            <returns>
            The path to the file from which the assembly was loaded.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.TypeResolutionService.GetType(System.String)">
            <summary>
            Loads a type with the specified name.
            </summary>
            <param name="name">The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</param>
            <returns>
            An instance of <see cref="T:System.Type"></see> that corresponds to the specified name, or null if no type can be found.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.TypeResolutionService.GetType(System.String,System.Boolean)">
            <summary>
            Loads a type with the specified name.
            </summary>
            <param name="name">The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</param>
            <param name="throwOnError">true if this method should throw an exception if the assembly cannot be located; otherwise, false, and this method returns null if the assembly cannot be located.</param>
            <returns>
            An instance of <see cref="T:System.Type"></see> that corresponds to the specified name, or null if no type can be found.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.TypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
            <summary>
            Loads a type with the specified name.
            
            This method is called when dropping controls from the toolbox
            to the host that is loaded using CodeDomHostLoader.
            </summary>
            <param name="name">The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</param>
            <param name="throwOnError">true if this method should throw an exception if the assembly cannot be located; otherwise, false, and this method returns null if the assembly cannot be located.</param>
            <param name="ignoreCase">true to ignore case when searching for types; otherwise, false.</param>
            <returns>
            An instance of <see cref="T:System.Type"></see> that corresponds to the specified name, or null if no type can be found.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Loader.TypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)">
            <summary>
            Adds a reference to the specified assembly.
            </summary>
            <param name="name">An <see cref="T:System.Reflection.AssemblyName"></see> that indicates the assembly to reference.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.Toolbox.TreeNode">
            <summary>
            A tree node for the toolbox.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Toolbox.TreeNode.Type">
            <summary>
            Gets or sets the type.
            This is needed to perform drag and drop of tools from the ToolBox to the Designer.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Toolbox.TreeNode.ToolTipCaption">
            <summary>
            Gets or sets the tool tip caption.
            </summary>
            <value>The tool tip caption.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Toolbox.TreeNode.OnEdit">
            <summary>
            Gets or sets a value indicating whether [on edit].
            </summary>
            <value><c>true</c> if [on edit]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Toolbox.TreeNode.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Ace.UIBuilder.Client.Toolbox.TreeNode"/> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.Toolbox.TreeNode.ToolboxItem">
            <summary>
            Gets or sets the toolbox item.
            </summary>
            <value>The toolbox item.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.TreeNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Toolbox.TreeNode"/> class.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Toolbox.Toolbox">
            <summary>
            This class describes the behavior of a toolbox.
            
            See http://www.codeproject.com/KB/tree/VS2005ToolBox.aspx
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Toolbox.Toolbox.TVS_NOTOOLTIPS">
            <summary>
            This is needed to disable the default tooltips
            of a treenode item.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Toolbox.Toolbox.DesignerHost">
            <summary>
            Gets or sets the designer host.
            </summary>
            <value>The designer host.</value>
        </member>
        <member name="F:Ace.UIBuilder.Client.Toolbox.Toolbox.groupHeaderFont">
            <summary>
            Font to be used for the group headers in the toolbox.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Toolbox.Toolbox.toolTip">
            <summary>
            Custom tooltip for the treenodes.
            </summary>
        </member>
        <member name="F:Ace.UIBuilder.Client.Toolbox.Toolbox.previousNode">
            <summary>
            Stores the last mouse position for the custom tooltip.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.Toolbox.Toolbox.CreateParams">
            <summary>
            Gets the create params property.
            
            Disables the tooltip activity for the treenodes.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.DrawRootItem(System.Windows.Forms.DrawTreeNodeEventArgs)">
            <summary>
            Draws a group header
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.DrawItem(System.Windows.Forms.DrawTreeNodeEventArgs)">
            <summary>
            Draws a sub item of a group
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)">
            <summary>
            Decides wich node type should be drawn and calls the corresponding.
            methods.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the mouse down event
            
            Selects the node under the mouse cursor.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.TreeView.ItemDrag"/> event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.ItemDragEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the mouse move event
            
            Checks if the node under the cursor contains a tooltip
            and display it.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Handles the OnBeforeSelect event
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Ace.UIBuilder.Client.Toolbox.Toolbox.Client">
            <summary>
            Gets the AceClient associated with the control
            </summary>
            <value>The client.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.Toolbox.Toolbox"/> class.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.Toolbox.Toolbox.NodeComparatorClass">
            <summary>
            The comparator class used to sort the nodes in the toolbox.
            It will sort the node based on their Text property,
            ensuring that the Pointer node ("null" tool) will remain at the first position.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.NodeComparatorClass.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.FindUIBuilderTools">
            <summary>
            Finds the available UIBuilder tools.
            
            We will search in all ACEObjects of the domain assembly
            and select the objects with the UIBuilderAttribute.
            </summary>
            <returns>List of UIBuilder components types</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.InitializeToolbox">
            <summary>
            Initializes the toolbox.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Adds a new toolbox item creator for a specified data format and designer host.
            </summary>
            <param name="creator">A <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback"/> that can create a component when the toolbox item is invoked.</param>
            <param name="format">The data format that the creator handles.</param>
            <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost"/> that represents the designer host to associate with the creator.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
            <summary>
            Adds a new toolbox item creator for a specified data format.
            </summary>
            <param name="creator">A <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback"/> that can create a component when the toolbox item is invoked.</param>
            <param name="format">The data format that the creator handles.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Adds the specified project-linked toolbox item to the toolbox in the specified category.
            </summary>
            <param name="toolboxItem">The linked <see cref="T:System.Drawing.Design.ToolboxItem"/> to add to the toolbox.</param>
            <param name="category">The toolbox item category to add the toolbox item to.</param>
            <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost"/> for the current design document.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Adds the specified project-linked toolbox item to the toolbox.
            </summary>
            <param name="toolboxItem">The linked <see cref="T:System.Drawing.Design.ToolboxItem"/> to add to the toolbox.</param>
            <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost"/> for the current design document.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
            <summary>
            Adds the specified toolbox item to the toolbox in the specified category.
            </summary>
            <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem"/> to add to the toolbox.</param>
            <param name="category">The toolbox item category to add the <see cref="T:System.Drawing.Design.ToolboxItem"/> to.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
            <summary>
            Adds the specified toolbox item to the toolbox.
            </summary>
            <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem"/> to add to the toolbox.</param>
        </member>
        <member name="P:Ace.UIBuilder.Client.Toolbox.Toolbox.CategoryNames">
            <summary>
            Gets the names of all the tool categories currently on the toolbox.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Drawing.Design.CategoryNameCollection"/> containing the tool categories.</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Gets a toolbox item from the specified object that represents a toolbox item in serialized form, using the specified designer host.
            </summary>
            <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem"/> to retrieve.</param>
            <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost"/> to associate with this <see cref="T:System.Drawing.Design.ToolboxItem"/>.</param>
            <returns>
            The <see cref="T:System.Drawing.Design.ToolboxItem"/> created from deserialization.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.DeserializeToolboxItem(System.Object)">
            <summary>
            Gets a toolbox item from the specified object that represents a toolbox item in serialized form.
            </summary>
            <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem"/> to retrieve.</param>
            <returns>
            The <see cref="T:System.Drawing.Design.ToolboxItem"/> created from the serialized object.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Gets the currently selected toolbox item if it is available to all designers, or if it supports the specified designer.
            The designer uses this to know if we want to design a tool or select the tools.
            </summary>
            <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost"/> that the selected tool must be associated with for it to be returned.</param>
            <returns>
            The <see cref="T:System.Drawing.Design.ToolboxItem"/> that is currently selected, or null if no toolbox item is currently selected.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.GetSelectedToolboxItem">
            <summary>
            Gets the currently selected toolbox item.
            </summary>
            <returns>
            The <see cref="T:System.Drawing.Design.ToolboxItem"/> that is currently selected, or null if no toolbox item has been selected.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Gets the collection of toolbox items that are associated with the specified designer host and category from the toolbox.
            </summary>
            <param name="category">The toolbox item category to retrieve the toolbox items from.</param>
            <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost"/> that is associated with the toolbox items to retrieve.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.ToolboxItemCollection"/> that contains the current toolbox items that are associated with the specified category and designer host.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.GetToolboxItems(System.String)">
            <summary>
            Gets a collection of toolbox items from the toolbox that match the specified category.
            </summary>
            <param name="category">The toolbox item category to retrieve all the toolbox items from.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.ToolboxItemCollection"/> that contains the current toolbox items that are associated with the specified category.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Gets the collection of toolbox items that are associated with the specified designer host from the toolbox.
            </summary>
            <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost"/> that is associated with the toolbox items to retrieve.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.ToolboxItemCollection"/> that contains the current toolbox items that are associated with the specified designer host.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.GetToolboxItems">
            <summary>
            Gets the entire collection of toolbox items from the toolbox.
            </summary>
            <returns>
            A <see cref="T:System.Drawing.Design.ToolboxItemCollection"/> that contains the current toolbox items.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.IsSupported(System.Object,System.Collections.ICollection)">
            <summary>
            Gets a value indicating whether the specified object which represents a serialized toolbox item matches the specified attributes.
            </summary>
            <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem"/> to retrieve.</param>
            <param name="filterAttributes">An <see cref="T:System.Collections.ICollection"/> that contains the attributes to test the serialized object for.</param>
            <returns>
            true if the object matches the specified attributes; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Gets a value indicating whether the specified object which represents a serialized toolbox item can be used by the specified designer host.
            </summary>
            <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem"/> to retrieve.</param>
            <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost"/> to test for support for the <see cref="T:System.Drawing.Design.ToolboxItem"/>.</param>
            <returns>
            true if the specified object is compatible with the specified designer host; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Gets a value indicating whether the specified object is a serialized toolbox item, using the specified designer host.
            </summary>
            <param name="serializedObject">The object to inspect.</param>
            <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost"/> that is making this request.</param>
            <returns>
            true if the object contains a toolbox item object; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.IsToolboxItem(System.Object)">
            <summary>
            Gets a value indicating whether the specified object is a serialized toolbox item.
            </summary>
            <param name="serializedObject">The object to inspect.</param>
            <returns>
            true if the object contains a toolbox item object; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Removes a previously added toolbox creator that is associated with the specified data format and the specified designer host.
            </summary>
            <param name="format">The data format of the creator to remove.</param>
            <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost"/> that is associated with the creator to remove.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.RemoveCreator(System.String)">
            <summary>
            Removes a previously added toolbox item creator of the specified data format.
            </summary>
            <param name="format">The data format of the creator to remove.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
            <summary>
            Removes the specified toolbox item from the toolbox.
            </summary>
            <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem"/> to remove from the toolbox.</param>
            <param name="category">The toolbox item category to remove the <see cref="T:System.Drawing.Design.ToolboxItem"/> from.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
            <summary>
            Removes the specified toolbox item from the toolbox.
            </summary>
            <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem"/> to remove from the toolbox.</param>
        </member>
        <member name="P:Ace.UIBuilder.Client.Toolbox.Toolbox.SelectedCategory">
            <summary>
            Gets or sets the name of the currently selected tool category from the toolbox.
            </summary>
            <value></value>
            <returns>The name of the currently selected category.</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.SelectedToolboxItemUsed">
            <summary>
            Notifies the toolbox service that the selected tool has been used.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
            <summary>
            Gets a serializable object that represents the specified toolbox item.
            </summary>
            <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem"/> to serialize.</param>
            <returns>
            An object that represents the specified <see cref="T:System.Drawing.Design.ToolboxItem"/>.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.SetCursor">
            <summary>
            Sets the current application's cursor to a cursor that represents the currently selected tool.
            </summary>
            <returns>
            true if the cursor is set by the currently selected tool, false if there is no tool selected and the cursor is set to the standard windows cursor.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
            <summary>
            Selects the specified toolbox item.
            </summary>
            <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem"/> to select.</param>
        </member>
        <member name="F:Ace.UIBuilder.Client.Toolbox.Toolbox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.Toolbox.Toolbox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Client.UIFormHelper">
            <summary>
            Represents a custom user interface object
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormHelper.CompileAndRun(Ace.UIBuilder.Server.IUIForm,System.String,Ace.Core.Client.SplashScreenForm,Ace.Core.Server.IAceServer)">
            <summary>
            Compiles the code from a UIForm server object and runs it.
            As the user interface needs to be launched in the client, we can not call a method
            on the server object. We will use this function instead.
            </summary>
            <param name="form">The form.</param>
            <param name="address">The address.</param>
            <param name="splashScreen">The splash screen.</param>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="T:Ace.UIBuilder.Client.UIFormEditor">
            <summary>
            The editor object for the custom user interface
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.UIFormEditor.NeedToGenerateCode">
            <summary>
            Gets or sets a value indicating whether [need to generate code].
            </summary>
            <value><c>true</c> if [need to generate code]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.UIFormEditor.Toolbox">
            <summary>
            Gets the toolbox.
            </summary>
            <value>The toolbox.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.UIFormEditor.PropertyGrid">
            <summary>
            Gets the property grid.
            </summary>
            <value>The property grid.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.UIFormEditor.SelectedObject">
            <summary>
            Gets or sets the object being edited (typically, an AceObject).
            </summary>
            <value></value>
        </member>
        <member name="P:Ace.UIBuilder.Client.UIFormEditor.SelectedForm">
            <summary>
            The object currently being edited
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.UIFormEditor.CustomScript">
            <summary>
            Gets the custom script used on the client side.
            </summary>
            <value>The custom script.</value>
        </member>
        <member name="P:Ace.UIBuilder.Client.UIFormEditor.CSharpScriptEditor">
            <summary>
            Gets the C sharp script editor.
            </summary>
            <value>The C sharp script editor.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.#ctor(Ace.Core.Client.IAceClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.UIFormEditor"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.tabControl1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the tabControl1 control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.Document_TextChanged(System.Object,ActiproSoftware.SyntaxEditor.DocumentModificationEventArgs)">
            <summary>
            Handles the TextChanged event of the Document control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:ActiproSoftware.SyntaxEditor.DocumentModificationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.tabControl1_Selected(System.Object,System.Windows.Forms.TabControlEventArgs)">
            <summary>
            Handles the Selected event of the tabControl1 control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.TabControlEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.propertyGrid1_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the propertyGrid1 control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.propertyGrid1_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Handles the PropertyValueChanged event of the propertyGrid1 control.
            </summary>
            <param name="s">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.PropertyValueChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.propertyGrid1_SelectedObjectsChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedObjectsChanged event of the propertyGrid1 control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.UIFormEditor_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the UIFormEditor control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.handler_ObjectPropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the ObjectPropertyModified event of the handler control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.Client_WorkspaceSaving(System.Object,Ace.Core.Server.Event.WorkspaceSavingEventArgs)">
            <summary>
            Handles the WorkspaceSaving event of the Client control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.WorkspaceSavingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.UpdateInfosFromServerObject">
            <summary>
            Updates the infos coming from the Ace server object.
            This allows initializing the client in the UI Form when it is displayed in the Designer.
            The client is the ACE Client.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HelpRequested"></see> event.
            </summary>
            <param name="hevent">A <see cref="T:System.Windows.Forms.HelpEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.OnLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Leave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.SelectSourceTab">
            <summary>
            Selects the source tab.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.DisplayFind(Ace.Core.Util.FindProviderInstance)">
            <summary>
            Displays the found item.
            </summary>
            <param name="findItem">The find item.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.FindAndReplace(Ace.Core.Util.FindProviderInstance)">
            <summary>
            Performs a find and replace operation.
            </summary>
            <param name="findItem">The find item.</param>
            <returns>Was the replace operation performed.</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.toolStrip_ItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
            <summary>
            Handles the ItemClicked event of the toolStrip control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.toolStripComboBoxReleaseMode_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the toolStripComboBoxReleaseMode control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Ace.UIBuilder.Client.UIFormEditor.CurrentDocumentHostControl">
            <summary>
            Gets the current document host control.
            </summary>
            <value>The current document host control.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.NewForm">
            <summary>
            Creates a new form.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.LoadForm">
            <summary>
            Loads the form.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.SetPropertyOfRootComponent(System.String,System.Object)">
            <summary>
            Sets the property of root component.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.changeService_ComponentAdded(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            Handles the ComponentAdded event of the changeService control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.Design.ComponentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.changeService_ComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
            <summary>
            Handles the ComponentChanged event of the changeService control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.changeService_ComponentRemoved(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            Handles the ComponentRemoved event of the changeService control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.Design.ComponentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.changeService_ComponentRename(System.Object,System.ComponentModel.Design.ComponentRenameEventArgs)">
            <summary>
            Handles the ComponentRename event of the changeService control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.hostSurface_Loading(System.Object,System.EventArgs)">
            <summary>
            Handles the Loading event of the hostSurface control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.hostSurface_Loaded(System.Object,System.ComponentModel.Design.LoadedEventArgs)">
            <summary>
            Handles the Loaded event of the hostSurface control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.Design.LoadedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.ReplaceInCustomScript(System.String,System.String)">
            <summary>
            Replaces a string in the custom script.
            This will take care of updating the protected lines.
            If some renaming occurs, this will raise a
            Document_TextChanged event that will update the server object
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.ComponentModified">
            <summary>
            Called when a components is changed, added or removed.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.RefreshDropDownList(System.Boolean)">
            <summary>
            Refreshes the drop down list.
            </summary>
            <param name="needToRefill">if set to <c>true</c> [need to refill].</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.GenerateCode">
            <summary>
            Generates the code.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.PrepareOutputFolder(Ace.UIBuilder.Server.UIForm)">
            <summary>
            Prepares the output folder.
            </summary>
            <param name="uiForm">The UI form.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.NeedToRecompile(Ace.UIBuilder.Server.UIForm,Ace.UIBuilder.Server.CSharpCustomScript)">
            <summary>
            Determines whether the source code has changed for the specified UI form.
            </summary>
            <param name="uiForm">The UI form.</param>
            <param name="customScript">The custom script.</param>
            <returns>Does the code need to be generated</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.CompileAndLoad(Ace.UIBuilder.Server.UIForm,Ace.UIBuilder.Server.CSharpCustomScript,System.String)">
            <summary>
            Compiles the code from a UIForm server object and loads the assembly.
            This is a static function used when starting the user interface
            from the tool or the command line.
            </summary>
            <param name="uiForm">The UI form.</param>
            <param name="customScript">The custom script.</param>
            <param name="address">The address.</param>
            <returns>If true, success</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.CompileAndLoad(Ace.UIBuilder.Server.UIForm,Ace.UIBuilder.Client.UIFormEditor,Ace.UIBuilder.Server.CSharpCustomScript,System.String,Ace.Core.Client.ProgressDialog)">
            <summary>
            Compiles the code from a UIForm server object and loads the assembly.
            </summary>
            <param name="uiForm">The UI form.</param>
            <param name="uiFormEditor">The UI form editor.</param>
            <param name="customScript">The custom script.</param>
            <param name="address">The address.</param>
            <param name="compileAndRun">The build and run progress dialog.</param>
            <returns>If true, success</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.CompileAndLoadWithProgress">
            <summary>
            Compiles and loads the code compile unit with a progress dialog
            </summary>
            <returns>If true, success</returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.CompileAndRun">
            <summary>
            Compiles the code compile unit and runs it.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.Stop">
            <summary>
            Stops the running UI.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.Deploy">
            <summary>
            Deploys the UI.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.comboBoxComponents_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the comboBoxComponents control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.GetSelectedText">
            <summary>
            Gets the text currently selected in the editor
            </summary>
            <returns>
            The currently selected text. null indicates no text is selected.
            </returns>
            <remarks>This is used by the find window. When find is displayed, the active editor will be
            checked to return the active text. This will be used to populate the find window.
            </remarks>
        </member>
        <member name="T:Ace.UIBuilder.Client.UIFormEditor.ComponentContainer">
            <summary>
            A class used to store a component displayed in the combo box.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Client.UIFormEditor.ComponentContainer.Component">
            <summary>
            Gets the component.
            </summary>
            <value>The component.</value>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.ComponentContainer.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Client.UIFormEditor.ComponentContainer"/> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.ComponentContainer.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.ComponentContainer.GetDropDownListString(System.ComponentModel.IComponent)">
            <summary>
            Gets the string displayed in the drop down list.
            </summary>
            <param name="component">The component.</param>
            <returns></returns>
        </member>
        <member name="F:Ace.UIBuilder.Client.UIFormEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Client.UIFormEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.PropertyGrid">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_IOButton_Controller">
            <summary>
              Looks up a localized string similar to The controller associated with this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_IOButton_Controller_DisplayName">
            <summary>
              Looks up a localized string similar to Controller.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_IOButton_DisplayMode">
            <summary>
              Looks up a localized string similar to The mode used to generate the images displayed by the control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_IOButton_DisplayMode_DisplayName">
            <summary>
              Looks up a localized string similar to DisplayMode.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_IOButton_OffColor">
            <summary>
              Looks up a localized string similar to The color associated with the Off state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_IOButton_OffColor_DisplayName">
            <summary>
              Looks up a localized string similar to OffColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_IOButton_OnColor">
            <summary>
              Looks up a localized string similar to The color associated with the On state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_IOButton_OnColor_DisplayName">
            <summary>
              Looks up a localized string similar to OnColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_IOButton_Signals">
            <summary>
              Looks up a localized string similar to The signals associated with this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_IOButton_Signals_DisplayName">
            <summary>
              Looks up a localized string similar to Signals.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_IOButton_UnknownColor">
            <summary>
              Looks up a localized string similar to The color associated with the Unknown state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_IOButton_UnknownColor_DisplayName">
            <summary>
              Looks up a localized string similar to UnknownColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_Button_ButtonColor">
            <summary>
              Looks up a localized string similar to The color of the button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_Button_ButtonColor_DisplayName">
            <summary>
              Looks up a localized string similar to ButtonColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_Button_PropertyLinkPressed">
            <summary>
              Looks up a localized string similar to The data item associated with the Pressed property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_Button_PropertyLinkPressed_DisplayName">
            <summary>
              Looks up a localized string similar to ItemPressed.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_Button_PulseTime">
            <summary>
              Looks up a localized string similar to When set with a non-null value, defines the time in milliseconds during which the value will be set when the button is pressed..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_Button_PulseTime_DisplayName">
            <summary>
              Looks up a localized string similar to PulseTime.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_Button_ValueWhenPressed">
            <summary>
              Looks up a localized string similar to The value associated with the Pressed state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_Button_ValueWhenPressed_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenPressed.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_IOButton_Controller">
            <summary>
              Looks up a localized string similar to The controller associated with this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_IOButton_Controller_DisplayName">
            <summary>
              Looks up a localized string similar to Controller.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_IOButton_DisplayMode">
            <summary>
              Looks up a localized string similar to The mode used to generate the images displayed by the control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_IOButton_DisplayMode_DisplayName">
            <summary>
              Looks up a localized string similar to DisplayMode.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_IOButton_Signals">
            <summary>
              Looks up a localized string similar to The signals associated with this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_IOButton_Signals_DisplayName">
            <summary>
              Looks up a localized string similar to Signals.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_ToggleButton_ButtonColor">
            <summary>
              Looks up a localized string similar to The color of the button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_ToggleButton_ButtonColor_DisplayName">
            <summary>
              Looks up a localized string similar to ButtonColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_ToggleButton_PropertyLinkPressed">
            <summary>
              Looks up a localized string similar to The data item associated with the Pressed property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_ToggleButton_PropertyLinkPressed_DisplayName">
            <summary>
              Looks up a localized string similar to ItemPressed.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_ToggleButton_ValueWhenPressed">
            <summary>
              Looks up a localized string similar to The value associated with the Pressed state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_ToggleButton_ValueWhenPressed_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenPressed.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_ToggleButton_ValueWhenUnpressed">
            <summary>
              Looks up a localized string similar to The value associated with the Unpressed state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_ToggleButton_ValueWhenUnpressed_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenUnpressed.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_Button_PropertyLinkPressed">
            <summary>
              Looks up a localized string similar to The data item associated with the Pressed property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_Button_PropertyLinkPressed_DisplayName">
            <summary>
              Looks up a localized string similar to ItemPressed.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_Button_PulseTime">
            <summary>
              Looks up a localized string similar to When set with a non-null value, defines the time in milliseconds during which the value will be set when the button is pressed..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_Button_PulseTime_DisplayName">
            <summary>
              Looks up a localized string similar to PulseTime.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_Button_ValueWhenPressed">
            <summary>
              Looks up a localized string similar to The value associated with the Pressed state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_Button_ValueWhenPressed_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenPressed.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ConditionalLinkActive">
            <summary>
              Looks up a localized string similar to The conditional link that activates/deactivates this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ConditionalLinkActive_DisplayName">
            <summary>
              Looks up a localized string similar to Activate/Deactivate.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ConditionalLinkActiveInvertedLogic">
            <summary>
              Looks up a localized string similar to When set, the logic of the conditional link that activates/deactivates this control will be inverted..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ConditionalLinkActiveInvertedLogic_DisplayName">
            <summary>
              Looks up a localized string similar to Activate/Deactivate Inverted Logic.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_DisplayMode">
            <summary>
              Looks up a localized string similar to The mode used to generate the images displayed by the control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_DisplayMode_DisplayName">
            <summary>
              Looks up a localized string similar to DisplayMode.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ImagePressedActive">
            <summary>
              Looks up a localized string similar to The image that will be displayed when the button is pressed and active..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ImagePressedActive_DisplayName">
            <summary>
              Looks up a localized string similar to PressedActive.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ImagePressedInactive">
            <summary>
              Looks up a localized string similar to The image that will be displayed when the button is pressed and inactive..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ImagePressedInactive_DisplayName">
            <summary>
              Looks up a localized string similar to PressedInactive.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ImageUnpressedActive">
            <summary>
              Looks up a localized string similar to The image that will be displayed when the button is unpressed and active..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ImageUnpressedActive_DisplayName">
            <summary>
              Looks up a localized string similar to UnpressedActive.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ImageUnpressedInactive">
            <summary>
              Looks up a localized string similar to The image that will be displayed when the button is unpressed and inactive..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ImageUnpressedInactive_DisplayName">
            <summary>
              Looks up a localized string similar to UnpressedInactive.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_PropertyLinkPressed">
            <summary>
              Looks up a localized string similar to The data item associated with the Pressed property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_PropertyLinkPressed_DisplayName">
            <summary>
              Looks up a localized string similar to ItemPressed.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ValueWhenPressed">
            <summary>
              Looks up a localized string similar to The value associated with the Pressed state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ValueWhenPressed_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenPressed.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ValueWhenUnpressed">
            <summary>
              Looks up a localized string similar to The value associated with the Unpressed state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ValueWhenUnpressed_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenUnpressed.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.AppearanceCategory">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.AxGlgControl_TextSize">
            <summary>
              Looks up a localized string similar to The size used to display text in the control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.AxGlgControl_TextSize_DisplayName">
            <summary>
              Looks up a localized string similar to TextSize.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.AxGlgControl_ToolType">
            <summary>
              Looks up a localized string similar to The type of the tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.AxGlgControl_ToolType_DisplayName">
            <summary>
              Looks up a localized string similar to ToolType.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.BehaviorCategory">
            <summary>
              Looks up a localized string similar to Behavior.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.CheckBox_PropertyLinkChecked">
            <summary>
              Looks up a localized string similar to The data item associated with the Checked property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.CheckBox_PropertyLinkChecked_DisplayName">
            <summary>
              Looks up a localized string similar to ItemChecked.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.CheckBox_ValueWhenChecked">
            <summary>
              Looks up a localized string similar to The value associated with the Checked state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.CheckBox_ValueWhenChecked_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenChecked.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.CheckBox_ValueWhenUnchecked">
            <summary>
              Looks up a localized string similar to The value associated with the Unchecked state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.CheckBox_ValueWhenUnchecked_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenUnchecked.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.ComboBox_Editable">
            <summary>
              Looks up a localized string similar to When set, indicates that the ComboBox will accept free text typing..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.ComboBox_Editable_DisplayName">
            <summary>
              Looks up a localized string similar to Editable.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Component_Description">
            <summary>
              Looks up a localized string similar to The description associated with this component..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Component_Description_DisplayName">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Component_NameProperty">
            <summary>
              Looks up a localized string similar to Indicates the name used in the code to identify this component..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Component_NameProperty_DisplayName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.ConditionalLink_ConditionWrapper">
            <summary>
              Looks up a localized string similar to The condition associated with this connection..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.ConditionalLink_ConditionWrapper_DisplayName">
            <summary>
              Looks up a localized string similar to Condition.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.ConditionalLink_NameProperty">
            <summary>
              Looks up a localized string similar to Indicates the name used in the code to identify the object..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.ConditionalLink_NameProperty_DisplayName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.ConditionalLinksCategory">
            <summary>
              Looks up a localized string similar to Conditional Links.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.ConnectionCategory">
            <summary>
              Looks up a localized string similar to Connection.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_AccessLevel">
            <summary>
              Looks up a localized string similar to The access level associated with this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_AccessLevel_DisplayName">
            <summary>
              Looks up a localized string similar to AccessLevel.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_AccessVisibility">
            <summary>
              Looks up a localized string similar to The access visibility associated with this control when the user&apos;s access level does not exceed the required level for this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_AccessVisibility_DisplayName">
            <summary>
              Looks up a localized string similar to AccessVisibility.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_ConditionalLinkEnabled">
            <summary>
              Looks up a localized string similar to The conditional link that enables/disables this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_ConditionalLinkEnabled_DisplayName">
            <summary>
              Looks up a localized string similar to Enable/Disable.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_ConditionalLinkEnabledInvertedLogic">
            <summary>
              Looks up a localized string similar to When set, the logic of the conditional link that enables/disables this control will be inverted..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_ConditionalLinkEnabledInvertedLogic_DisplayName">
            <summary>
              Looks up a localized string similar to Enable/Disable Inverted Logic.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_ConditionalLinkVisible">
            <summary>
              Looks up a localized string similar to The conditional link that shows/hides this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_ConditionalLinkVisible_DisplayName">
            <summary>
              Looks up a localized string similar to Show/Hide.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_ConditionalLinkVisibleInvertedLogic">
            <summary>
              Looks up a localized string similar to When set, the logic of the conditional link that shows/hides this control will be inverted..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_ConditionalLinkVisibleInvertedLogic_DisplayName">
            <summary>
              Looks up a localized string similar to Show/Hide Inverted Logic.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_FormatString">
            <summary>
              Looks up a localized string similar to The formatting of the data item..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_FormatString_DisplayName">
            <summary>
              Looks up a localized string similar to FormatString.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_ParentProperty">
            <summary>
              Looks up a localized string similar to Indicates the parent of this object..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_ParentProperty_DisplayName">
            <summary>
              Looks up a localized string similar to Parent.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_PropertyLinkText">
            <summary>
              Looks up a localized string similar to The data item associated with the Text property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Control_PropertyLinkText_DisplayName">
            <summary>
              Looks up a localized string similar to ItemText.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.DataCategory">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.DesignCategory">
            <summary>
              Looks up a localized string similar to Design.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.DigitalIndicator_OffColor">
            <summary>
              Looks up a localized string similar to The color associated with the Off state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.DigitalIndicator_OffColor_DisplayName">
            <summary>
              Looks up a localized string similar to OffColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.DigitalIndicator_OnColor">
            <summary>
              Looks up a localized string similar to The color associated with the On state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.DigitalIndicator_OnColor_DisplayName">
            <summary>
              Looks up a localized string similar to OnColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.DigitalIndicator_PropertyLinkState">
            <summary>
              Looks up a localized string similar to The data item associated with the State property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.DigitalIndicator_PropertyLinkState_DisplayName">
            <summary>
              Looks up a localized string similar to ItemState.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.DigitalIndicator_UnknownColor">
            <summary>
              Looks up a localized string similar to The color associated with the Unknown state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.DigitalIndicator_UnknownColor_DisplayName">
            <summary>
              Looks up a localized string similar to UnknownColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.DigitalIndicator_ValueWhenOff">
            <summary>
              Looks up a localized string similar to The value associated with the Off state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.DigitalIndicator_ValueWhenOff_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenOff.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.DigitalIndicator_ValueWhenOn">
            <summary>
              Looks up a localized string similar to The value associated with the On state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.DigitalIndicator_ValueWhenOn_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenOn.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.FormattingCategory">
            <summary>
              Looks up a localized string similar to Formatting.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Gauge_GaugeBackgroundColor">
            <summary>
              Looks up a localized string similar to The color of the background of the gauge..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Gauge_GaugeBackgroundColor_DisplayName">
            <summary>
              Looks up a localized string similar to GaugeBackgroundColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Gauge_GaugeSectorCollection">
            <summary>
              Looks up a localized string similar to The collection of sectors that will be displayed by this gauge tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Gauge_GaugeSectorCollection_DisplayName">
            <summary>
              Looks up a localized string similar to Sector Collection.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Gauge_IndicatorColor">
            <summary>
              Looks up a localized string similar to The color of the indicator of the gauge..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Gauge_IndicatorColor_DisplayName">
            <summary>
              Looks up a localized string similar to IndicatorColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Gauge_Maximum">
            <summary>
              Looks up a localized string similar to The upper bound of the range this gauge is working with..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Gauge_Maximum_DisplayName">
            <summary>
              Looks up a localized string similar to Maximum.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Gauge_Minimum">
            <summary>
              Looks up a localized string similar to The lower bound of the range this gauge is working with..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Gauge_Minimum_DisplayName">
            <summary>
              Looks up a localized string similar to Minimum.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Gauge_PropertyLinkValue">
            <summary>
              Looks up a localized string similar to The data item associated with the Value property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Gauge_PropertyLinkValue_DisplayName">
            <summary>
              Looks up a localized string similar to ItemValue.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Gauge_ReadOnly">
            <summary>
              Looks up a localized string similar to Controls whether the data item connected to this tool can be changed or not..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Gauge_ReadOnly_DisplayName">
            <summary>
              Looks up a localized string similar to ReadOnly.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GaugeSector_SectoName_DisplayName">
            <summary>
              Looks up a localized string similar to SectorName.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GaugeSector_SectorColor">
            <summary>
              Looks up a localized string similar to The color of the sector..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GaugeSector_SectorColor_DisplayName">
            <summary>
              Looks up a localized string similar to SectorColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GaugeSector_SectorEnd">
            <summary>
              Looks up a localized string similar to The end of the sector, in percent..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GaugeSector_SectorEnd_DisplayName">
            <summary>
              Looks up a localized string similar to SectorEnd.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GaugeSector_SectorName">
            <summary>
              Looks up a localized string similar to The name of the sector..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_ChartBackColor">
            <summary>
              Looks up a localized string similar to The background color of the chart plot area..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_ChartBackColor_DisplayName">
            <summary>
              Looks up a localized string similar to ChartBackColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_ChartBorderColor">
            <summary>
              Looks up a localized string similar to The color of the border of the chart plot area..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_ChartBorderColor_DisplayName">
            <summary>
              Looks up a localized string similar to ChartBorderColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_ChartBorderWidth">
            <summary>
              Looks up a localized string similar to The width of the border of the chart plot area..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_ChartBorderWidth_DisplayName">
            <summary>
              Looks up a localized string similar to ChartBorderWidth.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_GraphDataCollection">
            <summary>
              Looks up a localized string similar to The collection of data that will be displayed by this graph tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_GraphDataCollection_DisplayName">
            <summary>
              Looks up a localized string similar to Data Collection.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_GraphDuration">
            <summary>
              Looks up a localized string similar to The duration of the graph window, in seconds. The minimum value is 1 second..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_GraphDuration_DisplayName">
            <summary>
              Looks up a localized string similar to Duration.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_GraphInterval">
            <summary>
              Looks up a localized string similar to The interval between two updates of the graph, in milliseconds. The minimum value is 10 milliseconds..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_GraphInterval_DisplayName">
            <summary>
              Looks up a localized string similar to Interval.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_GraphTitle">
            <summary>
              Looks up a localized string similar to The title of the graph..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_GraphTitle_DisplayName">
            <summary>
              Looks up a localized string similar to GraphTitle.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_GraphTitleFont">
            <summary>
              Looks up a localized string similar to The font of the title of the graph..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_GraphTitleFont_DisplayName">
            <summary>
              Looks up a localized string similar to GraphTitleFont.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_GraphTitleForeColor">
            <summary>
              Looks up a localized string similar to The foreground color of the title of the graph..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_GraphTitleForeColor_DisplayName">
            <summary>
              Looks up a localized string similar to GraphTitleForeColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_LegendBackColor">
            <summary>
              Looks up a localized string similar to The background color of the legend area..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_LegendBackColor_DisplayName">
            <summary>
              Looks up a localized string similar to LegendBackColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_LegendBorderWidth">
            <summary>
              Looks up a localized string similar to The width of the border of the legend..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_LegendBorderWidth_DisplayName">
            <summary>
              Looks up a localized string similar to LegendBorderWidth.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_LegendFont">
            <summary>
              Looks up a localized string similar to The font of the legend..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_LegendFont_DisplayName">
            <summary>
              Looks up a localized string similar to LegendFont.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_LegendForeColor">
            <summary>
              Looks up a localized string similar to The foreground color of the legend..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_LegendForeColor_DisplayName">
            <summary>
              Looks up a localized string similar to LegendForeColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_XAxisTitle">
            <summary>
              Looks up a localized string similar to The title of the X-Axis..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_XAxisTitle_DisplayName">
            <summary>
              Looks up a localized string similar to XAxisTitle.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_XAxisTitleFont">
            <summary>
              Looks up a localized string similar to The font of the title of the X-Axis..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_XAxisTitleFont_DisplayName">
            <summary>
              Looks up a localized string similar to XAxisTitleFont.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_XAxisTitleForeColor">
            <summary>
              Looks up a localized string similar to The foreground color of the title of the X-Axis..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_XAxisTitleForeColor_DisplayName">
            <summary>
              Looks up a localized string similar to XAxisTitleForeColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_XAxisWidth">
            <summary>
              Looks up a localized string similar to The width of the X-Axis..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_XAxisWidth_DisplayName">
            <summary>
              Looks up a localized string similar to XAxisWidth.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_YAxisManualScale">
            <summary>
              Looks up a localized string similar to The value that indicates if the Y-Axis will have a manual scale..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_YAxisManualScale_DisplayName">
            <summary>
              Looks up a localized string similar to YAxisManualScale.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_YAxisMax">
            <summary>
              Looks up a localized string similar to The maximum value of the Y-Axis in manual scale mode..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_YAxisMax_DisplayName">
            <summary>
              Looks up a localized string similar to YAxisMax.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_YAxisMin">
            <summary>
              Looks up a localized string similar to The minimum value of the Y-Axis in manual scale mode..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_YAxisMin_DisplayName">
            <summary>
              Looks up a localized string similar to YAxisMin.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_YAxisTitle">
            <summary>
              Looks up a localized string similar to The title of the Y-Axis..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_YAxisTitle_DisplayName">
            <summary>
              Looks up a localized string similar to YAxisTitle.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_YAxisTitleFont">
            <summary>
              Looks up a localized string similar to The font of the title of the Y-Axis..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_YAxisTitleFont_DisplayName">
            <summary>
              Looks up a localized string similar to YAxisTitleFont.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_YAxisTitleForeColor">
            <summary>
              Looks up a localized string similar to The foreground color of the title of the Y-Axis..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_YAxisTitleForeColor_DisplayName">
            <summary>
              Looks up a localized string similar to YAxisTitleForeColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_YAxisWidth">
            <summary>
              Looks up a localized string similar to The width of the Y-Axis..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Graph_YAxisWidth_DisplayName">
            <summary>
              Looks up a localized string similar to YAxisWidth.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GraphCategory">
            <summary>
              Looks up a localized string similar to Graph.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GraphData_DataColor">
            <summary>
              Looks up a localized string similar to The color of the data..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GraphData_DataColor_DisplayName">
            <summary>
              Looks up a localized string similar to DataColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GraphData_DataName">
            <summary>
              Looks up a localized string similar to The name of the data..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GraphData_DataName_DisplayName">
            <summary>
              Looks up a localized string similar to DataName.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GraphData_DataWidth">
            <summary>
              Looks up a localized string similar to The width of the data curve..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GraphData_DataWidth_DisplayName">
            <summary>
              Looks up a localized string similar to DataWidth.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GraphData_PropertyLinkValue">
            <summary>
              Looks up a localized string similar to The data item associated with this graph data..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.GraphData_PropertyLinkValue_DisplayName">
            <summary>
              Looks up a localized string similar to ItemValue.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.ImagesCategory">
            <summary>
              Looks up a localized string similar to Images.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.InnerControlsCategory">
            <summary>
              Looks up a localized string similar to Inner Controls.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.LayoutCategory">
            <summary>
              Looks up a localized string similar to Layout.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.NumericIndicator_DecimalPlaces">
            <summary>
              Looks up a localized string similar to Indicates the number of decimal places to display..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.NumericIndicator_DecimalPlaces_DisplayName">
            <summary>
              Looks up a localized string similar to DecimalPlaces.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.NumericIndicator_IndicatorBackgroundColor">
            <summary>
              Looks up a localized string similar to The color of the background of the indicator..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.NumericIndicator_IndicatorBackgroundColor_DisplayName">
            <summary>
              Looks up a localized string similar to IndicatorBackgroundColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.NumericIndicator_OffColor">
            <summary>
              Looks up a localized string similar to The color associated with the Off state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.NumericIndicator_OffColor_DisplayName">
            <summary>
              Looks up a localized string similar to OffColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.NumericIndicator_OnColor">
            <summary>
              Looks up a localized string similar to The color associated with the On state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.NumericIndicator_OnColor_DisplayName">
            <summary>
              Looks up a localized string similar to OnColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.NumericIndicator_PropertyLinkValue">
            <summary>
              Looks up a localized string similar to The data item associated with the Value property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.NumericIndicator_PropertyLinkValue_DisplayName">
            <summary>
              Looks up a localized string similar to ItemValue.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.NumericUpDown_PropertyLinkValue">
            <summary>
              Looks up a localized string similar to The data item associated with the Value property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.NumericUpDown_PropertyLinkValue_DisplayName">
            <summary>
              Looks up a localized string similar to ItemValue.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PictureBox_PropertyLinkImage">
            <summary>
              Looks up a localized string similar to The data item associated with the Image property of this control. It will be used to connect to a data item. This data item value will determine which image of the image list will be displayed..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PictureBox_PropertyLinkImage_DisplayName">
            <summary>
              Looks up a localized string similar to ItemImage.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PictureBox_PropertyLinkImageList">
            <summary>
              Looks up a localized string similar to The image list associated with the Image property of this control. It will be used when connected to a data item. The data item value will determine which image of the image list will be displayed..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PictureBox_PropertyLinkImageList_DisplayName">
            <summary>
              Looks up a localized string similar to ImageList.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.ProgressBar_Orientation">
            <summary>
              Looks up a localized string similar to The orientation of the control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.ProgressBar_Orientation_DisplayName">
            <summary>
              Looks up a localized string similar to Orientation.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.ProgressBar_PropertyLinkValue">
            <summary>
              Looks up a localized string similar to The data item associated with the Value property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.ProgressBar_PropertyLinkValue_DisplayName">
            <summary>
              Looks up a localized string similar to ItemValue.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLink_ExposableDataItemWrapper">
            <summary>
              Looks up a localized string similar to The data item associated with this connection..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLink_ExposableDataItemWrapper_DisplayName">
            <summary>
              Looks up a localized string similar to DataItem.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLink_LinkDirection">
            <summary>
              Looks up a localized string similar to The direction of the connection. ReadOnly means that the data item can only be read by the control. WriteOnly means that the data item can only be written by the control. ReadWrite means that the data item can be read and written by the control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLink_LinkDirection_DisplayName">
            <summary>
              Looks up a localized string similar to LinkDirection.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLinkDualState_ValueWhenFalse">
            <summary>
              Looks up a localized string similar to The value associated with the False state of this property..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLinkDualState_ValueWhenFalse_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenFalse.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLinkDualState_ValueWhenTrue">
            <summary>
              Looks up a localized string similar to The value associated with the True state of this property..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLinkDualState_ValueWhenTrue_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenTrue.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLinksCategory">
            <summary>
              Looks up a localized string similar to Property Links.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLinkSingleState_ValueWhenTrue">
            <summary>
              Looks up a localized string similar to The value associated with the True state of this property..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLinkSingleState_ValueWhenTrue_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenTrue.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLinkTripleState_ValueWhenFalse">
            <summary>
              Looks up a localized string similar to The value associated with the False state of this property..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLinkTripleState_ValueWhenFalse_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenFalse.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLinkTripleState_ValueWhenTrue">
            <summary>
              Looks up a localized string similar to The value associated with the True state of this property..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLinkTripleState_ValueWhenTrue_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenTrue.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLinkTripleState_ValueWhenUnknown">
            <summary>
              Looks up a localized string similar to The value associated with the Unknown state of this property..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.PropertyLinkTripleState_ValueWhenUnknown_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenUnknown.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.RadioButton_PropertyLinkChecked">
            <summary>
              Looks up a localized string similar to The data item associated with the Checked property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.RadioButton_PropertyLinkChecked_DisplayName">
            <summary>
              Looks up a localized string similar to ItemChecked.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.RadioButton_ValueWhenChecked">
            <summary>
              Looks up a localized string similar to The value associated with the Checked state of this tool..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.RadioButton_ValueWhenChecked_DisplayName">
            <summary>
              Looks up a localized string similar to ValueWhenChecked.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.RecipeSelector_RecipeManagerTarget">
            <summary>
              Looks up a localized string similar to The Recipe Manager associated with the control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.RecipeSelector_RecipeManagerTarget_DisplayName">
            <summary>
              Looks up a localized string similar to Recipe Manager.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Slider_KnobColor">
            <summary>
              Looks up a localized string similar to The color of the knob of the slider..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Slider_KnobColor_DisplayName">
            <summary>
              Looks up a localized string similar to KnobColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Slider_Maximum">
            <summary>
              Looks up a localized string similar to Indicates the maximum value for the slider control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Slider_Maximum_DisplayName">
            <summary>
              Looks up a localized string similar to Maximum.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Slider_Minimum">
            <summary>
              Looks up a localized string similar to Indicates the minimum value for the slider control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Slider_Minimum_DisplayName">
            <summary>
              Looks up a localized string similar to Minimum.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Slider_PropertyLinkValue">
            <summary>
              Looks up a localized string similar to The data item associated with the Value property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Slider_PropertyLinkValue_DisplayName">
            <summary>
              Looks up a localized string similar to ItemValue.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Slider_SliderBackgroundColor">
            <summary>
              Looks up a localized string similar to The color of the background of the slider..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.Slider_SliderBackgroundColor_DisplayName">
            <summary>
              Looks up a localized string similar to SliderBackgroundColor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TabControl_ImageListProperty">
            <summary>
              Looks up a localized string similar to The ImageList object from which this tab takes its images..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TabControl_ImageListProperty_DisplayName">
            <summary>
              Looks up a localized string similar to ImageList.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TabControl_SizeModeProperty">
            <summary>
              Looks up a localized string similar to Indicates how tabs are sized..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TabControl_SizeModeProperty_DisplayName">
            <summary>
              Looks up a localized string similar to SizeMode.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TrackBar_PropertyLinkValue">
            <summary>
              Looks up a localized string similar to The data item associated with the Value property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TrackBar_PropertyLinkValue_DisplayName">
            <summary>
              Looks up a localized string similar to ItemValue.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TransformEditor_CustomTypeDescriptorPitch">
            <summary>
              Looks up a localized string similar to The properties of the numeric up down control for the Pitch value..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TransformEditor_CustomTypeDescriptorPitch_DisplayName">
            <summary>
              Looks up a localized string similar to NumericUpDownPitch.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TransformEditor_CustomTypeDescriptorRoll">
            <summary>
              Looks up a localized string similar to The properties of the numeric up down control for the Roll value..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TransformEditor_CustomTypeDescriptorRoll_DisplayName">
            <summary>
              Looks up a localized string similar to NumericUpDownRoll.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TransformEditor_CustomTypeDescriptorX">
            <summary>
              Looks up a localized string similar to The properties of the numeric up down control for the X value..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TransformEditor_CustomTypeDescriptorX_DisplayName">
            <summary>
              Looks up a localized string similar to NumericUpDownX.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TransformEditor_CustomTypeDescriptorY">
            <summary>
              Looks up a localized string similar to The properties of the numeric up down control for the Y value..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TransformEditor_CustomTypeDescriptorY_DisplayName">
            <summary>
              Looks up a localized string similar to NumericUpDownY.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TransformEditor_CustomTypeDescriptorYaw">
            <summary>
              Looks up a localized string similar to The properties of the numeric up down control for the Yaw value..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TransformEditor_CustomTypeDescriptorYaw_DisplayName">
            <summary>
              Looks up a localized string similar to NumericUpDownYaw.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TransformEditor_CustomTypeDescriptorZ">
            <summary>
              Looks up a localized string similar to The properties of the numeric up down control for the Z value..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TransformEditor_CustomTypeDescriptorZ_DisplayName">
            <summary>
              Looks up a localized string similar to NumericUpDownZ.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TransformEditor_PropertyLinkTransform">
            <summary>
              Looks up a localized string similar to The data item associated with the Transform property of this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.TransformEditor_PropertyLinkTransform_DisplayName">
            <summary>
              Looks up a localized string similar to ItemTransform.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.UIBuilderForm_SignOutAtStartup">
            <summary>
              Looks up a localized string similar to The value that indicates if the user interface will sign out at startup. When signing out, the &quot;User Manager&quot; object of the workspace (if any) will be used to get the default access level..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.UIBuilderForm_SignOutAtStartup_DisplayName">
            <summary>
              Looks up a localized string similar to SignOutAtStartup.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.UIFormDisplayButton_Modal">
            <summary>
              Looks up a localized string similar to The value that indicates if the user interface will be displayed as a modal window or as a modeless window..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.UIFormDisplayButton_Modal_DisplayName">
            <summary>
              Looks up a localized string similar to Modal.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.UIFormDisplayButton_UIForm">
            <summary>
              Looks up a localized string similar to The user interface form associated with this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.UIFormDisplayButton_UIForm_DisplayName">
            <summary>
              Looks up a localized string similar to UIForm.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.UserManagerCategory">
            <summary>
              Looks up a localized string similar to User Manager.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.VisionDisplay_ImageSource">
            <summary>
              Looks up a localized string similar to The image source associated with this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.VisionDisplay_ImageSource_DisplayName">
            <summary>
              Looks up a localized string similar to ImageSource.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.WorkspaceObjectEditor_AceObject">
            <summary>
              Looks up a localized string similar to The Workspace Object associated with this control..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PropertyGrid.WorkspaceObjectEditor_AceObject_DisplayName">
            <summary>
              Looks up a localized string similar to AceObject.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Server.CSharpCustomScript">
            <summary>
            Represents a C# program object.
            This object has been inspired by the code of the Ace.Core.Server.Scripting.CSharpProgram object.
            However, it will be used by the UIForm editor, so in a client context.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.TaskName">
            <summary>
            Gets the name of the task that will be displayed in the Task Status Control.
            </summary>
            <value>
            The name of the task.
            </value>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.DefaultNamespace">
            <summary>
            The default namespace to which the generated class belongs
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.DefaultClassName">
            <summary>
            The default class name of the generated program
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.DefaultEntryMethod">
            <summary>
            The default class name of the generated program
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.DefaultUsingNamespaces">
            <summary>
            Gets a list of the default using namespaces.
            </summary>
            <value>The default using namespace.</value>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.RunStatus">
            <summary>
            Gets the current run status of the script
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.Identifier">
            <summary>
            Gets the unique identifier associated with the script
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.DebugMode">
            <summary>
            Gets or sets if the script is in debug mode
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.CurrentPosition">
            <summary>
            Gets the current position in the script in debug mode
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.Breakpoints">
            <summary>
            The list of breakpoints in the script.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.ProtectedLines">
            <summary>
            Gets the list of protected lines
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.AddProtectedLine(System.String)">
            <summary>
            Adds the protected line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.SetProtectedLines(System.String[])">
            <summary>
            Set the protected lines.
            </summary>
            <param name="lines">The lines.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.RenameInProtectedLine(System.String,System.String)">
            <summary>
            Renames in the protected lines.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.RemoveProtectedLine(System.String)">
            <summary>
            Removes the protected line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.CompiledDllPath">
            <summary>
            Gets the path to the compiled dll.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.Errors">
            <summary>
            The errors associated with the last compilation attempt
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.SourceCodeIdentifier">
            <summary>
            Gets or sets the source code identifier.
            </summary>
            <value>The source code identifier.</value>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.IsModified">
            <summary>
            Has the object been modified
            </summary>
            <value></value>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.ResetDomainHelper">
            <summary>
            Sets a value indicating whether [reset domain helper].
            </summary>
            <value><c>true</c> if [reset domain helper]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.Text">
            <summary>
            Gets or sets the startup commands for the interpreter. These commands are executed at startup and
            whenever the interpreter is reset.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.TaskVisible">
            <summary>
            Gets a flag indicating whether the property should shown in the task
            status control as an executable program. By default, returns "true".
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.ShowsProgress">
            <summary>
            Gets a flag indicating whether the program object will show progress when preparing  or aborting.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.CSharpCustomScript.ExecutionException">
            <summary>
            Gets the exception associated with the execution of the script
            </summary>
            <value>
            The exception.
            </value>
        </member>
        <member name="E:Ace.UIBuilder.Server.CSharpCustomScript.TextCompiled">
            <summary>
            An event raised when the state of the server changes.
            </summary>
        </member>
        <member name="E:Ace.UIBuilder.Server.CSharpCustomScript.CurrentLineChanged">
            <summary>
            An event raised when the current line changes.
            </summary>
        </member>
        <member name="E:Ace.UIBuilder.Server.CSharpCustomScript.TraceMessageReceived">
            <summary>
            Event thrown when a trace message is received from a running script
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.#ctor(System.Collections.Generic.List{System.String},System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Server.CSharpCustomScript"/> class.
            </summary>
            <param name="usingNamespaces">The using namespaces.</param>
            <param name="namespaceName">Name of the namespace.</param>
            <param name="className">Name of the class.</param>
            <param name="isPartial">if set to <c>true</c> [is partial].</param>
            <param name="entryMethod">The entry method.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Server.CSharpCustomScript"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="protectedLines">The protected lines.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.InitializeText(System.Collections.Generic.List{System.String},System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes the text.
            </summary>
            <param name="usingNamespaces">The using namespaces.</param>
            <param name="namespaceName">Name of the namespace.</param>
            <param name="className">Name of the class.</param>
            <param name="isPartial">if set to <c>true</c> [is partial].</param>
            <param name="entryMethod">The entry method.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>		
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.AddNeutralResourcesLanguageAttribute(System.String)">
            <summary>
            Adds the neutral resources language attribute.
            </summary>
            <param name="text">The text to operate with.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.Instance_CollectionChanged(System.Object,Ace.Core.Server.Event.ContentsChangeEventArgs)">
            <summary>
            Mark that the workspace has changed so we can force a recompile on next execution
            </summary>
            <param name="sender">Object generating the event</param>
            <param name="e">The event details</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.domainHelper_CurrentLineChange(System.Object,Ace.Core.Server.Scripting.CurrentLineChangeEventArgs)">
            <summary>
            Handles the CurrentLineChange event of the domainHelper control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Scripting.CurrentLineChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.domainHelper_TraceMessageReceived(System.Object,Ace.Core.Util.LogEventArgs)">
            <summary>
            Handles the TraceMessageReceived event of the domainHelper control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Util.LogEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.UpdateCurrentLine(System.Int32)">
            <summary>
            Updates the current line.
            </summary>
            <param name="lineNumber">The line number.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.UpdateCurrentLine(Ace.Core.Server.Scripting.Debug.ISourcePosition)">
            <summary>
            Updates the current line.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.CanPerformStepOperation">
            <summary>
            Determines whether the script is in a state where it can perform a step operation.
            </summary>
            <returns>
            	<c>true</c> if a step operation is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.Dispose(System.Boolean)">
            <summary>
            Dispose of the allocated resources.
            </summary>
            <param name="isDisposing">Is the object being disposed</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.CheckDomainHelper(System.String)">
            <summary>
            Checks the domain helper.
            </summary>
            <param name="scriptTypeName">Name of the script type.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.Compile">
            <summary>
            Perform a compilation
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.Compile(System.String,System.String,System.String)">
            <summary>
            Perform a compilation
            </summary>
            <param name="scriptTypeName">Name of the script type.</param>
            <param name="designerCode">The designer code.</param>
            <param name="embeddedResources">The embedded resources.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.CompileInternal(System.String,System.String,System.String)">
            <summary>
            Internal function to perform a compilation
            </summary>
            <param name="scriptTypeName">Name of the script type.</param>
            <param name="designerCode">The designer code.</param>
            <param name="embeddedResources">The embedded resources.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.LoadAssembly(System.String)">
            <summary>
            Loads the assembly.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.Run">
            <summary>
            Runs the user interface. This is a blocking function that runs the form in the current thread,
            so there is no need to pass the culture to the UI.
            Also, there is no need to set the start position as we are not relative to a parent,
            so we will use the Location property if needed.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.Show(System.IntPtr,System.Drawing.Point,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Boolean,System.Boolean,System.Boolean,Ace.Core.Client.IAceClient)">
            <summary>
            Shows the modal or modeless user interface, relative to the parent form if any.
            This is a blocking function.
            </summary>
            <param name="parentFormHandle">The parent form handle.</param>
            <param name="parentLocation">The parent location.</param>
            <param name="parentWidth">Width of the parent.</param>
            <param name="parentHeight">Height of the parent.</param>
            <param name="culture">The culture.</param>
            <param name="modal">if set to <c>true</c> [modal].</param>
            <param name="debug">if set to <c>true</c> we are running in debug mode.</param>
            <param name="signOutAtStartup">if set to <c>true</c> [sign out at startup].</param>
            <param name="aceClientToSignIn">The ace client to sign in.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.Close">
            <summary>
            Closes the user interface.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.Execute">
            <summary>
            Performs the operation of the program. You must override
            one of the Execute methods, typically this one.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.Abort">
            <summary>
            Requests the program to abort the operation.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.Abort(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Requests the program to abort the operation.
            </summary>
            <param name="progressHandler">The progress handler.</param>		
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.Prepare">
            <summary>
            Initialize the program before execution starts. If the program object throws an exception, the execution sequence will be aborted.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.Prepare(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Initialize the program before execution starts. If the program object throws an exception, the execution sequence will be aborted.
            </summary>
            <param name="progressHandler">The progress handler.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.StepOver">
            <summary>
            Perform a step over operation in debug mode
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.StepIn">
            <summary>
            Perform a step over operation in debug mode
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.Go">
            <summary>
            Perform a step over operation in debug mode
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.SetLine(System.Int32)">
            <summary>
            Sets the current line in the script to the specified line.
            </summary>
            <param name="line">The line to set</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.AddBreakpoint(System.Int32)">
            <summary>
            Add a breakpoint on a line in the script
            </summary>
            <param name="lineNumber">The line number.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.RemoveBreakpoint(System.Int32)">
            <summary>
            Remove a breakpoint from a line in the script
            </summary>
            <param name="lineNumber">The line number.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.ResolveVariable(System.String[])">
            <summary>
            Find a variable in the script
            </summary>
            <param name="variableStack">The list of the variable stack.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.CSharpCustomScript.ClearTraceMessages">
            <summary>
            Clears trace messages from the script
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Server.ICSharpCustomScript">
            <summary>
            Represents a custom script used in the UIBuilder.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Server.UIForm">
            <summary>
            Represents a custom user interface object
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.UIForm.SiteName">
            <summary>
            The UIBuilder site name.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.UIForm.MainClass">
            <summary>
            Gets the main class.
            </summary>
            <value>The main class.</value>
        </member>
        <member name="P:Ace.UIBuilder.Server.UIForm.UIBuilderUserNamespace">
            <summary>
            The UIBuilder user namespace.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Server.UIForm.UIBuilderPath">
            <summary>
            Gets the UI builder path.
            </summary>
            <value>The UI builder path.</value>
        </member>
        <member name="P:Ace.UIBuilder.Server.UIForm.ExecutablePath">
            <summary>
            Gets the executable path.
            </summary>
            <value>The executable path.</value>
        </member>
        <member name="P:Ace.UIBuilder.Server.UIForm.ExecutableFile">
            <summary>
            Gets the executable file.
            </summary>
            <value>The executable file.</value>
        </member>
        <member name="P:Ace.UIBuilder.Server.UIForm.ResourcesFile">
            <summary>
            Gets the resources file.
            </summary>
            <value>The resources file.</value>
        </member>
        <member name="P:Ace.UIBuilder.Server.UIForm.ManifestFile">
            <summary>
            Gets the manifest file.
            </summary>
            <value>The manifest file.</value>
        </member>
        <member name="P:Ace.UIBuilder.Server.UIForm.SourceCodeIdentifier">
            <summary>
            Gets or sets the identifier associated with the source code.
            </summary>
            <value>The source code identifier.</value>
        </member>
        <member name="P:Ace.UIBuilder.Server.UIForm.DesignerCode">
            <summary>
            Gets or sets the designer C# code associated with the user interface.
            </summary>
            <value>The designer code.</value>
        </member>
        <member name="M:Ace.UIBuilder.Server.UIForm.SetDesignerCode(System.String)">
            <summary>
            Sets the designer code.
            </summary>
            <param name="designerCode">The designer code.</param>
        </member>
        <member name="P:Ace.UIBuilder.Server.UIForm.CustomScript">
            <summary>
            Gets the custom script used on the server side.
            </summary>
            <value>The custom script.</value>
        </member>
        <member name="P:Ace.UIBuilder.Server.UIForm.CustomCode">
            <summary>
            Gets the custom C# code associated with the user interface.
            </summary>
            <value>The custom code.</value>
        </member>
        <member name="M:Ace.UIBuilder.Server.UIForm.SetCustomCode(System.String,System.String[])">
            <summary>
            Sets the custom code.
            </summary>
            <param name="customCode">The custom code.</param>
            <param name="protectedLines">The protected lines.</param>
        </member>
        <member name="P:Ace.UIBuilder.Server.UIForm.Resources">
            <summary>
            Gets or sets the resources data associated with the user interface.
            </summary>
            <value>The resources data.</value>
        </member>
        <member name="P:Ace.UIBuilder.Server.UIForm.ResourcesBytes">
            <summary>
            Gets or sets the binary resources associated with the user interface.
            </summary>
            <value>The binary resources.</value>
        </member>
        <member name="M:Ace.UIBuilder.Server.UIForm.InitializeCustomScript">
            <summary>
            Initializes the custom script.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.UIForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.UIBuilder.Server.UIForm"/> class.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.UIForm.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.UIForm.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.UIForm.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.UIForm.CheckForVersionUpdate">
            <summary>
            Checks for version update.
            If the ACE version changed, we need to force a rebuild to ensure that the user interface
            will be compiled with the new assemblies. If not, it will not starts due
            to incompatible references.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.UIForm.IndicateSourceCodeHasChanged">
            <summary>
            Indicates the source code has changed.
            </summary>
        </member>
        <member name="M:Ace.UIBuilder.Server.UIForm.Root_ContentsChanged(System.Object,Ace.Core.Server.Event.ContentsChangeEventArgs)">
            <summary>
            Handles the ContentsChanged event of the Root control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.ContentsChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.UIForm.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.UIForm.RaiseOnPropertyModified(System.String)">
            <summary>
            Called when a property is modified.
            </summary>
            <param name="propertyName">Name of the modified property.</param>
        </member>
        <member name="M:Ace.UIBuilder.Server.UIForm.Dispose(System.Boolean)">
            <summary>
            Disposes of the object when it is explicitly disposed or garbage-collected.
            This removes the object from its parent directory.
            </summary>
            <param name="isDisposing">True if the object is being explicitly disposed.
            False if it is being garbage-collected.</param>
        </member>
        <member name="T:Ace.UIBuilder.EnumText">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.EnumText.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.EnumText.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.EnumText.ConditionOperatorEnum_Different">
            <summary>
              Looks up a localized string similar to !=.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.EnumText.ConditionOperatorEnum_Equal">
            <summary>
              Looks up a localized string similar to ==.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.EnumText.ConditionOperatorEnum_Greater">
            <summary>
              Looks up a localized string similar to &gt;.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.EnumText.ConditionOperatorEnum_GreaterOrEqual">
            <summary>
              Looks up a localized string similar to &gt;=.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.EnumText.ConditionOperatorEnum_Less">
            <summary>
              Looks up a localized string similar to &lt;.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.EnumText.ConditionOperatorEnum_LessOrEqual">
            <summary>
              Looks up a localized string similar to &lt;=.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.EnumText.RelationEnum_And">
            <summary>
              Looks up a localized string similar to And.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.EnumText.RelationEnum_Or">
            <summary>
              Looks up a localized string similar to Or.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Toolbox">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_IOButton_DisplayName">
            <summary>
              Looks up a localized string similar to Input/Output Button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_IOButton_ToolTip">
             <summary>
               Looks up a localized string similar to An Input/Output Button tool.
            The I/O Button tool is used to toggle a digital output or alternatively to display the state of a digital input..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_RecipeSelector_DisplayName">
            <summary>
              Looks up a localized string similar to Recipe Selection.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Ace_UIBuilder_Client_Controls_Tools_AdeptAce_RecipeSelector_ToolTip">
             <summary>
               Looks up a localized string similar to A Recipe Selection Control.
            The recipe selection control is used by operators to select, load, create and edit recipes for a recipe manager in the workspace..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_Button_DisplayName">
            <summary>
              Looks up a localized string similar to Button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_Button_ToolTip">
             <summary>
               Looks up a localized string similar to A Button tool.
            Buttons are used in an Operator Interface to execute actions.
            This tool is typically used to start the execution of a C# script..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_IOButton_DisplayName">
            <summary>
              Looks up a localized string similar to Input/Output Button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_IOButton_ToolTip">
             <summary>
               Looks up a localized string similar to An Input/Output Button tool.
            The I/O Button tool is used to toggle a digital output or alternatively to display the state of a digital input..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_ToggleButton_DisplayName">
            <summary>
              Looks up a localized string similar to Toggle Button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Ace_UIBuilder_Client_Controls_Tools_AdvancedTools_ToggleButton_ToolTip">
             <summary>
               Looks up a localized string similar to A Toggle Button tool.
            The Toggle tool is used to toggle a Boolean value or alternatively to display the state of a Boolean value.
            It can be linked to a Boolean ACE item to directly control its state or display its state..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_Button_DisplayName">
            <summary>
              Looks up a localized string similar to Button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_Button_ToolTip">
             <summary>
               Looks up a localized string similar to A Button tool.
            Buttons are used in an Operator Interface to execute actions.
            This tool is typically used to start the execution of a C# script..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_DisplayName">
            <summary>
              Looks up a localized string similar to Toggle Button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Ace_UIBuilder_Client_Controls_Tools_WindowsForms_ToggleButton_ToolTip">
             <summary>
               Looks up a localized string similar to A Toggle Button tool.
            The Toggle tool is used to toggle a Boolean value or alternatively to display the state of a Boolean value.
            It can be linked to a Boolean ACE item to directly control its state or display its state.
            The pictures used for the different states of the toggle can be changed..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.AdeptACE_TabName">
            <summary>
              Looks up a localized string similar to ACE.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.AdvancedTools_TabName">
            <summary>
              Looks up a localized string similar to Advanced Tools.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ChangePasswordButton_DisplayName">
            <summary>
              Looks up a localized string similar to Change Password Button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ChangePasswordButton_ToolTip">
             <summary>
               Looks up a localized string similar to A Change Password Button tool.
            This tool allows to change the password for the current access level..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.CheckBox_DisplayName">
            <summary>
              Looks up a localized string similar to Check Box.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.CheckBox_ToolTip">
             <summary>
               Looks up a localized string similar to A Check Box tool.
            The CheckBox is used to toggle a Boolean value or alternatively to display the state of a Boolean value.
            It can be linked to a Boolean ACE item to directly control its state or display its state..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.CloseButton_DisplayName">
            <summary>
              Looks up a localized string similar to Close Button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.CloseButton_ToolTip">
             <summary>
               Looks up a localized string similar to A Close Button tool.
            This tool allows to close the user interface it is on..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ComboBox_DisplayName">
            <summary>
              Looks up a localized string similar to Combo Box.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ComboBox_ToolTip">
             <summary>
               Looks up a localized string similar to A ComboBox tool.
            This tool is used to select a value in a drop-down list..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ConditionalLink_DisplayName">
            <summary>
              Looks up a localized string similar to Conditional Link.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ConditionalLink_ToolTip">
             <summary>
               Looks up a localized string similar to A Conditional Link component.
            A component used to set the property of a tool based on a conditional expression.
            It will contain a string corresponding to the property to set,
            a condition that will be evaluated,
            and the values of the properties according to the result
            of the condition (false or true)..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.DigitalIndicator_DisplayName">
            <summary>
              Looks up a localized string similar to Digital Indicator.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.DigitalIndicator_ToolTip">
             <summary>
               Looks up a localized string similar to A Digital Indicator tool.
            It is used to display a boolean value with a rendering similar to lights..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.EventLog_DisplayName">
            <summary>
              Looks up a localized string similar to Event Log.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.EventLog_ToolTip">
             <summary>
               Looks up a localized string similar to An Event Log tool.
            This tool allows to display the event log panel..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.EventLogDisplayButton_DisplayName">
            <summary>
              Looks up a localized string similar to Event Log Display Button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.EventLogDisplayButton_ToolTip">
             <summary>
               Looks up a localized string similar to An Event Log Display Button tool.
            This tool opens the event log window..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Gauge_DisplayName">
            <summary>
              Looks up a localized string similar to Gauge.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Gauge_ToolTip">
             <summary>
               Looks up a localized string similar to A Gauge tool.
            A tool used to indicate a numeric value by a moving a needle or a pointer on a graduated surface or face..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Graph_DisplayName">
            <summary>
              Looks up a localized string similar to Graph.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Graph_ToolTip">
             <summary>
               Looks up a localized string similar to A Graph tool.
            This tool allows to display data in graphs.
            Multiple data can be plot at the same time..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.GroupBox_DisplayName">
            <summary>
              Looks up a localized string similar to Group Box.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.GroupBox_ToolTip">
             <summary>
               Looks up a localized string similar to A Group Box tool.
            The GroupBox tool is used to assist in visual grouping of tools in the user interface.
            It comes with a nice border and an area for the name of the group..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ImageList_DisplayName">
            <summary>
              Looks up a localized string similar to Image List.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ImageList_ToolTip">
             <summary>
               Looks up a localized string similar to An Image List tool.
            This component is a container of images.
            These images will be used in other tools to change their appearance..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Label_DisplayName">
            <summary>
              Looks up a localized string similar to Label.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Label_ToolTip">
             <summary>
               Looks up a localized string similar to A Label tool.
            The Label tool is one of the simpler, but nonetheless powerful tools.
            It is used to display text..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ListBox_DisplayName">
            <summary>
              Looks up a localized string similar to List Box.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ListBox_ToolTip">
             <summary>
               Looks up a localized string similar to A List Box tool.
            This tool is used to select a value in a list..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ListView_DisplayName">
            <summary>
              Looks up a localized string similar to List View.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ListView_ToolTip">
             <summary>
               Looks up a localized string similar to A List View tool.
            This tool is used to select a value in a list using different views..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Misc_TabName">
            <summary>
              Looks up a localized string similar to Misc.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.NumericIndicator_DisplayName">
            <summary>
              Looks up a localized string similar to Numeric Indicator.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.NumericIndicator_ToolTip">
             <summary>
               Looks up a localized string similar to A Numeric Indicator tool.
            It is used to display a numeric value with a rendering similar to digital indicators..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.NumericUpDown_DisplayName">
            <summary>
              Looks up a localized string similar to Numeric Up Down.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.NumericUpDown_ToolTip">
             <summary>
               Looks up a localized string similar to A Numeric Up Down tool.
            The NumericUpDown tool is a convenient tool for numerical input.
            This is a combination of a field into which the user may type the desired value
            and up/down arrows that modify the value by a specified increment.
            The acceptable range of values and increment/decrement, as well as the number of decimal places
            displayed are all configurable.
            It can be linked to any exposed numeric ACE item to directly control its value..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Panel_DisplayName">
            <summary>
              Looks up a localized string similar to Panel.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Panel_ToolTip">
             <summary>
               Looks up a localized string similar to A Panel tool.
            The Panel tool is used to assist in visual grouping of tools in the user interface..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.PictureBox_DisplayName">
            <summary>
              Looks up a localized string similar to Picture Box.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.PictureBox_ToolTip">
             <summary>
               Looks up a localized string similar to A Picture Box tool.
            The PictureBox is another simple, but powerful tool.
            It is used to display graphics in the Operator Interface.
            Usability and understanding are greatly enhanced by the proper use of graphics.
            Note that this tool is able to display animated GIFs..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ProgressBar_DisplayName">
            <summary>
              Looks up a localized string similar to Progress Bar.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.ProgressBar_ToolTip">
             <summary>
               Looks up a localized string similar to A Progress Bar tool.
            The ProgressBar tool is used to graphically display a numerical value.
            As the name implies, a common usage is to display the percent done of a task while the task is running.
            The minimum (start of progress) and maximum (completion of progress) values are configurable.
            It can be linked to any exposed numeric ACE item to display its value in a graphical way..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.RadioButton_DisplayName">
            <summary>
              Looks up a localized string similar to Radio Button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.RadioButton_ToolTip">
             <summary>
               Looks up a localized string similar to A Radio Button tool.
            The RadioButton is used to toggle a Boolean value or alternatively to display the state of a Boolean value.
            It can be linked to a Boolean ACE item to directly control its state or display its state.
            Multiple RadioButtons can be grouped together to make them exclusive..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.RobotJogControl_DisplayName">
            <summary>
              Looks up a localized string similar to Robot Jog Control.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.RobotJogControl_ToolTip">
             <summary>
               Looks up a localized string similar to A Robot Jog Control tool.
            This tool allows to display the robot jog control panel..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.RobotJogControlDisplayButton_DisplayName">
            <summary>
              Looks up a localized string similar to Robot Jog Control Display Button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.RobotJogControlDisplayButton_ToolTip">
             <summary>
               Looks up a localized string similar to A Robot Jog Control Display Button tool.
            This tool opens the robot jog control window..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.SignInButton_DisplayName">
            <summary>
              Looks up a localized string similar to Sign In Button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.SignInButton_ToolTip">
             <summary>
               Looks up a localized string similar to A Sign In Button tool.
            This tool allows to sign in for a given access level..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.SignOutButton_DisplayName">
            <summary>
              Looks up a localized string similar to Sign Out Button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.SignOutButton_ToolTip">
             <summary>
               Looks up a localized string similar to A Sign Out Button tool.
            This tool allows to sign out for the current access level..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Slider_DisplayName">
            <summary>
              Looks up a localized string similar to Slider.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Slider_ToolTip">
             <summary>
               Looks up a localized string similar to A slider tool.
            This tool is used to change a value using a moving knob..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.SplitContainer_DisplayName">
            <summary>
              Looks up a localized string similar to Split Container.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.SplitContainer_ToolTip">
             <summary>
               Looks up a localized string similar to A Split Container tool.
            The SplitContainer separates a panel into two resizable regions into which one can place tools..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.StatusBar_DisplayName">
            <summary>
              Looks up a localized string similar to Status Bar.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.StatusBar_ToolTip">
             <summary>
               Looks up a localized string similar to A Status Bar tool.
            This tool starts a process manager..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.TabControl_DisplayName">
            <summary>
              Looks up a localized string similar to Tab Control.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.TabControl_ToolTip">
             <summary>
               Looks up a localized string similar to A Tab Control tool.
            The TabControl tool is used to help visually organize other tools in the operator interface.
            Tools can be displayed on the different tabs in the control..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.TextBox_DisplayName">
            <summary>
              Looks up a localized string similar to Text Box.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.TextBox_ToolTip">
             <summary>
               Looks up a localized string similar to A Text Box tool.
            The TextBox tool is used to display text to the operator or get text input from the operator.
            It can be linked to any exposed string ACE item to directly control its value..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Timer_DisplayName">
            <summary>
              Looks up a localized string similar to Timer.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.Timer_ToolTip">
             <summary>
               Looks up a localized string similar to A Timer tool.
            Timers are used to periodically call a C# script..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.TrackBar_DisplayName">
            <summary>
              Looks up a localized string similar to Track Bar.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.TrackBar_ToolTip">
             <summary>
               Looks up a localized string similar to A Track Bar tool.
            The TrackBar tool is typically used for numerical input from the operator.
            It can be linked to any exposed numeric ACE item to directly control its value..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.TransformEditor_DisplayName">
            <summary>
              Looks up a localized string similar to Transform Editor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.TransformEditor_ToolTip">
             <summary>
               Looks up a localized string similar to A Transform Editor tool.
            This tool allows to display and edit 3D Transform variables..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.UIFormDisplayButton_DisplayName">
            <summary>
              Looks up a localized string similar to User Interface Form Display Button.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.UIFormDisplayButton_ToolTip">
             <summary>
               Looks up a localized string similar to A User Interface Form Display Button tool.
            This tool opens another user interface..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.VisionDisplay_DisplayName">
            <summary>
              Looks up a localized string similar to Vision Display.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.VisionDisplay_ToolTip">
             <summary>
               Looks up a localized string similar to A Vision Display tool.
            Often times in an Operator Interface, the images acquired by a camera in the system are necessary to display.
            The ImageDisplay tool provides this capability.
            The Image Source property must be set to the camera whose image should be displayed in this area..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.WindowsForms_TabName">
            <summary>
              Looks up a localized string similar to Windows Forms.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.WorkspaceObjectEditor_DisplayName">
            <summary>
              Looks up a localized string similar to Workspace Object Editor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Toolbox.WorkspaceObjectEditor_ToolTip">
             <summary>
               Looks up a localized string similar to A Workspace Object Editor tool.
            Sometimes in an Operator Interface, one needs to provide a standard ACE Object Editor for the operator.
            The WorkspaceObjectEditor tool is used to provide this..
             </summary>
        </member>
        <member name="T:Ace.UIBuilder.GuiText">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Button_Accept">
            <summary>
              Looks up a localized string similar to Accept.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Button_Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Button_Toggle">
            <summary>
              Looks up a localized string similar to Toggle.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ClientConnectionEditControl_AutomaticParameters">
            <summary>
              Looks up a localized string similar to Automatic Parameters.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ClientConnectionEditControl_Connection">
            <summary>
              Looks up a localized string similar to Connection.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ClientConnectionEditControl_ManualParameters">
            <summary>
              Looks up a localized string similar to Use Custom Connection Parameters.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ClientConnectionEditControl_ServerAddress">
            <summary>
              Looks up a localized string similar to Server Address.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ClientConnectionEditControl_ServerName">
            <summary>
              Looks up a localized string similar to Server Name.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ClientConnectionEditControl_ServerPort">
            <summary>
              Looks up a localized string similar to Server Port.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.CompileAndRunDialog_Building">
            <summary>
              Looks up a localized string similar to Building the User Interface.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.CompileAndRunDialog_Preparing">
            <summary>
              Looks up a localized string similar to Preparing the Output Folder.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.CompileAndRunDialog_Starting">
            <summary>
              Looks up a localized string similar to Starting the User Interface.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.CompileAndRunDialog_Title">
            <summary>
              Looks up a localized string similar to Compilation Status.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Condition_DisplayValue">
            <summary>
              Looks up a localized string similar to (Condition).
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_Add">
            <summary>
              Looks up a localized string similar to Add.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_AllBits">
            <summary>
              Looks up a localized string similar to Default.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_BitMask">
            <summary>
              Looks up a localized string similar to Bit Mask.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_Condition_Item">
            <summary>
              Looks up a localized string similar to Condition Item.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_ConditionExpression">
            <summary>
              Looks up a localized string similar to Condition Expression.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_ConditionItems">
            <summary>
              Looks up a localized string similar to Condition Items.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_CurrentState">
            <summary>
              Looks up a localized string similar to Current State.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_CurrentValue">
            <summary>
              Looks up a localized string similar to Current Value.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_DataItem">
            <summary>
              Looks up a localized string similar to Data Item.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_Delete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_EditBitmask">
            <summary>
              Looks up a localized string similar to Edit Bit Mask.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_EditSetValue">
            <summary>
              Looks up a localized string similar to Define Values.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_ExpectedValue">
            <summary>
              Looks up a localized string similar to Specified Value.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_OK">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_Operator">
            <summary>
              Looks up a localized string similar to Operator.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_Reference">
            <summary>
              Looks up a localized string similar to Reference.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_Relation">
            <summary>
              Looks up a localized string similar to Relation.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_SelectedConditionItem">
            <summary>
              Looks up a localized string similar to Selected Condition Item.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_Title">
            <summary>
              Looks up a localized string similar to Condition Editor.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_ToolTip_Add">
            <summary>
              Looks up a localized string similar to Add Condition.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_ToolTip_Delete">
            <summary>
              Looks up a localized string similar to Delete Selected Condition.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionEditControl_Unknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.ConditionItem_Undefined">
            <summary>
              Looks up a localized string similar to Undefined.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Deploy_IconFilter">
            <summary>
              Looks up a localized string similar to Icon File (*.ico)|*.ico.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Deploy_ShortcutFilter">
            <summary>
              Looks up a localized string similar to Shortcut File (*.lnk)|*.lnk.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.EditableReadOnlyCollection_ToString">
            <summary>
              Looks up a localized string similar to {0}-item collection.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.EditBitmaskControl_Bits17To24">
            <summary>
              Looks up a localized string similar to Bits 17-24.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.EditBitmaskControl_Bits1To8">
            <summary>
              Looks up a localized string similar to Bits 1-8.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.EditBitmaskControl_Bits25To32">
            <summary>
              Looks up a localized string similar to Bits 25-32.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.EditBitmaskControl_Bits9To16">
            <summary>
              Looks up a localized string similar to Bits 9-16.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.EditBitmaskControl_Instuctions">
            <summary>
              Looks up a localized string similar to Select the bits to be used in the data item selection..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.EventAsPropertyTab_TabName">
            <summary>
              Looks up a localized string similar to Events.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.FormatStringTypeEditor_3DecimalDigit">
            <summary>
              Looks up a localized string similar to 3 Decimal Digit: {0}.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.FormatStringTypeEditor_6DecimalDigit">
            <summary>
              Looks up a localized string similar to 6 Decimal Digit: {0}.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.FormatStringTypeEditor_Percent">
            <summary>
              Looks up a localized string similar to Percent: {0}.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.FormatStringTypeEditor_Scientific">
            <summary>
              Looks up a localized string similar to Scientific: {0}.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.FormDeploy_Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.FormDeploy_Icon">
            <summary>
              Looks up a localized string similar to Icon.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.FormDeploy_Save">
            <summary>
              Looks up a localized string similar to Save....
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.FormDeploy_Title">
            <summary>
              Looks up a localized string similar to User Interface Deployment.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Gauge_SectorName">
            <summary>
              Looks up a localized string similar to Sector {0}.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.GaugeSector_ToString">
            <summary>
              Looks up a localized string similar to {0}: {1}%, {2}.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Graph_DataName">
            <summary>
              Looks up a localized string similar to Data {0}.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Graph_GraphTitle">
            <summary>
              Looks up a localized string similar to Graph.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Graph_XAxisTitle">
            <summary>
              Looks up a localized string similar to Time (seconds).
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Graph_YAxisTitle">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.InvalidName_Text">
             <summary>
               Looks up a localized string similar to The name
            &apos;{0}&apos;
            is not allowed for a tool..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.InvalidName_Title">
            <summary>
              Looks up a localized string similar to Invalid Name.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.IOLink_CtrlNotConnected">
            <summary>
              Looks up a localized string similar to Controller is not connected.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.IOLink_IllegalDigitalSignal">
            <summary>
              Looks up a localized string similar to Illegal Digital Signal: &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.IOLink_NoSignalSelected">
            <summary>
              Looks up a localized string similar to No signal is selected.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.MessageBoxError_UnauthorizedAccessException">
            <summary>
              Looks up a localized string similar to An error was reported while preparing the output folder.{0}This can happen if the user interface is already running..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.PropertyGrid_None">
            <summary>
              Looks up a localized string similar to (none).
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.PropertyLinkValueSetControl_False">
            <summary>
              Looks up a localized string similar to False.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.PropertyLinkValueSetControl_True">
            <summary>
              Looks up a localized string similar to True.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.PropertyLinkValueSetControl_ValueWhenFalse">
            <summary>
              Looks up a localized string similar to Value when False.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.PropertyLinkValueSetControl_ValueWhenSet">
            <summary>
              Looks up a localized string similar to Value when Set.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.PropertyLinkValueSetControl_ValueWhenTrue">
            <summary>
              Looks up a localized string similar to Value when True.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Toolbox_AdeptACE">
            <summary>
              Looks up a localized string similar to ACE.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Toolbox_Name">
            <summary>
              Looks up a localized string similar to Toolbox.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Toolbox_PointerDisplayName">
            <summary>
              Looks up a localized string similar to Pointer.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Toolbox_PointerToolTip">
             <summary>
               Looks up a localized string similar to A null tool.
            This tool allows to unselect a tool in the ToolBox..
             </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.Toolbox_WindowsForms">
            <summary>
              Looks up a localized string similar to Windows Forms.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIBuilder_NotLicensed">
            <summary>
              Looks up a localized string similar to The server does not have the Advanced UI license enabled..
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIBuilderForm_Text">
            <summary>
              Looks up a localized string similar to ACE.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_BringToFront">
            <summary>
              Looks up a localized string similar to Bring to Front.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_ClearLog">
            <summary>
              Looks up a localized string similar to Clear Trace Messages.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Compile">
            <summary>
              Looks up a localized string similar to Compile the User Interface.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_CompileAndRun">
            <summary>
              Looks up a localized string similar to Compile and Run the User Interface.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Copy">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Cut">
            <summary>
              Looks up a localized string similar to Cut.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_DebugGo">
            <summary>
              Looks up a localized string similar to Go.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_DebugMode">
            <summary>
              Looks up a localized string similar to Debug Mode.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_DebugStepInto">
            <summary>
              Looks up a localized string similar to Step Into.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_DebugStepOver">
            <summary>
              Looks up a localized string similar to Step Over.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Delete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Deploy">
            <summary>
              Looks up a localized string similar to Deploy the User Interface.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Design">
            <summary>
              Looks up a localized string similar to Design.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Designer">
            <summary>
              Looks up a localized string similar to Designer.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Grid">
            <summary>
              Looks up a localized string similar to Enable or Disable the Grid.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Paste">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Properties">
            <summary>
              Looks up a localized string similar to Properties.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Redo">
            <summary>
              Looks up a localized string similar to Redo.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_ReleaseMode">
            <summary>
              Looks up a localized string similar to Release Mode.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_SendToBack">
            <summary>
              Looks up a localized string similar to Send to Back.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Source">
            <summary>
              Looks up a localized string similar to Source.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Stop">
            <summary>
              Looks up a localized string similar to Stop the User Interface.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Toolbox">
            <summary>
              Looks up a localized string similar to Toolbox.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.GuiText.UIFormEditor_Undo">
            <summary>
              Looks up a localized string similar to Undo.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.Properties.Resources.logo_ico">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.PickList">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PickList.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PickList.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.PickList.UIForm">
            <summary>
              Looks up a localized string similar to Program|User Interface Form.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.ImageResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Add">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.ArrowDown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.ArrowUp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.BringToFront">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.ClearLog">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Collapsed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Compile">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.CompileAndRun">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Copy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.CSharp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Cut">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Delete">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Deploy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Events">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Execute">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Expanded">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Form">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Grid">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.InputDisabled">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.InputOff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.InputOn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.InputOnAndOff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.OutputDisabled">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.OutputOff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.OutputOn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.OutputOnAndOff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Paste">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Play">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Pointer">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Redo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Remove">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Select">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.SendToBack">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.StepInto">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.StepOut">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.StepOver">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Stop">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.ImageResources.Undo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Ace.UIBuilder.UserStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.UserStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.UserStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.UIBuilder.UserStrings.Deploy_ShortcutDescription">
            <summary>
              Looks up a localized string similar to ACE User Interface Shortcut.
            </summary>
        </member>
    </members>
</doc>
