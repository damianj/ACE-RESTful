<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ace.Core.Server</name>
    </assembly>
    <members>
        <member name="T:Ace.Core.GuiText">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AboutDialog_ACE_Licenses">
            <summary>
              Looks up a localized string similar to ACE Licenses.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AboutDialog_Assemblies">
            <summary>
              Looks up a localized string similar to Assemblies.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AboutDialog_AssemblyName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AboutDialog_AssemblyTitle">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AboutDialog_EVP_Licenses">
            <summary>
              Looks up a localized string similar to eV+ Licenses.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AboutDialog_Version">
            <summary>
              Looks up a localized string similar to Version {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AbstractSim3d_Edit">
            <summary>
              Looks up a localized string similar to Edit &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AccessPlugin_ChangePassword">
            <summary>
              Looks up a localized string similar to Change Password....
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AccessPlugin_SignIn">
            <summary>
              Looks up a localized string similar to Sign In....
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AccessPlugin_SignOut">
            <summary>
              Looks up a localized string similar to Sign Out.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Ace3DObject_DefaultVisibilityGroup_Description">
            <summary>
              Looks up a localized string similar to Main visibility control for the object.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Ace3DObject_DefaultVisibilityGroup_Name">
            <summary>
              Looks up a localized string similar to Object Visibility.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceException_InnerException">
            <summary>
              Looks up a localized string similar to Inner exception:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceException_Source">
            <summary>
              Looks up a localized string similar to Source:&apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceObject_EmptyName">
            <summary>
              Looks up a localized string similar to Name must be non-empty.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceObject_IllegalCharacter">
            <summary>
              Looks up a localized string similar to An object name must consist of ASCII characters and {0}cannot contain any of the following characters: \/:*?&quot;&lt;&gt;|.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceObjectCollection_AddingObjects">
            <summary>
              Looks up a localized string similar to Adding objects..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceObjectCollection_InitializingObject">
            <summary>
              Looks up a localized string similar to Initializing: {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceObjectCollection_ReadingObject">
            <summary>
              Looks up a localized string similar to Loading object &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceObjectCollection_SavingObject">
            <summary>
              Looks up a localized string similar to Saving object &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceObjectCollection_UnableToLoadWorkspace">
            <summary>
              Looks up a localized string similar to There were {0} objects that could not be loaded into the workspace..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceObjectCollection_ValidatingObjects">
            <summary>
              Looks up a localized string similar to Validating objects..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceObjectPropertyGrid_Description">
            <summary>
              Looks up a localized string similar to Show Description.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceObjectPropertyGrid_EditProperty">
            <summary>
              Looks up a localized string similar to Edit in New Tab.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceObjectPropertyGrid_Reset">
            <summary>
              Looks up a localized string similar to Reset Value to Default.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceObjectSelector_Edit">
            <summary>
              Looks up a localized string similar to Edit.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceObjectSelector_New">
            <summary>
              Looks up a localized string similar to New.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceObjectSelector_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceServer_CheckingForArchive">
            <summary>
              Looks up a localized string similar to Performing additional save operations.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceServer_Exiting">
            <summary>
              Looks up a localized string similar to Exiting ACE server..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceServer_Loading">
            <summary>
              Looks up a localized string similar to Loading from &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceServer_SaveTime">
            <summary>
              Looks up a localized string similar to Save time {0} ms..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceServer_Saving">
            <summary>
              Looks up a localized string similar to Saving to &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AceServer_WorkspaceCleared">
            <summary>
              Looks up a localized string similar to Workspace cleared..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AdeptACE">
            <summary>
              Looks up a localized string similar to ACE.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AutomationControlEnvironment">
            <summary>
              Looks up a localized string similar to Automation Control Environment.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.AxisAdjustmentOperation_Name">
            <summary>
              Looks up a localized string similar to Axis Adjustment.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.BooleanStateChangeEventArgs_ToString">
            <summary>
              Looks up a localized string similar to {0} State: {1}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Add">
            <summary>
              Looks up a localized string similar to Add.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Apply">
            <summary>
              Looks up a localized string similar to Apply.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Back">
            <summary>
              Looks up a localized string similar to Back.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Clear">
            <summary>
              Looks up a localized string similar to Clear.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Close">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Copy">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_CopyAll">
            <summary>
              Looks up a localized string similar to Copy All.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_CopyCurrentTab">
            <summary>
              Looks up a localized string similar to Copy Page.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Delete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Edit">
            <summary>
              Looks up a localized string similar to Edit.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_OK">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Paste">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Pause">
            <summary>
              Looks up a localized string similar to Pause.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Refresh">
            <summary>
              Looks up a localized string similar to Refresh.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Remove">
            <summary>
              Looks up a localized string similar to Remove.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Reset">
            <summary>
              Looks up a localized string similar to Reset.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Resume">
            <summary>
              Looks up a localized string similar to Resume.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Select">
            <summary>
              Looks up a localized string similar to Select.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Button_Start">
            <summary>
              Looks up a localized string similar to Start.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadData3d_Mount">
            <summary>
              Looks up a localized string similar to Mount To.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadDataCreationSequencer_ConnectionPage_Description">
            <summary>
              Looks up a localized string similar to Select the connections to objects in the workspace.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadDataCreationSequencer_ConnectionPage_Title">
            <summary>
              Looks up a localized string similar to Connections.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadDataCreationSequencer_ImportPage_Description">
            <summary>
              Looks up a localized string similar to Import the selected CAD file.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadDataCreationSequencer_ImportPage_Instructions">
            <summary>
              Looks up a localized string similar to Select the file which should be imported..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadDataCreationSequencer_ImportPage_Title">
            <summary>
              Looks up a localized string similar to Import File.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadDataCreationSequencer_LibraryPage_Description">
            <summary>
              Looks up a localized string similar to Select a CAD file from the CAD library.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadDataCreationSequencer_LibraryPage_Title">
            <summary>
              Looks up a localized string similar to CAD Library.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadDataCreationSequencer_SourcePage_Description">
            <summary>
              Looks up a localized string similar to Select the source of the CAD data.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadDataCreationSequencer_SourcePage_Instructions">
            <summary>
              Looks up a localized string similar to Identify where the CAD file is located. .
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadDataCreationSequencer_SourcePage_SelectCadFile">
            <summary>
              Looks up a localized string similar to Open my own CAD file.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadDataCreationSequencer_SourcePage_SelectCadLibrary">
            <summary>
              Looks up a localized string similar to ACE CAD Library.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadDataCreationSequencer_SourcePage_Title">
            <summary>
              Looks up a localized string similar to Select Source.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadFileImportPage_WindowsXP_UnsupportedFile">
            <summary>
              Looks up a localized string similar to The selected file is not supported under Windows XP.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadFileImportPage_WindowsXP_UnsupportedFile_Caption">
            <summary>
              Looks up a localized string similar to Unsupported File.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadFileTypeEditor_FileFilter">
            <summary>
              Looks up a localized string similar to STEP File (*.stp;*.step)|*.stp;*.step|IGES File (*.igs;*.iges)|*.igs;*.iges|StereoLithography File (*.stl)|*.stl|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadFileTypeEditor_FileFilter_XP">
            <summary>
              Looks up a localized string similar to StereoLithography File (*.stl)|*.stl|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadLibraryConnectionPage_Connections">
            <summary>
              Looks up a localized string similar to Connections.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadLibraryConnectionPage_LinksWith">
            <summary>
              Looks up a localized string similar to Other objects in the workspace can be mounted onto the &apos;{0}&apos; at the &apos;{1}&apos; location.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadLibraryConnectionPage_MountsTo">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; can mount to another object in the workspace on the &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadLibraryConnectionPage_SelectConnection">
            <summary>
              Looks up a localized string similar to Select a Connection.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadLibraryConnectionPage_Selection">
            <summary>
              Looks up a localized string similar to Selection.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadLibrarySelectionPage_Category">
            <summary>
              Looks up a localized string similar to Category:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadLibrarySelectionPage_Description">
            <summary>
              Looks up a localized string similar to Description:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadLibrarySelectionPage_DisplayName">
            <summary>
              Looks up a localized string similar to Display Name:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CadLibrarySelectionPage_FileName">
            <summary>
              Looks up a localized string similar to File Name:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ChangePasswordForm_NewPassword">
            <summary>
              Looks up a localized string similar to New Password.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ChangePasswordForm_OldPassword">
            <summary>
              Looks up a localized string similar to Old Password.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ChangePasswordForm_PasswordError">
            <summary>
              Looks up a localized string similar to Passwords don&apos;t match.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ChangePasswordForm_Title">
            <summary>
              Looks up a localized string similar to Change Password.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ChangePasswordForm_UserName">
            <summary>
              Looks up a localized string similar to User Name.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ChangePasswordForm_VerifyPassword">
            <summary>
              Looks up a localized string similar to Verify New Password.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ContentsChangeEventArgs_Add_ToString">
            <summary>
              Looks up a localized string similar to Added {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ContentsChangeEventArgs_Remove_ToString">
            <summary>
              Looks up a localized string similar to Removed {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ControlPanelAttribute_RobotJogControl">
            <summary>
              Looks up a localized string similar to Robot Jog Control.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Copyright_Message">
            <summary>
              Looks up a localized string similar to Copyright © 2006-2017 Omron Adept Technologies, Inc..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CreateCadFileWizardShim_ImportCadFile">
            <summary>
              Looks up a localized string similar to Import CAD File.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_AddReference">
            <summary>
              Looks up a localized string similar to Add Reference.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_AddToBrowseWindow">
            <summary>
              Looks up a localized string similar to Add To Browse Window.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_AddVariableToBrowseWindow">
            <summary>
              Looks up a localized string similar to Add &apos;{0}&apos; To Browse Window.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_BrowseNameColumn">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_BrowseValueColumn">
            <summary>
              Looks up a localized string similar to Value.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_BrowseVariables">
            <summary>
              Looks up a localized string similar to Browse Variables.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_ClearTraceMessages">
            <summary>
              Looks up a localized string similar to Clear Trace Messages.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_CollapseAllRegions">
            <summary>
              Looks up a localized string similar to Collapse All Regions.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_Comment">
            <summary>
              Looks up a localized string similar to Comment.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_Compile">
            <summary>
              Looks up a localized string similar to Compile.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_CompileAndRun">
            <summary>
              Looks up a localized string similar to Compile And Run.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_Copy">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_Cut">
            <summary>
              Looks up a localized string similar to Cut.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_DebugMode">
            <summary>
              Looks up a localized string similar to Debug Mode.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_Delete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_Errors">
            <summary>
              Looks up a localized string similar to Errors.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_ExpandAllRegions">
            <summary>
              Looks up a localized string similar to Expand All Regions.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_Paste">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_Redo">
            <summary>
              Looks up a localized string similar to Redo.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_ReleaseMode">
            <summary>
              Looks up a localized string similar to Release Mode.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_SelectAll">
            <summary>
              Looks up a localized string similar to Select All.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_SetCurrentLocation">
            <summary>
              Looks up a localized string similar to Set Current Location.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_Stop">
            <summary>
              Looks up a localized string similar to Stop.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_TraceMessages">
            <summary>
              Looks up a localized string similar to Trace Messages.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_Uncomment">
            <summary>
              Looks up a localized string similar to Uncomment.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgram_Undo">
            <summary>
              Looks up a localized string similar to Undo.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgramDataItem_DisplayDescription">
            <summary>
              Looks up a localized string similar to Run status of the C# program.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgramDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to Run Status.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgramEditor_Go">
            <summary>
              Looks up a localized string similar to Go (F5).
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgramEditor_StepInto">
            <summary>
              Looks up a localized string similar to Step Into (F11).
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgramEditor_StepOver">
            <summary>
              Looks up a localized string similar to Step Over (F10).
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgramTaskUIControl_CurrentLine">
            <summary>
              Looks up a localized string similar to Current Line: {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgramTaskUIControl_DebugMode">
            <summary>
              Looks up a localized string similar to Mode: Debug.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgramTaskUIControl_Proceed">
            <summary>
              Looks up a localized string similar to Proceed.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgramTaskUIControl_ReleaseMode">
            <summary>
              Looks up a localized string similar to Mode: Release Mode.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpProgramTaskUIControl_TraceMessages">
            <summary>
              Looks up a localized string similar to Trace Messages.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpScriptEditor_ColumnColumnNumber_HeaderText">
            <summary>
              Looks up a localized string similar to Col.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpScriptEditor_ColumnLines_HeaderText">
            <summary>
              Looks up a localized string similar to Lines.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.CSharpScriptEditor_ColumnMessage_HeaderText">
            <summary>
              Looks up a localized string similar to Message.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataItemSelectionDialog_Title">
            <summary>
              Looks up a localized string similar to Data Item Selection.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapEditor_DataItem">
            <summary>
              Looks up a localized string similar to Data Item.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapEditor_InputValue">
            <summary>
              Looks up a localized string similar to Input Value.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapEditor_Inverted">
            <summary>
              Looks up a localized string similar to Inverted.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapEditor_Off">
            <summary>
              Looks up a localized string similar to Off.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapEditor_On">
            <summary>
              Looks up a localized string similar to On.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapEditor_Target">
            <summary>
              Looks up a localized string similar to Target.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapperEditor_Conditional">
            <summary>
              Looks up a localized string similar to Evaluate as Conditional.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapperEditor_EditMap">
            <summary>
              Looks up a localized string similar to Edit Data Map.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapperEditor_Input">
            <summary>
              Looks up a localized string similar to Input.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapperEditor_InputSource">
            <summary>
              Looks up a localized string similar to Input Source:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapperEditor_Not">
            <summary>
              Looks up a localized string similar to NOT.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapperEditor_NotDefined">
            <summary>
              Looks up a localized string similar to Not Defined.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapperEditor_Output">
            <summary>
              Looks up a localized string similar to Output.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapperEditor_OutputSource">
            <summary>
              Looks up a localized string similar to Output Source.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DataMapperEditor_Value">
            <summary>
              Looks up a localized string similar to Evaluate as Value.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DefaultObjectEditor_Configure">
            <summary>
              Looks up a localized string similar to Configure.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DefaultObjectEditor_Control">
            <summary>
              Looks up a localized string similar to Control.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DefaultObjectEditor_File_Close">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DefaultObjectEditor_Help">
            <summary>
              Looks up a localized string similar to Help on &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DefaultObjectEditor_Object">
            <summary>
              Looks up a localized string similar to Object.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DefaultObjectEditor_View">
            <summary>
              Looks up a localized string similar to View.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DefaultObjectEditor_View_RefreshEditor">
            <summary>
              Looks up a localized string similar to Refresh Editor.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DefaultWorkspaceExtension">
            <summary>
              Looks up a localized string similar to awp.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtility">
            <summary>
              Looks up a localized string similar to System Monitor.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtility_ButtonCancel_Text">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtility_ButtonOK_Text">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtility_CheckBoxLoggingEnabled_Text">
            <summary>
              Looks up a localized string similar to Logging Enabled.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtility_GroupBoxColumns_Text">
            <summary>
              Looks up a localized string similar to Columns.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtility_GroupBoxGraphDuration_Text">
            <summary>
              Looks up a localized string similar to Graph Duration.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtility_GroupBoxLog_Text">
            <summary>
              Looks up a localized string similar to Log.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtility_GroupBoxRefreshPeriod_Text">
            <summary>
              Looks up a localized string similar to Refresh Period.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtility_LabelLogFolder_Text">
            <summary>
              Looks up a localized string similar to Log Folder.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtility_LoggingInProgress">
             <summary>
               Looks up a localized string similar to Logging is in progress and will be stopped
            once the System Monitor will be closed.
            
            Are you sure you want to close the System Monitor?.
             </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtility_MenuItemOptions">
            <summary>
              Looks up a localized string similar to Options....
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtility_NotAvailable">
            <summary>
              Looks up a localized string similar to N/A.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtility_OptionsWindow_Title">
            <summary>
              Looks up a localized string similar to Options.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtility_SelectColumnsWindow_Title">
            <summary>
              Looks up a localized string similar to Select Columns.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtilityWindow_LoggingDisabled">
            <summary>
              Looks up a localized string similar to Logging: Disabled.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DiagnosticUtilityWindow_LoggingEnabled">
            <summary>
              Looks up a localized string similar to Logging: Enabled.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Dialog_AreYouSure">
            <summary>
              Looks up a localized string similar to Are You Sure?.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Dialog_ZipFileType">
            <summary>
              Looks up a localized string similar to ACE Workspace Project (*.awp)|*.awp|Zip files (*.zip)|*.zip|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DockingManager_HideAll">
            <summary>
              Looks up a localized string similar to Hide All.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.DockingManager_ShowAll">
            <summary>
              Looks up a localized string similar to Show All.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.EditableReadOnlyCollection_ToString">
            <summary>
              Looks up a localized string similar to {0}-item collection.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ErrorDisplayControl_ErrorCode">
            <summary>
              Looks up a localized string similar to Error Code.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ErrorDisplayControl_GeneralSystemError">
            <summary>
              Looks up a localized string similar to General System Error.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ErrorDisplayControl_MoreDetails">
            <summary>
              Looks up a localized string similar to More Details.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ErrorDisplayControl_Source">
            <summary>
              Looks up a localized string similar to Source.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Exception_ProgramAlreadyRunning">
            <summary>
              Looks up a localized string similar to Program Already Running.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Exception_RecipeManager_ConstructorError">
            <summary>
              Looks up a localized string similar to Unable to create Recipe Manager script.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ExceptionDialog_ExceptionDetails">
            <summary>
              Looks up a localized string similar to Exception Details.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ExceptionDialog_Title">
            <summary>
              Looks up a localized string similar to An Error Was Detected.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ExchangerFileImporter_UnableToActivateLicense">
            <summary>
              Looks up a localized string similar to Unable to activate the CAD license.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ExchangerFileImporter_UnableToComputeMesh">
            <summary>
              Looks up a localized string similar to Unable to compute the mesh.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ExchangerFileImporter_UnableToReadFile">
            <summary>
              Looks up a localized string similar to Unable to read the input file or invalid format.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ExchangerFileImporter_UnableToTransferModel">
            <summary>
              Looks up a localized string similar to Unable to transfer the model features.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ExchangerFileImporter_UnknownError">
            <summary>
              Looks up a localized string similar to Unknown error code: {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ExposableDataItem_Category">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.FindContrl_FindResults_OutOfSyncCaption">
            <summary>
              Looks up a localized string similar to Find/Replace.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.FindControl_ColumnLine">
            <summary>
              Looks up a localized string similar to Line.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.FindControl_Details">
            <summary>
              Looks up a localized string similar to Details.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.FindControl_Find">
            <summary>
              Looks up a localized string similar to Find.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.FindControl_FindResults_OutOfSync">
            <summary>
              Looks up a localized string similar to The find/replace operation was unable to replace all results. The results may not have been in sync with the objects in the workspace..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.FindControl_MatchCase">
            <summary>
              Looks up a localized string similar to Match Case.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.FindControl_Replace">
            <summary>
              Looks up a localized string similar to Replace.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.FindControl_ReplaceAll">
            <summary>
              Looks up a localized string similar to Replace All.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.FindControl_ReplaceSelected">
            <summary>
              Looks up a localized string similar to Replace Selected.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.FindControl_SearchCriteria">
            <summary>
              Looks up a localized string similar to Search Criteria.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.FindControl_SearchMode_AllContent">
            <summary>
              Looks up a localized string similar to All Content.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.FindControl_SearchMode_AllOpenEditors">
            <summary>
              Looks up a localized string similar to All Open Editors.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.FindControl_SearchMode_CurrentEditor">
            <summary>
              Looks up a localized string similar to Current Editor.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.FindControl_SearchMode_EntireWorkspace">
            <summary>
              Looks up a localized string similar to Entire Workspace.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.GraphicalDataGridView_ContextMenuResetAllCurrentValue">
            <summary>
              Looks up a localized string similar to Reset All Current Values.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.GraphicalDataGridView_ContextMenuResetCurrentValue">
            <summary>
              Looks up a localized string similar to Reset Current Value.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.GraphicalDataGridView_ContextMenuResetWorstStatus">
            <summary>
              Looks up a localized string similar to Reset Worst Status.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.GraphicalDataGridView_ContextMenuSelectColumns">
            <summary>
              Looks up a localized string similar to Select Columns....
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.GuiUtil_FBWF_Enabled">
            <summary>
              Looks up a localized string similar to The File Based Write Filer is enabled on the selected file system volume: &apos;{1}&apos;. {0}The file cannot be saved to this location..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.GuiUtil_FBWF_Enabled_Caption">
            <summary>
              Looks up a localized string similar to FBWF Detected.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.GuiUtil_File_ReadOnly">
            <summary>
              Looks up a localized string similar to {1}{0}This file is set to read-only.{0}Select a different file name. .
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.GuiUtil_File_ReadOnly_Caption">
            <summary>
              Looks up a localized string similar to Save.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.GuiUtil_InsufficientAccess">
            <summary>
              Looks up a localized string similar to You do not have sufficient user privileges to access this feature.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.GuiUtil_PluginInstallFailure">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; Plugin Install Failed.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.GuiUtil_SaveWorkspace">
            <summary>
              Looks up a localized string similar to Saving Workspace.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Help">
            <summary>
              Looks up a localized string similar to Help.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.LogDisplayControl_Errors">
            <summary>
              Looks up a localized string similar to Errors.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.LogDisplayControl_HideEntries">
            <summary>
              Looks up a localized string similar to Hide Entries.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.LogDisplayControl_Information">
            <summary>
              Looks up a localized string similar to Information.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.LogDisplayControl_Message">
            <summary>
              Looks up a localized string similar to Message.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.LogDisplayControl_NoDetails_Caption">
            <summary>
              Looks up a localized string similar to No Additional Details.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.LogDisplayControl_NoDetails_Message">
            <summary>
              Looks up a localized string similar to There are no additional details for this event..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.LogDisplayControl_TimeStamp">
            <summary>
              Looks up a localized string similar to Time Stamp.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.LogDisplayControl_Type">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.LogDisplayControl_Warnings">
            <summary>
              Looks up a localized string similar to Warnings.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_DiagnosticUtility">
            <summary>
              Looks up a localized string similar to System Monitor.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_EmulationMode">
            <summary>
              Looks up a localized string similar to [Emulation Mode].
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_File">
            <summary>
              Looks up a localized string similar to File.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_File_Exit">
            <summary>
              Looks up a localized string similar to Exit.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_File_Save">
            <summary>
              Looks up a localized string similar to Save.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_File_SaveAs">
            <summary>
              Looks up a localized string similar to Save As....
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Find">
            <summary>
              Looks up a localized string similar to Find.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Help">
            <summary>
              Looks up a localized string similar to Help.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Help_About">
            <summary>
              Looks up a localized string similar to About....
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Help_About_Ace">
            <summary>
              Looks up a localized string similar to About ACE.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Help_ACE_Guides">
            <summary>
              Looks up a localized string similar to ACE Guides.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Help_Api_Reference">
            <summary>
              Looks up a localized string similar to ACE Reference Guide.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Help_DiagnosticSummary">
            <summary>
              Looks up a localized string similar to Diagnostic Summary.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Help_EventLog">
            <summary>
              Looks up a localized string similar to Event Log.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Help_ReadMe">
            <summary>
              Looks up a localized string similar to ReadMe File.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Help_User_Guide">
            <summary>
              Looks up a localized string similar to ACE User&apos;s Guide.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Help_VPlus_Language_Reference">
            <summary>
              Looks up a localized string similar to eV+ Language Reference Guide.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Help_VPlus_OS_Reference">
            <summary>
              Looks up a localized string similar to eV+ OS Reference Guide.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Help_VPlus_Reference">
            <summary>
              Looks up a localized string similar to eV+ Guides.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_LicenseExpired">
            <summary>
              Looks up a localized string similar to The emulation mode vision licenses have expired. You must restart ACE to re-enable the vision licenses..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_LicenseExpired_Caption">
            <summary>
              Looks up a localized string similar to License Expiration.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_OlderWorkspace">
            <summary>
              Looks up a localized string similar to (Old Version).
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_OpcEdit">
            <summary>
              Looks up a localized string similar to Edit OPC .
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_SaveBeforeExit_Text">
            <summary>
              Looks up a localized string similar to Do you want to save the active workspace before exiting?.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_SaveBeforeExit_Title">
            <summary>
              Looks up a localized string similar to Save Before Exit?.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Title">
            <summary>
              Looks up a localized string similar to ACE.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Title_File">
            <summary>
              Looks up a localized string similar to File.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Toolbars">
            <summary>
              Looks up a localized string similar to Toolbars.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Tools">
            <summary>
              Looks up a localized string similar to Tools.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_Tools_Options">
            <summary>
              Looks up a localized string similar to Options....
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_ToolStrip_DiagnosticUtility">
            <summary>
              Looks up a localized string similar to Open the System Monitor.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_ToolStrip_Find">
            <summary>
              Looks up a localized string similar to Find in Workspace.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_ToolStrip_Main">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_ToolStrip_Save">
            <summary>
              Looks up a localized string similar to Save the workspace to the default workspace file..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_ToolStrip_WorkspaceExplorer">
            <summary>
              Looks up a localized string similar to Open Workspace Explorer.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_View">
            <summary>
              Looks up a localized string similar to View.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.MainAceControl_WorkspaceExplorer">
            <summary>
              Looks up a localized string similar to Workspace Explorer.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.NewObjectPickList_Name">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.NewObjectPickList_Summary">
            <summary>
              Looks up a localized string similar to Summary.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.NewObjectPickList_Title">
            <summary>
              Looks up a localized string similar to Create a New Object.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.NewObjectPickList_TreeText">
            <summary>
              Looks up a localized string similar to Select an Object to Create.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTree_AreYouSureDelete">
            <summary>
              Looks up a localized string similar to Are you sure you want to delete &apos;{0}&apos;?.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTree_Button_Delete">
            <summary>
              Looks up a localized string similar to &amp;Delete.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTree_Button_Links">
            <summary>
              Looks up a localized string similar to Links to Other Objects.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTree_Button_LoadFromFile">
            <summary>
              Looks up a localized string similar to Import Workspace File.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTree_Button_New">
            <summary>
              Looks up a localized string similar to &amp;New.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTree_Button_NewFolder">
            <summary>
              Looks up a localized string similar to New &amp;Folder.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTree_Button_Rename">
            <summary>
              Looks up a localized string similar to &amp;Rename.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTree_Button_SaveToFile">
            <summary>
              Looks up a localized string similar to Save To Workspace File.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTree_LargeNumberOfObjects">
            <summary>
              Looks up a localized string similar to There are {0} items to display. {1}{1}It may take a large amount of time to display. {1}{1}Do you wish to continue?.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTree_LargeNumberOfObjects_Caption">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTree_LoadingFile">
            <summary>
              Looks up a localized string similar to Loading File: {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTree_NewFolderName">
            <summary>
              Looks up a localized string similar to New Folder.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTree_ObjectReferencedBy">
            <summary>
              Looks up a localized string similar to The object is referenced by the following objects in the workspace:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTreeManager_FindInVisualization">
            <summary>
              Looks up a localized string similar to Focus in 3D Visualization.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTreeManager_HideObject">
            <summary>
              Looks up a localized string similar to Hide in 3D Visualization.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ObjectTreeManager_ShowObject">
            <summary>
              Looks up a localized string similar to Show in 3D Visualization.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.OpcConfiguration_ConnectionOk">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.OpcConfiguration_NoConnections">
            <summary>
              Looks up a localized string similar to No Connections.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.OpcConfiguration_PingError">
            <summary>
              Looks up a localized string similar to Ping Failure.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.OPCEditControl_OpcEnabled">
            <summary>
              Looks up a localized string similar to OPC Connection Enabled.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.OPCEditControl_UpdateRate">
            <summary>
              Looks up a localized string similar to Update Rate.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.OPCEditControl_UpdateRateUnits">
            <summary>
              Looks up a localized string similar to ms.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.OPCEditWorksheetController_Description">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.OPCEditWorksheetController_DuplicateTagName">
            <summary>
              Looks up a localized string similar to The tag name duplicates another tag already associated with the object.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.OPCEditWorksheetController_Exposed">
            <summary>
              Looks up a localized string similar to Exposed.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.OPCEditWorksheetController_ReadOnly">
            <summary>
              Looks up a localized string similar to Read-Only.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.OPCEditWorksheetController_TagName">
            <summary>
              Looks up a localized string similar to Tag Name.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.OPCEditWorksheetController_TagNameCannotBeEmpty">
            <summary>
              Looks up a localized string similar to The tag name cannot be empty.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.OpenEditorOperation_Edit">
            <summary>
              Looks up a localized string similar to Edit.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.OptionsDialog_Title">
            <summary>
              Looks up a localized string similar to Edit Options.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.PCLicenseEnabled_No">
            <summary>
              Looks up a localized string similar to No.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.PCLicenseEnabled_Yes">
            <summary>
              Looks up a localized string similar to Yes.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ProgramStackHeader">
            <summary>
              Looks up a localized string similar to V+ Program Stack for task {0}:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ProgramStackStep">
            <summary>
              Looks up a localized string similar to {0}, Step {1}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ProgressDialog_Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.PropertyGrid_None">
            <summary>
              Looks up a localized string similar to (none).
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.PropertyGridUIService_CannotChangeProperty">
            <summary>
              Looks up a localized string similar to An error occured when changing the property..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.PropertyMapEditor_CurrentValue">
            <summary>
              Looks up a localized string similar to Current Value.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.PropertyMapEditor_CurrentValue_Null">
            <summary>
              Looks up a localized string similar to null.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.PropertyMapEditor_Description">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.PropertyMapEditor_ExpectedType">
            <summary>
              Looks up a localized string similar to Expected Type.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.PropertyMapEditor_Index">
            <summary>
              Looks up a localized string similar to Index.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.PropertyMapEditor_PropertyName">
            <summary>
              Looks up a localized string similar to Property Name.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.PropertyMapEditor_Title">
            <summary>
              Looks up a localized string similar to Property Map.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeConfigurationBaseControl_ConfigurationName">
            <summary>
              Looks up a localized string similar to Configuration Name:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeConfigurationBaseControl_TeachAccess">
            <summary>
              Looks up a localized string similar to Teach Access:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeEditor_ChangesNotApplied">
            <summary>
              Looks up a localized string similar to There are changes that have not been applied. They will be lost if you continue. Would you like to close the editor?.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeEditor_ChangesNotApplied_Caption">
            <summary>
              Looks up a localized string similar to Changes Not Applied.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeEditor_CreationTime">
            <summary>
              Looks up a localized string similar to Creation Time:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeEditor_Description">
            <summary>
              Looks up a localized string similar to Description:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeEditor_DuplicateCustomIdentifier">
            <summary>
              Looks up a localized string similar to The selected identifier is used by another recipe. Are you sure you want to accept the changes?.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeEditor_DuplicateCustomIdentifier_Caption">
            <summary>
              Looks up a localized string similar to Duplicate Identifier.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeEditor_General">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeEditor_Image">
            <summary>
              Looks up a localized string similar to Image:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeEditor_Index">
            <summary>
              Looks up a localized string similar to Index:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeEditor_ModifiedTime">
            <summary>
              Looks up a localized string similar to Modified Time:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeEditor_Name">
            <summary>
              Looks up a localized string similar to Recipe Name:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeEditor_PictureDialogFilter">
            <summary>
              Looks up a localized string similar to Image Files (*.bmp, *.gif, *.jpg, *.jpeg, *.png, *.tiff)|*.bmp;*.gif;*.jpg;*.jpeg;*.png;*.tiff|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeEditor_UseCustomIndex">
            <summary>
              Looks up a localized string similar to Use Custom Index:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeManager_RecipeName">
            <summary>
              Looks up a localized string similar to Recipe {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeManagerEditor_AdeptSightIndex">
            <summary>
              Looks up a localized string similar to ACE Sight Index:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeManagerEditor_Configuration">
            <summary>
              Looks up a localized string similar to Configuration.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeManagerEditor_Script">
            <summary>
              Looks up a localized string similar to Script.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeManagerEditor_SelectSource">
            <summary>
              Looks up a localized string similar to Select a Source of Recipe Data.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeManagerEditor_Sources">
            <summary>
              Looks up a localized string similar to Sources.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_AlreadyActive">
            <summary>
              Looks up a localized string similar to A recipe is already being  operated on: {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_AlreadyActive_Title">
            <summary>
              Looks up a localized string similar to Recipe Operation.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_AvailableRecipes">
            <summary>
              Looks up a localized string similar to Available Recipes.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_Delete_AreYouSure">
            <summary>
              Looks up a localized string similar to Are you sure you want to delete &apos;{0}&apos;?.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_Delete_AreYouSure_Caption">
            <summary>
              Looks up a localized string similar to Are you sure?.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_DuplicateCustomIdentifier">
            <summary>
              Looks up a localized string similar to The new recipe shares the same custom identifier with an existing recipe. Please change the custom identifier of the loaded recipe..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_EditRecipe">
            <summary>
              Looks up a localized string similar to Recipe Editor.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_InvalidOperation">
            <summary>
              Looks up a localized string similar to Operation has failed.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_InvalidRecipeFile">
            <summary>
              Looks up a localized string similar to The file does not appear to be a valid recipe file..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_InvalidRecipeFile_Caption">
            <summary>
              Looks up a localized string similar to Invalid Recipe File.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_NoRecipeSelected">
            <summary>
              Looks up a localized string similar to No Recipe Selected.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_SaveFilter">
            <summary>
              Looks up a localized string similar to Recipe files (*.recipe)|*.recipe|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_SelectedRecipe">
            <summary>
              Looks up a localized string similar to Selected Recipe: {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_SelectedRecipes">
            <summary>
              Looks up a localized string similar to Selected Recipe.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_ToolTip_Add">
            <summary>
              Looks up a localized string similar to Add New Recipe.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_ToolTip_Copy">
            <summary>
              Looks up a localized string similar to Copy Recipe.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_ToolTip_Delete">
            <summary>
              Looks up a localized string similar to Delete Recipe.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_ToolTip_Edit">
            <summary>
              Looks up a localized string similar to Edit Recipe.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_ToolTip_LoadRecipe">
            <summary>
              Looks up a localized string similar to Load Recipe.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_ToolTip_SaveRecipe">
            <summary>
              Looks up a localized string similar to Save Recipe.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_ToolTip_Select">
            <summary>
              Looks up a localized string similar to Select Recipe.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSelectionControl_ToolTip_Unselect">
            <summary>
              Looks up a localized string similar to Unselect Recipe.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RecipeSourceOrderForm_Text">
            <summary>
              Looks up a localized string similar to Source Order.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ReferenceTreeControl_IncomingReferences">
            <summary>
              Looks up a localized string similar to Incoming Links.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ReferenceTreeControl_Instructions">
            <summary>
              Looks up a localized string similar to The list below shows all objects with links to &apos;{0}&apos;. You can double-click any item to edit it..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.ReferenceTreeControl_OutgoingReferences">
            <summary>
              Looks up a localized string similar to Outgoing Links.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RtfCertificate_ContentCannotBeNull">
            <summary>
              Looks up a localized string similar to Content cannot be null..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RtfCertificate_FailedToReadContent">
            <summary>
              Looks up a localized string similar to Failed to read content from certificate template - {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RtfCertificate_FailedToUpdateExpectedFields">
            <summary>
              Looks up a localized string similar to Failed to update expected fields - {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RtfCertificate_FieldValueCannotBeNull">
            <summary>
              Looks up a localized string similar to Field value cannot be null..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.RtfCertificate_InvalidCertificateTemplatePath">
            <summary>
              Looks up a localized string similar to Invalid path for certificate template - {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SceneGraph_Heirarchy">
            <summary>
              Looks up a localized string similar to Hierarchy.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SceneGraph_Workspace">
            <summary>
              Looks up a localized string similar to Workspace.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SelectAceObjectReferencePage_Selector_Title">
            <summary>
              Looks up a localized string similar to Select the object that you wish to use: {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SelectDataWorksheetController_Description">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SelectEndEffectorTipPage_SelectedObject">
            <summary>
              Looks up a localized string similar to Selected Object.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SelectEndEffectorTipUserControl_TipItem">
            <summary>
              Looks up a localized string similar to Tip {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SelectEndEffectorTipUserControl_TipOffsetGroupBox">
            <summary>
              Looks up a localized string similar to End Effector Tip Offset.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Sequencer_WizardCancelMessage">
            <summary>
              Looks up a localized string similar to Are you sure you want to cancel the wizard sequence?.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SequenceStepDisplayControl_SequenceSteps">
            <summary>
              Looks up a localized string similar to Wizard Steps.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Shell_Button_Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Shell_Button_Finish">
            <summary>
              Looks up a localized string similar to Finish.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Shell_Button_Help">
            <summary>
              Looks up a localized string similar to Help.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Shell_Button_Next">
            <summary>
              Looks up a localized string similar to Next.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Shell_Button_Previous">
            <summary>
              Looks up a localized string similar to Back.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Shell_Cancel_Caption">
            <summary>
              Looks up a localized string similar to Wizard Cancel.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Shell_Cancel_Save">
            <summary>
              Looks up a localized string similar to Do you want to save the changes?.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SignInControl_Password">
            <summary>
              Looks up a localized string similar to Password.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SignInControl_Title">
            <summary>
              Looks up a localized string similar to Sign In.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SignInControl_UserName">
            <summary>
              Looks up a localized string similar to User Name.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DControl_ChangeViewport">
            <summary>
              Looks up a localized string similar to Change Viewport.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DControl_PresetViewBack">
             <summary>
               Looks up a localized string similar to Back
            (CTRL-2).
             </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DControl_PresetViewBottom">
             <summary>
               Looks up a localized string similar to Bottom
            (CTRL-4).
             </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DControl_PresetViewFront">
             <summary>
               Looks up a localized string similar to Front
            (CTRL-1).
             </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DControl_PresetViewIsometric">
             <summary>
               Looks up a localized string similar to Isometric
            (CTRL-7).
             </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DControl_PresetViewLeftSide">
             <summary>
               Looks up a localized string similar to Left Side
            (CTRL-5).
             </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DControl_PresetViewRightSide">
             <summary>
               Looks up a localized string similar to Right Side
            (CTRL-6).
             </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DControl_PresetViewTop">
             <summary>
               Looks up a localized string similar to Top
            (CTRL-3).
             </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DControl_Rotate">
             <summary>
               Looks up a localized string similar to Rotate
            (SHIFT).
             </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DControl_SceneGraph">
            <summary>
              Looks up a localized string similar to Scene Graph.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DControl_Selection">
            <summary>
              Looks up a localized string similar to Selection.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DControl_Translate">
             <summary>
               Looks up a localized string similar to Translate
            (ALT).
             </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DControl_Zoom">
            <summary>
              Looks up a localized string similar to Zoom.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DPlugin_3DSimulation">
            <summary>
              Looks up a localized string similar to 3D Visualization.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Simulation3DPlugin_3DSimulationDisabled">
            <summary>
              Looks up a localized string similar to 3D Visualization Not Available. Graphics card acceleration not available or enabled..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SystemStartupEditor_CheckBoxEnabled_Text">
            <summary>
              Looks up a localized string similar to Enable Startup Object.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SystemStartupEditor_DataGridView_ColumnEnabled_HeaderText">
            <summary>
              Looks up a localized string similar to Enabled.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SystemStartupEditor_DataGridView_ColumnEnabled_ToolTipText">
            <summary>
              Looks up a localized string similar to Enable/Disable the Startup Source.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SystemStartupEditor_DataGridView_ColumnSource_HeaderText">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SystemStartupEditor_DataGridView_ColumnSource_ToolTipText">
            <summary>
              Looks up a localized string similar to Name of the Startup Source.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.SystemStartupSourceEditor_GroupBoxStartupConfiguration_Text">
            <summary>
              Looks up a localized string similar to Startup Configuration.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TabbedGroups_CloseAllButThisMenuText">
            <summary>
              Looks up a localized string similar to Close All &amp;But This.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TabbedGroups_CloseAllMenuText">
            <summary>
              Looks up a localized string similar to Close &amp;All.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TabbedGroups_CloseMenuText">
            <summary>
              Looks up a localized string similar to &amp;Close.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TabbedGroups_MoveNextMenuText">
            <summary>
              Looks up a localized string similar to Move to &amp;Next Tab Group.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TabbedGroups_MovePreviousMenuText">
            <summary>
              Looks up a localized string similar to Move to &amp;Previous Tab Group.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TabbedGroups_NewHorizontalMenuText">
            <summary>
              Looks up a localized string similar to New &amp;Horizontal Tab Group.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TabbedGroups_NewVerticalMenuText">
            <summary>
              Looks up a localized string similar to New &amp;Vertical Tab Group.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TabbedGroups_ProminentMenuText">
            <summary>
              Looks up a localized string similar to Pro&amp;minent.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TabbedGroups_RebalanceMenuText">
            <summary>
              Looks up a localized string similar to &amp;Rebalance.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TabbedGroups_SelectInWorkspaceExplorer">
            <summary>
              Looks up a localized string similar to Select in Workspace Explorer.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Task_NoName">
            <summary>
              Looks up a localized string similar to No Name.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.Task_StateChange">
            <summary>
              Looks up a localized string similar to Task &apos;{0}&apos; entering state &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskGuiPlugin_TaskStatus">
            <summary>
              Looks up a localized string similar to Task Status Control.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskManager_ProgramAlreadyRunning">
            <summary>
              Looks up a localized string similar to Program &apos;{0}&apos; is Already Running.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskManager_TooManyTasks">
            <summary>
              Looks up a localized string similar to Too many tasks. The maximum is {0}..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_Abort">
            <summary>
              Looks up a localized string similar to Abort.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_AbortAll">
            <summary>
              Looks up a localized string similar to Abort All.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_Additional">
            <summary>
              Looks up a localized string similar to Aditional Controls.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_AlreadyRunning">
            <summary>
              Looks up a localized string similar to Cannot start. Program &apos;{0}&apos; is already active..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_AlreadyRunning_Title">
            <summary>
              Looks up a localized string similar to Program Already Running.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_AvailableComponents">
            <summary>
              Looks up a localized string similar to Available Items.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_ConfirmAbortAllProcess">
            <summary>
              Looks up a localized string similar to Are you sure you want to abort all processes?.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_ConfirmAbortCurrentProcess">
            <summary>
              Looks up a localized string similar to Are you sure you want to abort the current process?.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_CurrentTaskInformation">
            <summary>
              Looks up a localized string similar to Current Task Information.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_Edit">
            <summary>
              Looks up a localized string similar to Edit.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_Info">
            <summary>
              Looks up a localized string similar to Status.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_Message">
            <summary>
              Looks up a localized string similar to Message.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_Pause">
            <summary>
              Looks up a localized string similar to Pause.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_Proceed">
            <summary>
              Looks up a localized string similar to Proceed.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_ProgramStack">
            <summary>
              Looks up a localized string similar to Program Stack:.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_Retry">
            <summary>
              Looks up a localized string similar to Retry.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_SingleStep">
            <summary>
              Looks up a localized string similar to Single-Step.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TaskStatusControl_Start">
            <summary>
              Looks up a localized string similar to Start.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TeachControl_Teach">
            <summary>
              Looks up a localized string similar to Here.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TestValue_AboveMax">
            <summary>
              Looks up a localized string similar to Value &apos;{0}&apos; above maximum &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TestValue_BelowMin">
            <summary>
              Looks up a localized string similar to Value &apos;{0}&apos; below minimum &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TestValue_EqualsMax">
            <summary>
              Looks up a localized string similar to Value &apos;{0}&apos; equals maximum &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TestValue_EqualsMin">
            <summary>
              Looks up a localized string similar to Value &apos;{0}&apos; equals minimum &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TextUtil_IncorrectFormat">
            <summary>
              Looks up a localized string similar to The text was not in the expected format.{0}The expected decimal separator is: &apos;{1}&apos;{0}The expected group separator is: &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TextUtil_InvalidAsciiCharacter">
            <summary>
              Looks up a localized string similar to Invalid ASCII character. Byte value exceeds 127..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TextUtil_TooFewValues">
            <summary>
              Looks up a localized string similar to Too few values. Expected at least {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.TextUtil_TooManyValues">
            <summary>
              Looks up a localized string similar to Too many values. Expected at most {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.UIService_NotImplemented">
            <summary>
              Looks up a localized string similar to The method or operation is not implemented..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.UserDefineForm_Access">
            <summary>
              Looks up a localized string similar to Access.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.UserDefineForm_UserName">
            <summary>
              Looks up a localized string similar to User Name.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.UserManager_DoesNotExits">
            <summary>
              Looks up a localized string similar to There is no UserManager in the workspace. Unrecognized user name and password..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.UserManagerEditor_Add">
            <summary>
              Looks up a localized string similar to Add.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.UserManagerEditor_AddUser">
            <summary>
              Looks up a localized string similar to Add User.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.UserManagerEditor_Col_Access">
            <summary>
              Looks up a localized string similar to Access.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.UserManagerEditor_Col_Name">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.UserManagerEditor_Edit">
            <summary>
              Looks up a localized string similar to Edit.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.UserManagerEditor_EditUser">
            <summary>
              Looks up a localized string similar to Edit User.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.UserManagerEditor_Remove">
            <summary>
              Looks up a localized string similar to Remove.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.UserManagerEditor_Users">
            <summary>
              Looks up a localized string similar to Users.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.VariableEditor_CurrentValue">
            <summary>
              Looks up a localized string similar to Current Value.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.VariableEditor_EnableCheckBox_Text">
            <summary>
              Looks up a localized string similar to Enable.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.VariableEditor_NewValue">
            <summary>
              Looks up a localized string similar to New Value.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.VariableEditor_VariableType">
            <summary>
              Looks up a localized string similar to Variable Type.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.VariableNumericDataItem_DisplayDescription">
            <summary>
              Looks up a localized string similar to The current value of the variable.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.VariableNumericDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to Current Value.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.VariableNumericEditor_ValueCannotBeSet_Caption">
            <summary>
              Looks up a localized string similar to Unable to Set.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.VariableNumericEditor_ValueCannotBeSet_Message">
            <summary>
              Looks up a localized string similar to The current value of the variable could not be set: {0}{1}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.VariableNumericPropertyMapSource_CircularReference">
            <summary>
              Looks up a localized string similar to Invalid property map configuration: circular reference detected.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.VariableNumericPropertyMapSource_TargetNotDefined">
            <summary>
              Looks up a localized string similar to Target is not defined.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.VariableNumericTaskStatus_ProgramNotDefined">
            <summary>
              Looks up a localized string similar to Program is not defined.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.VariableStringDataItem_DisplayDescription">
            <summary>
              Looks up a localized string similar to The current value of the variable.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.VariableStringDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to Current Value.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.VisualizationPlugin_Visuaalization">
            <summary>
              Looks up a localized string similar to Visualization.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.WorkingDialog_PleaseWait">
            <summary>
              Looks up a localized string similar to Working...Please Wait.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.WorkspaceOrientationOperation_Name">
            <summary>
              Looks up a localized string similar to Edit Workspace Orientation.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.WorkspacePositionEditControl_EditWorkspacePosition_Caption">
            <summary>
              Looks up a localized string similar to Edit Position.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.WorkspacePositionEditControl_EditWorkspacePosition_Message">
            <summary>
              Looks up a localized string similar to Edit the location of &apos;{0}&apos; in the workspace coordinate system..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.WorkspacePositionEditControl_Instructions">
            <summary>
              Looks up a localized string similar to Rearrange the objects in the workspace by selecting a bounding box with the mouse and dragging it to the desired position..
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.WorkspacePositionEditControl_NoSelection">
            <summary>
              Looks up a localized string similar to No Selection.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.WorkspacePositionEditControl_ObjectPositionLabel">
            <summary>
              Looks up a localized string similar to Object Position.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.WorkspacePositionEditControl_SelectedObjectLabel">
            <summary>
              Looks up a localized string similar to Selected Object.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.WorkspacePositionEditControl_Selection">
            <summary>
              Looks up a localized string similar to Selected Object: {0}.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.WorkspacePositionEditControl_SelectionGroupBoxTitle">
            <summary>
              Looks up a localized string similar to Object Position Edition.
            </summary>
        </member>
        <member name="P:Ace.Core.GuiText.WorkspacePositonOperation_Name">
            <summary>
              Looks up a localized string similar to Edit Workspace Position.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Access.AccessLevelFieldConverter">
            <summary>
            Allows the method property to be edited as a combo box filled with access levels
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.AccessLevelFieldConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get if standard values are supported
            </summary>
            <param name="context">Context of the operation</param>
            <returns>Are standard values supported</returns>
        </member>
        <member name="M:Ace.Core.Server.Access.AccessLevelFieldConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get if standard values are exclusive
            </summary>
            <param name="context">The context of the operation</param>
            <returns>Are standard values exclusive</returns>
        </member>
        <member name="M:Ace.Core.Server.Access.AccessLevelFieldConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Return the values for display
            </summary>
            <param name="context">The context of the operation</param>
            <returns>The values for display/selection</returns>
        </member>
        <member name="M:Ace.Core.Server.Access.AccessLevelFieldConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified value object to a <see cref="T:System.String"></see> object.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"></see> to use.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion could not be performed. </exception>
        </member>
        <member name="M:Ace.Core.Server.Access.AccessLevelFieldConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
            <exception cref="T:System.ArgumentNullException">The destinationType parameter is null. </exception>
        </member>
        <member name="T:Ace.Core.Server.Access.PCLicenseChecker">
            <summary>
            A class that checks for licenses on the PC
            </summary>
        </member>
        <member name="E:Ace.Core.Server.Access.PCLicenseChecker.EmualtionModeLicenseExpiration">
            <summary>
            Occurs when the emulation mode license has expired.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.PCLicenseChecker.Check(Ace.Core.Server.Access.PCLicense,System.Boolean)">
            <summary>
            Checks for the existence of a license.
            </summary>
            <param name="license">The license to check for.</param>
            <param name="emulationMode">Indicates if the emulation mode is active.</param>
            <returns>Is the license enabled</returns>
        </member>
        <member name="M:Ace.Core.Server.Access.PCLicenseChecker.GetLicenseExpirationInfo(System.Boolean@,System.Boolean@,System.DateTime@)">
            <summary>
            Gets the dongle expiration.
            </summary>
            <param name="canExpire">if set to <c>true</c> the license has an expiration date.</param>
            <param name="expired">if set to <c>true</c> the license is expired.</param>
            <param name="expirationDate">The expiration date.</param>
        </member>
        <member name="M:Ace.Core.Server.Access.PCLicenseChecker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Access.PCLicenseChecker"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.PCLicenseChecker.InitializeSentinelLicenseInformation">
            <summary>
            Initialize the objects to get the Sentinel License information
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.PCLicenseChecker.OnEmulationModeLicenseExpired">
            <summary>
            Called when the emulation mode license has expired
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Access.PCLicenseRequiredAttributeHelper">
            <summary>
            Helper class used to check licenses.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.PCLicenseRequiredAttributeHelper.CheckType(Ace.Core.Server.IAceServer,System.Type)">
            <summary>
            Checks the type to see if it is valid for the AceServer. If no licenses are required for the type,
            it is available. If licenses are required, at least 1 must be found for the object to be considered
            available.
            </summary>
            <param name="server">The server to check on.</param>
            <param name="type">The type to check.</param>
            <returns>
            false = the appropriate license for the type was not found.
            </returns>
        </member>
        <member name="M:Ace.Core.Server.Access.PCLicenseRequiredAttributeHelper.IsTypeLicensed(Ace.Core.Server.Access.PCLicense,System.Type)">
            <summary>
            Determines whether a type requires a specific license.
            </summary>
            <param name="requiredLicense">The required license.</param>
            <param name="type">The type.</param>
            <returns><c>true</c> if the type requires the specified license</returns>
        </member>
        <member name="T:Ace.Core.Server.Access.SentinelDongle">
             <summary>
             Class for holding Sentinel Super Pro information.
             </summary>
             <remarks>
             	Here is a description of protection scheme :
             	PHYSICAL DONGLE LAYOUT ( matrix of 8 x 8 memory cells of 16 bits )
            
                       0          1          2          3          4          5          6          7
            	   ---------------------------------------------------------------------------------------
             0 :  | serial # |  dev id  | reserved | reserved | reserved | reserved | reserved | reserved |
            	   ---------------------------------------------------------------------------------------
             1 :  |    08    |    09    |    0A    |    0B    |    0C    |    0D    |    0E    |    0F    |
            	   ---------------------------------------------------------------------------------------
             2 :  |    10    |    11    |    12    |    13    |    14    |    15    |    16    |    17    |
            	   ---------------------------------------------------------------------------------------
             3 :  |    18    |    19    |    1A    |    1B    |    1C    |    1D    |    1E    |    1F    |
            	   ---------------------------------------------------------------------------------------
             4 :  |    20    |    21    |    22    |    23    |    24    |    25    |    26    |    27    |
            	   ---------------------------------------------------------------------------------------
             5 :  |    28    |    29    |    2A    |    2B    |    2C    |    2D    |    2E    |    2F    |
            	   ---------------------------------------------------------------------------------------
             6 :  |    30    |    31    |    32    |    33    |    34    |    35    |    36    |    37    |
            	   ---------------------------------------------------------------------------------------
             7 :  |    38    |    39    |    3A    |    3B    |    3C    |    3D    |    3E    |    3F    |
                ---------------------------------------------------------------------------------------
            
             The first row is reserved
             The 4 first columns are used for encryption algorithms
             The rows 4 and 6 are used to stored data and 5 and 7 to store encrypted counterpart
            
             We can protect 8 different software
            
             1  : start at 0C ( first 10 bits are for version ), other 6 for options, and 16 other options at 0E
             2  : start at 14 ( first 10 bits are for version ), other 6 for options, and 16 other options at 16
             3  : start at 1C ( first 10 bits are for version ), other 6 for options
             4  : start at 1E ...
            
             34 : 16 most significant bits of serial number ( p/n portion )
             36 : 16 less significant bits of serial number ( p/n portion )
             3C : serial number sequential number ( i/d portion )
            
             3E : memory cell includes global expiration date if appropriate  
            
            	3F : 8 first bits ( DONGLE VERSION ) 8 last bits ( reserved for future use )	 
             </remarks>
        </member>
        <member name="T:Ace.Core.Server.Access.SentinelDongle.NativeMethods">
            <summary>
            Class containing native methods referenced by the class
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Access.SentinelDongle.mLibrary">
            <summary>
            Handle to the interop library being loaded
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Access.SentinelDongle.ExecutablePath">
            <summary>
            Gets the location of the dongle library.
            </summary>
            <value>The path to the dongle library.</value>
        </member>
        <member name="M:Ace.Core.Server.Access.SentinelDongle.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="major">Protection scheme major version number.</param>
            <param name="minor">Protection scheme minor version number.</param>
            <param name="processBit">Protected cell bit value to be addressed.</param>
            <param name="postponeFirstCheck">Option to disable physical dongle check on class construction.</param>
        </member>
        <member name="M:Ace.Core.Server.Access.SentinelDongle.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.SentinelDongle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.SentinelDongle.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">Option to force object disposal.</param>
        </member>
        <member name="M:Ace.Core.Server.Access.SentinelDongle.IsProtected">
            <summary>
            Called to see if selected cell is protected or not.
            </summary>
            <returns>Is the option enabled/protected</returns>
        </member>
        <member name="M:Ace.Core.Server.Access.SentinelDongle.RegisterDeviceNotification(System.Int64)">
            <summary>
            Registration method use to hook a window handle to possible dongle system messages (device removal, ...).
            </summary>
            <param name="window">Handle to window that will receive messages.</param>
        </member>
        <member name="M:Ace.Core.Server.Access.SentinelDongle.GetStaticMask(System.String,System.Int32@,System.Int32@)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.SentinelDongle.SetStaticMask(System.String,System.Int32@,System.Int32@)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.SentinelDongle.LicenseExpirationInfo(System.Boolean@,System.Boolean@,System.DateTime@)">
            <summary>
            Gets the expiration Date for the license.
            </summary>
            <returns>
            The expiration date for the license
            </returns>
        </member>
        <member name="T:Ace.Core.Server.Access.UserManager">
            <summary>
            Holds a list of users and validates whether they should be allowed system access.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.UserManager.#ctor">
            <summary>
            Create a user manager with a default set of users that have no password.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.UserManager.#ctor(System.String)">
            <summary>
            Create a user manager with the given name.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.UserManager.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Access.UserManager.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Access.UserManager.Dispose(System.Boolean)">
            <summary>
            Dispose of the manager. Once disposed, another manager can be created.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.UserManager.Add(System.String)">
            <summary>
            Add a new user with the specified name and no password to the system.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.UserManager.IndexOf(System.String)">
            <summary>
            Return the index of the user with the specified name, or -1 if no such user exists.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.UserManager.SetPassword(System.String,System.String,System.String)">
            <summary>
            Set the password for the specified user. The old password must be passed in to 
            verify the right to change the password.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.UserManager.GetAccess(System.String,System.String)">
            <summary>
            Return the access level given a specified user and password.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.UserManager.Remove(System.String)">
            <summary>
            Remove the user with the specified name.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Ace.Core.Server.Access.UserManager.Clear">
            <summary>
            Remove all users.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Access.UserManager.Users">
            <summary>
            Return an array of all the users in the system.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Access.UserManager.SetAccess(System.String,Ace.Core.Server.Access.AccessLevel)">
            <summary>
            Set the access level for the user with the specified name.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Access.UserManager.DefaultAccess">
            <summary>
            Gets or sets the default access level at user interface startup.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.AceObjectCollection">
            <summary>
            The ACE workspace is composed of a tree-like structure of 
            these ACE object collections, each of which is a branch node
            in the workspace. 
            </summary>	
        </member>
        <member name="E:Ace.Core.Server.AceObjectCollection.ContentsChanged">
            <summary>
            An event fired when an object is added, removed, or renamed in this collection.
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceObjectCollection.ContentsChanging">
            <summary>
            An event fired before an object is added, removed, or renamed in this collection.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.AceObjectCollection.Name">
            <summary>
            The name of the object.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.AceObjectCollection.ParentCollection">
            <summary>
            The parent directory of this object, or null if the object is not a member of a directory.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.#ctor">
            <summary>
            Creates a collection with no name.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.ValidateObject">
            <summary>
            Validate references from this object to other objects in the system.
            This method uses the collection returned by AddReferences.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>		
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.Initialize">
            <summary>
            Calls <c>Initialize</c> on every object in the collection.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.Initialize(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs},System.Single,System.Single@)">
            <summary>
            Calls <c>Initialize</c> on every object in the collection.
            </summary>
            <param name="progressHandler">The progress handler that updates status information.</param>
            <param name="increment">The increment amount.</param>
            <param name="percent">The updated percent.</param>
        </member>
        <member name="P:Ace.Core.Server.AceObjectCollection.Item(System.String)">
            <summary>
            Gets an object with the specified path in this collection or one of its
            child collections. If the value is "folderName/objectName", this collection
            must contain another collection with the name "folderName", which must in
            turn contain an object with name "objectName". Null is returned if the
            object is not found.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.Add(Ace.Core.Server.IAceObject)">
            <summary>
            Add the specified object to this collection. The object must have a unique name and not be an 'ancestor' of this collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.AddCollection(System.String)">
            <summary>
            Creates and adds a collection as a child of the collection
            </summary>
            <param name="name">The name of the collection to add.</param>
            <returns>The added collection</returns>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.AddObjectOfType(System.Type,System.String)">
            <summary>
            Creates and adds an object of a specific type to the collection
            </summary>
            <param name="type">The type of object to add.</param>
            <param name="name">The name of the object to add.</param>
            <returns>The added object</returns>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.Clear">
            <summary>
            Clears and disposes of all objects from this collection.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.Clear(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Clears and disposes of all objects from this collection.
            </summary>
            <param name="progressHandler">The progress handler that updates status information.</param>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.Dispose(System.Boolean)">
            <summary>
            Ensures that this collection is cleared before it is disposed.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.ToArray">
            <summary>
            Returns an array of the objects contained in this collection.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.AceObjectCollection.Count">
            <summary>
            Returns a count of the items in this collection.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.Remove(Ace.Core.Server.IAceObject)">
            <summary>
            Removes the specified object from this collection. The object is NOT disposed.
            A collection-changed event is fired.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.item_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the item control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.FilterType(System.Type)">
            <summary>
            Return a list of contents of this collection recursively, filtered by the specified type. 
            </summary>
            <param name="type">The type of object to search for.</param>
            <returns>A list of the items in the collection matching the specified type.</returns>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.FilterType(System.Type,System.Boolean)">
            <summary>
            Return a list of contents of this collection recursively, filtered by the specified type. 
            </summary>
            <param name="type">The type of object to search for.</param>
            <param name="recursive">true to recursively travel the collection of objects.</param>
            <returns>A list of the items in the collection matching the specified type.</returns>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.Filter(Ace.Core.Util.IObjectFilter)">
            <summary>
            Return a list of contents of this collection recursively, filtered by the specified filter. 
            </summary>
            <param name="objectFilter">Filter that decides whether to accept or reject items from the index.</param>		
            <returns>A list of the items in the collection that satisfy the filter.</returns>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.Filter(Ace.Core.Util.IObjectFilter,System.Boolean)">
            <summary>
            Return a list of contents of this collection, filtered by the specified filter. 
            </summary>
            <param name="objectFilter">Filter that decides whether to accept or reject items from the index.</param>
            <param name="recursive">true to recursively travel the collection of objects.</param>
            <returns>A list of the items in the collection that satisfy the filter.</returns>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.FindUniqueName(System.String)">
            <summary>
            Finds a unique name for a given "base" name in this collection.
            </summary>
            <param name="baseName"></param>
            <returns></returns>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.SaveTo(ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.Boolean,System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Save this object to the specified ZIP stream. The ACE object
            collections are defined implicitly by the path of each object
            in the ZIP file--as a result, any collections containing no
            objects are not restored when the ZIP file is reloaded.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.SaveTo(ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.Boolean,System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs},System.Int32,System.Int32@)">
            <summary>
            Save this object to the specified ZIP stream. The ACE object
            collections are defined implicitly by the path of each object
            in the ZIP file--as a result, any collections containing no
            objects are not restored when the ZIP file is reloaded.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.AceObjectCollection.FullPath">
            <summary>
            The full path of this object from the root folder.
            This is composed by adding a '/' before this object's name, preceded by its parent's name, and so on.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.SaveToZip(System.IO.Stream,System.Boolean)">
            <summary>
            Saves the collection to a ZIP stream.
            </summary>
            <param name="stream">Stream to which to write the collection.</param>
            <param name="isXml">true to write the contents in XML format.</param>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.SaveToZip(System.IO.Stream,System.Boolean,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Saves the collection to a ZIP stream.
            </summary>
            <param name="stream">Stream to which to write the collection.</param>
            <param name="isXml">true to write the contents in XML format.</param>
            <param name="progressHandler">The progress handler getting notification of the progress.</param>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.LoadFromZip(System.IO.Stream)">
            <summary>
            Loads a collection of objects from the specified stream.
            </summary>
            <param name="stream">Stream from which to load the collection.</param>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.LoadFromZip(System.IO.Stream,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Loads a collection of objects from the specified stream.
            </summary>
            <param name="stream">Stream from which to load the collection.</param>
            <param name="progressHandler">The progress handler that updates status information.</param>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.CheckReferences(System.Collections.Generic.IList{Ace.Core.Server.IAceObject})">
            <summary>
            Checks the references for the specified objects.
            </summary>
            <param name="objectsToCheck">The objects to check.</param>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.CheckInternalReferences">
            <summary>
            Checks the internal references between objects contained in this collection.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.AddRange(Ace.Core.Server.IAceObjectCollection)">
            <summary>
            Adds the contents of the specified collection to this collection. The links in the
            objects are validated, then the objects are initialized.
            </summary>
            <param name="newFolder">The new folder to add.</param>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.AddRange(Ace.Core.Server.IAceObjectCollection,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Adds the contents of the specified collection to this collection. The links in the
            objects are validated, then the objects are initialized.
            </summary>
            <param name="newFolder">The new folder to add.</param>
            <param name="progressHandler">The progress handler that updates status information.</param>
        </member>
        <member name="T:Ace.Core.Server.AceObjectCollection.AceObjects">
            <summary>
            Collection for managing AceObjects in the collection
            </summary>
        </member>
        <member name="P:Ace.Core.Server.AceObjectCollection.AceObjects.Item(System.String)">
            <summary>
            Gets the element with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The object in the collection or null if it is not found</returns>
        </member>
        <member name="M:Ace.Core.Server.AceObjectCollection.AceObjects.Contains(System.String)">
            <summary>
            Determines whether the collection contains an object with the specified name
            </summary>
            <param name="name">The name.</param>
            <returns>
              <c>true</c> if the collection contains an object of the specified name; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Ace.Core.Server.AceServer">
            <summary>
            Main ACE startup class.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.AceServer.TracePluginSwitch">
            <summary>
            Trace client and server-side plug-in installation.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.AceServer.DefaultEventLogLength">
            <summary>
            Number of event log details that will be saved by the server
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceServer.Shutdown">
            <summary>
            An event raised just after the ACE server shuts down.
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceServer.BeforeShutdown">
            <summary>
            An event raised before the ace server begins shutdown down. 
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceServer.SimulationEvent">
            <summary>
            An event raised when a simulation-related event occurs.
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceServer.CollectionChanged">
            <summary>
            An event raised when a workspace is changed. 
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceServer.WorkspaceSaving">
            <summary>
            An event raised before a workspace is saved. Any component that
            implements its own persistence should subscribe to this event to
            prepare for saving.
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceServer.WorkspaceSaved">
            <summary>
            An event raised when a workspace is saved. Any component that
            implements its own persistence should subscribe to this event to
            determine when to save state.
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceServer.WorkspaceLoading">
            <summary>
            An event raised before a workspace is loaded. 
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceServer.WorkspaceLoad">
            <summary>
            An event raised when a workspace is loaded. 
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceServer.WorkspaceUnloading">
            <summary>
            An event raised when the current workspace is about to be unloaded. 
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceServer.WorkspaceUnload">
            <summary>
            An event raised when a workspace is unloaded. 
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceServer.LogEvent">
            <summary>
            An event raised when a logged event occurs.
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceServer.LockStatusChanged">
            <summary>
            An event raised when the status of the lock changes. 
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceServer.EmulationModeChanged">
            <summary>
            An event raised when when the emulation mode changes in the server.
            </summary>
        </member>
        <member name="E:Ace.Core.Server.AceServer.EmulationModeLicenseExpired">
            <summary>
            Occurs when the emulation mode license has expired.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.AceServer.OpcConfiguration">
            <summary>
            Gets the Opc configuration.
            </summary>
            <value>The Opc configuration.</value>
        </member>
        <member name="P:Ace.Core.Server.AceServer.WorkspaceModified">
            <summary>
            Gets or sets a value indicating whether the current workspace has been modified.
            </summary>
            <value><c>true</c> if the workspace has been modified; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Core.Server.AceServer.EmulationMode">
            <summary>
            Gets or sets a value indicating whether the ACE server is running in emulation mode.
            As we do not want to end up with a root collection that is a mix of real and emulated objects,
            we only allow to switch the emulation mode if the root collection is empty.
            The emulation mode can not be set at true if there is no EmulationMode license.
            </summary>
            <value><c>true</c> if [emulation mode]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.Core.Server.AceServer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.AceServer"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceServer.ClearModifiedStatus">
            <summary>
            Clears the modified status.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceServer.InitializePlugins">
            <summary>
            Initializes the plugins used by the server.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceServer.InitializeTypeMapping">
            <summary>
            Initializes the factory creation dictionary used when objects are created.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceServer.collection_ContentsChanging(System.Object,Ace.Core.Server.Event.ContentsChangingEventArgs)">
            <summary>
            Handles the ContentsChanging event of the rootCollection control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.ContentsChangingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.collection_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the collection control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.CurrentDomain_UnhandledException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            Handles the UnhandledException event of the CurrentDomain control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.UnhandledExceptionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.PCLicenseChecker_EmualtionModeLicenseExpiration(System.Object,System.EventArgs)">
            <summary>
            Handles the EmualtionModeLicenseExpiration event of the PCLicenseChecker control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.RaiseWorkSpaceSavingEvent(System.String)">
            <summary>
            Raise workspace saving event, and wait for Save Startup Specification file		
            </summary>
            <param name="path">The saving path.</param>		
        </member>
        <member name="P:Ace.Core.Server.AceServer.Item(System.String)">
            <summary>
            A convenience method for returning elements of the workspace by name.
            </summary>
            <param name="path">The name of the object to return</param>
            <returns>The matching AceObject -or- null if no object was found</returns>
        </member>
        <member name="P:Ace.Core.Server.AceServer.Version">
            <summary>
            Gets the "Common" version of ACE code running.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.AceServer.ProductVersion">
            <summary>
            Gets the product version of ACE code running.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.AceServer.TaskManager">
            <summary>
            Returns the task manager.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.AceServer.PropertyManager">
            <summary>
            Returns the property manager, which enables applications to expose and access properties.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.AceServer.IsLocked">
            <summary>
            Gets a value indicating whether this instance is locked.
            </summary>
            <value><c>true</c> if this instance is locked; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.Core.Server.AceServer.FilterTypes(Ace.Core.Util.ITypeFilter)">
            <summary>
            Filter types in the assembly list based on a given filter, 
            and return a list of the selected types.
            </summary>
            <param name="filter">A filter used to filter the types.</param>
            <returns>A list of accepted types.</returns>
        </member>
        <member name="M:Ace.Core.Server.AceServer.GetDiagnosticData(Ace.Core.Util.LogLevel,Ace.Core.Server.Diagnostic.IDiagnosticData)">
            <summary>
            Add component information about this object to the specified diagnostic data collection.
            </summary>
            <param name="logLevel">The logging level indicating how much information to include.</param>
            <param name="parent">The node to which to add the information.</param>
            <returns>The same collection passed in, appended with diagnostic information.</returns>
        </member>
        <member name="M:Ace.Core.Server.AceServer.InitializeLifetimeService">
            <summary>
            Ensures that remote references to this object don't time out.
            </summary>
            <returns>null, which disables communication timeouts.</returns>
        </member>
        <member name="P:Ace.Core.Server.AceServer.EventLogDetails">
            <summary>
            A list of log messages received by the server
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceServer.ClearEventLogDetails">
            <summary>
            Clear the event log details
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceServer.LoggerLogEvent(System.Object,Ace.Core.Util.LogEventArgs)">
            <summary>
            Handler for writing events to a memory log
            </summary>
            <param name="sender">Object generating the event</param>
            <param name="e">The event details</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.Clear">
            <summary>
            Clears the workspace and generates a WorkspaceUnload event.
            </summary>       
        </member>
        <member name="M:Ace.Core.Server.AceServer.Clear(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Clears the workspace and generates a WorkspaceUnload event.
            </summary>       
            <param name="progressHandler">The progress handler that updates status information.</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.Dispose">
            <summary>
            Clears contents of workspace and exits.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceServer.LoadLocalWorkspace(System.String)">
            <summary>
            Loads a workspace from the file system of the AceServer.
            </summary>
            <param name="localPath">The path to the file.</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.LoadLocalWorkspace(System.String,System.Boolean)">
            <summary>
            Loads a workspace from the file system of the AceServer.
            </summary>
            <param name="localPath">The path to the file.</param>
            <param name="emulationMode">if set to <c>true</c> [emulation mode].</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.LoadLocalWorkspace(System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs},System.Boolean)">
            <summary>
            Loads a workspace from the file system of the AceServer.
            </summary>
            <param name="localPath">The path to the file.</param>
            <param name="progressHandler">The progress handler.</param>
            <param name="emulationMode">if set to <c>true</c> [emulation mode].</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.LoadWorkspace(System.Byte[],System.String)">
            <summary>
            Load data into the workspace
            </summary>
            <param name="data">The workspace data to load</param>
            <param name="path">The path of the file.</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.LoadWorkspace(System.Byte[],System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Load data into the workspace
            </summary>
            <param name="data">The workspace data to load</param>
            <param name="path">The path of the file.</param>
            <param name="progressHandler">The progress handler that updates status information.</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.LoadWorkspace(System.Byte[],System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs},System.Boolean)">
            <summary>
            Load data into the workspace
            </summary>
            <param name="data">The workspace data to load</param>
            <param name="path">The path of the file.</param>
            <param name="progressHandler">The progress handler that updates status information.</param>
            <param name="emulationMode">if set to <c>true</c> [emulation mode].</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.LoadWorkspace(System.Byte[],System.String,System.Boolean)">
            <summary>
            Load the workspace from the specified file.
            </summary>
            <param name="data">The workspace data to load.</param>
            <param name="path">The path of the file.</param>
            <param name="useLoadedWorkspacePath">if set to <c>true</c> update the loaded workspace path.</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.LoadWorkspace(System.Byte[],System.String,System.Boolean,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Load the workspace from the specified file.
            </summary>
            <param name="data">The workspace data to load.</param>
            <param name="path">The path of the file.</param>
            <param name="useLoadedWorkspacePath">if set to <c>true</c> update the loaded workspace path.</param>
            <param name="progressHandler">The progress handler that updates status information.</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.LoadWorkspace(System.Byte[],System.String,System.Boolean,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs},System.Boolean)">
            <summary>
            Loads the workspace.
            </summary>
            <param name="data">The data.</param>
            <param name="path">The path.</param>
            <param name="useLoadedWorkspacePath">if set to <c>true</c> [use loaded workspace path].</param>
            <param name="progressHandler">The progress handler.</param>
            <param name="emulationMode">if set to <c>true</c> [emulation mode].</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.SaveWorkspace(System.String)">
            <summary>
            Saves the workspace to the specified path. Updates the default workspace
            path to be the specified path.
            </summary>
            <param name="path">Path to the file in which the workspace will be stored.</param>
            <returns>The workspace data</returns>
        </member>
        <member name="M:Ace.Core.Server.AceServer.SaveWorkspace(System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Saves the workspace to the specified path. Updates the default workspace
            path to be the specified path.
            </summary>
            <param name="path">Path to the file in which the workspace will be stored.</param>
            <param name="progressHandler">The progress handler getting notification of the progress.</param>		
            <returns>The workspace data</returns>
        </member>
        <member name="M:Ace.Core.Server.AceServer.SaveLocalWorkspace">
            <summary>
            Saves the workspace file in the case client and server are on the same PC.
            </summary>
            <exception cref="T:System.InvalidOperationException">Workspace is not loaded</exception>
        </member>
        <member name="M:Ace.Core.Server.AceServer.SaveLocalWorkspace(System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Saves the workspace files in the case client and server are on the same PC.
            Instead of using .NET remoting to transfer the workspace file content from server to client,
            this method directly transfers the path to a temporary file containing the data.
            This method allows a better efficiency to transfer the data from server to client but it must NOT be called if server and client are on different PCs.
            </summary>
            <param name="clientFilePath">The client file path.</param>
            <param name="progressHandler">The progress handler.</param>		
            <returns>
            The path to a temporary file in which client side workspace is saved.
            </returns>
        </member>
        <member name="M:Ace.Core.Server.AceServer.SaveWorkspace(System.Boolean,System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Saves the workspace files in the case client and server are on the same PC.
            Instead of using .NET remoting to transfer the workspace file content from server to client,
            this method directly transfers the path to a temporary file containing the data.
            This method allows a better efficiency to transfer the data from server to client but it must NOT be called if server and client are on different PCs.
            </summary>
            <param name="returnContentFileInBytes">The client file path.</param>
            <param name="path">The client file path.</param>
            <param name="progressHandler">The progress handler.</param>		
            <returns>
            The path to a temporary file or content of the file in bytes array in which client side workspace is saved.
            </returns>
        </member>
        <member name="M:Ace.Core.Server.AceServer.SaveToZip(Ace.Core.Server.IAceObject,System.IO.Stream,System.Boolean)">
            <summary>
            Saves the AceObject to a ZIP stream.
            </summary>
            <param name="aceObject">The ace object to save.</param>
            <param name="stream">Stream to which to write the collection.</param>
            <param name="isXml">true to write the contents in XML format.</param>
        </member>
        <member name="P:Ace.Core.Server.AceServer.LoadedWorkspacePath">
            <summary>
            The currently loaded workspace path. This value
            is changed whenever a workspace is saved or loaded 
            from a different path.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.AceServer.LoadedWorkspaceVersion">
            <summary>
            The currently loaded workspace version. 
            </summary>
        </member>
        <member name="P:Ace.Core.Server.AceServer.Root">
            <summary>
            The root collection of objects contained in this instance of AceServer.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceServer.CreateObject(System.Type)">
            <summary>
            Create an object of the specified type. If the object is a <see cref="T:Ace.Core.Server.RemotableServerObject"/> then it will be associated
            with the AceServer instance. If the object is an <see cref="T:Ace.Core.Server.AceObject"/>, it will be initialized.
            </summary>
            <param name="type">The type of object to create</param>
            <returns>The created object</returns>
        </member>
        <member name="M:Ace.Core.Server.AceServer.CreateObject(System.Type,System.Object[])">
            <summary>
            Create an object of the specified type. If the object is a <see cref="T:Ace.Core.Server.RemotableServerObject"/> then it will be associated
            with the AceServer instance. If the object is an <see cref="T:Ace.Core.Server.AceObject"/>, it will be initialized.
            </summary>
            <param name="type">The type of object to create.</param>
            <param name="args">The arguments passed to the constructor.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Core.Server.AceServer.CreateObject(System.Byte[],System.Boolean)">
            <summary>
            Create an object from an array of serialized data. The object is NOT
            validated or initialized when returned.
            </summary>
            <param name="data">Raw data</param>
            <param name="isXml">true if the data is XML format; false if binary.</param>
            <returns>Object created from the serialized data.</returns>
        </member>
        <member name="M:Ace.Core.Server.AceServer.SetLockState(System.IDisposable,System.Boolean)">
            <summary>
            Sets the state of the lock.
            </summary>
            <param name="lockingObject">The object that is modifying the lock state.</param>
            <param name="state">if set to <c>true</c> the server is locked. Otherwise it is unlocked.</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.TestLock">
            <summary>
            Checks the server to see if it is locked. If it is locked, throw an exception.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.AceServer.RaiseSimulationEvent(System.Object,Ace.Core.Server.Event.PropertyChangeEventArgs)">
            <summary>
            Raises the simulation event.
            </summary>
            <param name="obj">The object raising the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.AceServer.IsTypeLicensed(System.Type)">
            <summary>
            Checks to see if a type is licensed to run on the specified server.
            </summary>
            <param name="typeToCheck">The type to check for required licenses.</param>
            <returns>Is the license enabled on the server</returns>
        </member>
        <member name="M:Ace.Core.Server.AceServer.CheckForLicense(Ace.Core.Server.Access.PCLicense)">
            <summary>
            Checks for license on the server.
            </summary>
            <param name="license">The license to check.</param>
            <returns>Is the license enabled on the server</returns>
        </member>
        <member name="M:Ace.Core.Server.AceServer.AppendToLog(System.String)">
            <summary>
            Appends text to the AceServer log.
            </summary>
            <param name="text">The text to append to the log.</param>
        </member>
        <member name="T:Ace.Core.Server.DataItems.CSharpProgramDataItem">
            <summary>
            Represents a C# program data item exposed from a C# program. 
            </summary>
        </member>
        <member name="P:Ace.Core.Server.DataItems.CSharpProgramDataItem.Program">
            <summary>
            Gets or sets the handle to the owner of the data item
            </summary>
        </member>
        <member name="P:Ace.Core.Server.DataItems.CSharpProgramDataItem.TagPath">
            <summary>
            Gets the full path, including the tag name, used to identify the data item.
            This must be unique for each item in the whole workspace.
            </summary>
            <value>The tag path.</value>
        </member>
        <member name="P:Ace.Core.Server.DataItems.CSharpProgramDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Core.Server.DataItems.CSharpProgramDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="P:Ace.Core.Server.DataItems.CSharpProgramDataItem.AssociatedController">
            <summary>
            Gets the name of a controller associated with the data item.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Core.Server.DataItems.CSharpProgramDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.DataItems.CSharpProgramDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.DataItems.CSharpProgramDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.DataItems.CSharpProgramDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.DataItems.CSharpProgramDataItem.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Core.Server.DataItems.CSharpProgramDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Core.Server.DataItems.CSharpProgramDataItem.SetValue(System.Double)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="M:Ace.Core.Server.DataItems.CSharpProgramDataItem.program_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the program control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.DataItems.CSharpProgramDataItem.selfLaunchedTask_StateChanged(System.Object,Ace.Core.Server.Program.TaskStateChangeEventArgs)">
            <summary>
            Handles the StateChanged event of the selfLaunchedTask control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Program.TaskStateChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Core.Server.DataItems.VariableNumericDataItem">
            <summary>
            Represents a numeric data item exposed from a numeric variable. 
            </summary>
        </member>
        <member name="F:Ace.Core.Server.DataItems.VariableNumericDataItem.variable">
            <summary>
            Handle to the variable owning the data item
            </summary>
        </member>
        <member name="P:Ace.Core.Server.DataItems.VariableNumericDataItem.Variable">
            <summary>
            Gets or sets the handle to the variable owning the data item
            </summary>
        </member>
        <member name="P:Ace.Core.Server.DataItems.VariableNumericDataItem.TagPath">
            <summary>
            Gets the full path, including the tag name, used to identify the data item.
            This must be unique for each item in the whole workspace.
            </summary>
            <value>The tag path.</value>
        </member>
        <member name="P:Ace.Core.Server.DataItems.VariableNumericDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Core.Server.DataItems.VariableNumericDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="P:Ace.Core.Server.DataItems.VariableNumericDataItem.AssociatedController">
            <summary>
            Gets the name of a controller associated with the data item.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Core.Server.DataItems.VariableNumericDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.DataItems.VariableNumericDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.DataItems.VariableNumericDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.DataItems.VariableNumericDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.DataItems.VariableNumericDataItem.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Core.Server.DataItems.VariableNumericDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Core.Server.DataItems.VariableNumericDataItem.SetValue(System.Double)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="M:Ace.Core.Server.DataItems.VariableNumericDataItem.variable_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the variable control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Core.Server.DataItems.VariableStringDataItem">
            <summary>
            Represents a string data item exposed from a string variable. 
            </summary>
        </member>
        <member name="F:Ace.Core.Server.DataItems.VariableStringDataItem.variable">
            <summary>
            Handle to the variable owning the data item
            </summary>
        </member>
        <member name="P:Ace.Core.Server.DataItems.VariableStringDataItem.Variable">
            <summary>
            Gets or sets the handle to the variable owning the data item
            </summary>
        </member>
        <member name="P:Ace.Core.Server.DataItems.VariableStringDataItem.TagPath">
            <summary>
            Gets the full path, including the tag name, used to identify the data item.
            This must be unique for each item in the whole workspace.
            </summary>
            <value>The tag path.</value>
        </member>
        <member name="P:Ace.Core.Server.DataItems.VariableStringDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Core.Server.DataItems.VariableStringDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="P:Ace.Core.Server.DataItems.VariableStringDataItem.AssociatedController">
            <summary>
            Gets the name of a controller associated with the data item.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Core.Server.DataItems.VariableStringDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.DataItems.VariableStringDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.DataItems.VariableStringDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.DataItems.VariableStringDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.DataItems.VariableStringDataItem.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Core.Server.DataItems.VariableStringDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Core.Server.DataItems.VariableStringDataItem.SetValue(System.String)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="M:Ace.Core.Server.DataItems.VariableStringDataItem.variable_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the variable control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Core.Server.Motion.SelectedRobotHandler">
            <summary>
            Property handler storing the last selected robot. Used in various places to initialize default robot selection.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Motion.SelectedRobotHandler.aceServer">
            <summary>
            The server associated with the property handler
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Motion.SelectedRobotHandler.lastSelectedRobot">
            <summary>
            The last selected robot
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Motion.SelectedRobotHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Motion.SelectedRobotHandler"/> class.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Motion.SelectedRobotHandler.Value">
            <summary>
            Gets or sets the value of this property.
            </summary>
            <value></value>
        </member>
        <member name="M:Ace.Core.Server.Motion.SelectedRobotHandler.Initialize(Ace.Core.Server.IAceServer)">
            <summary>
            Called during server startup, this function is typically used to
            start up server-side software for this plug-in.
            </summary>
            <param name="server">The server associated with the plugin</param>
        </member>
        <member name="M:Ace.Core.Server.Motion.SelectedRobotHandler.ShutDown">
            <summary>
            Initiates a shuts-down operation on the plug-in
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Motion.SelectedRobotHandler.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Note">
            <summary>
            Represents a notepad/text object in the workspace.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Note.text">
            <summary>
            The text associated with the note
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Note.Text">
            <summary>
            Gets or sets the text associated with the note
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Note.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Note"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Note.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Note.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Note.AppendText(System.String)">
            <summary>
            Appends the text to the current note.
            </summary>
            <param name="textToAdd">The text to add/append.</param>
        </member>
        <member name="M:Ace.Core.Server.Note.CreateRecipeConfiguration">
            <summary>
            Creates and returns a new recipe configuration.
            </summary>
            <value>
            The recipe configuration.
            </value>
        </member>
        <member name="T:Ace.Core.Server.NoteRecipeComponent">
            <summary>
            Represents an instance of data associated with a recipe / recipe component.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.NoteRecipeComponent.Note">
            <summary>
            Gets the note
            </summary>
            <value>
            The note.
            </value>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeComponent.#ctor(Ace.Core.Server.Recipes.IRecipeSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.NoteRecipeComponent" /> class.
            </summary>
            <param name="recipeSource">The recipe source.</param>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeComponent.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.NoteRecipeComponent"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeComponent.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>		
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeComponent.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeComponent.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeComponent.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeComponent.Apply">
            <summary>
            Applies the recipe information to the source
            </summary>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeComponent.CreateEditCopy">
            <summary>
            Creates a copy of the component for editing.
            </summary>
            <returns>A copy of the current object used only for editing</returns>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeComponent.ApplyEditCopy(Ace.Core.Server.Recipes.RecipeComponentBase,System.Boolean)">
            <summary>
            Applies the edit copy to the component.
            </summary>
            <param name="component">The component.</param>
            <param name="isSelected">if set to <c>true</c> the recipe associated with the component is the active/selected recipe.</param>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeComponent.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeComponent.note_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the note control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Core.Server.NoteRecipeConfiguration">
            <summary>
            Represents a configuration of items included in a recipe.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.NoteRecipeConfiguration.Note">
            <summary>
            Gets the note object associated with the configuration
            </summary>
            <value>
            The note object.
            </value>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeConfiguration.#ctor(Ace.Core.Server.Recipes.IRecipeSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.NoteRecipeConfiguration" /> class.
            </summary>
            <param name="recipeSource">The recipe source.</param>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.NoteRecipeConfiguration"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeConfiguration.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeConfiguration.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeConfiguration.CreateRecipeComponent">
            <summary>
            Creates a new recipe component based on the current configuration
            </summary>
            <returns>The recipe component</returns>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeConfiguration.ConvertRecipeComponent(System.Boolean,Ace.Core.Server.Recipes.RecipeComponentBase)">
            <summary>
            Converts the recipe component based on the current recipe configuration settings.
            </summary>
            <param name="isActive">if set to <c>true</c> this component is from the active recipe.</param>
            <param name="recipeComponent">The recipe component to convert.</param>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeConfiguration.Apply(Ace.Core.Server.Recipes.RecipeComponentBase)">
            <summary>
            Applies the specified recipe component to the source.
            </summary>
            <param name="recipeComponent">The recipe component.</param>
        </member>
        <member name="M:Ace.Core.Server.NoteRecipeConfiguration.Note_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the Tool control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Core.Server.ObjectPropertyManager">
            <summary>
            Provides a collection for adding, removing, and retrieving arbitrary values.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.ObjectPropertyManager.Item(System.String)">
            <summary>
            Gets or sets the specified system property. Getter returns null if no such key exists.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.ObjectPropertyManager.Add(System.String,Ace.Core.Server.IPropertyHandler)">
            <summary>
            Add a property with the given key and value.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.ObjectPropertyManager.Remove(System.String)">
            <summary>
            Remove a property with the given key.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Program.TaskManager">
            <summary>
            Task execution manager.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Program.TaskManager.MaxTasks">
            <summary>
            Maximum number of concurrently-executing tasks.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Program.TaskManager.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="E:Ace.Core.Server.Program.TaskManager.TaskStateChanged">
            <summary>
            Adds or removes an event handler for task state-change events.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Program.TaskManager.OnTaskStateChange(System.Object,Ace.Core.Server.Program.TaskStateChangeEventArgs)">
            <summary>
            Called when a task state is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Program.TaskStateChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.Program.TaskManager.Start(Ace.Core.Server.Program.IAbstractProgram)">
            <summary>
            Start the specified program in a new task.
            The program will be primed, prepared, then started.
            </summary>
            <param name="program">The program.</param>
            <returns>The program task.</returns>
        </member>
        <member name="M:Ace.Core.Server.Program.TaskManager.Start(Ace.Core.Server.Program.IAbstractProgram,System.Boolean)">
            <summary>
            Start the specified program in a new task.
            The program will be primed, optionally prepared, then started.
            </summary>
            <param name="program">The program.</param>
            <param name="prepare">if set to <c>true</c> [prepare].</param>
            <returns>The program task.</returns>
        </member>
        <member name="M:Ace.Core.Server.Program.TaskManager.Prime(Ace.Core.Server.Program.IAbstractProgram)">
            <summary>
            Prime the specified program in a new task. The task does not automatically start.
            To start a primed task, you should invoke Start() on the task, NOT call Start(program).
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Program.TaskManager.AbortAll">
            <summary>
            Aborts all active tasks.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Program.TaskManager.GetTasks">
            <summary>
            Returns an array of running tasks.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Program.TaskManager.GetTaskForProgram(Ace.Core.Server.Program.IAbstractProgram)">
            <summary>
            Returns the task associated with a specified program.
            </summary>
            <param name="program">The specified program.</param>
            <returns>The task associated with the program</returns>
        </member>
        <member name="M:Ace.Core.Server.Program.TaskManager.task_Disposing(System.Object,System.EventArgs)">
            <summary>
            Handles the Disposing event of the task control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.Program.TaskManager.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="T:Ace.Core.Server.Program.TaskManager.TaskFilter">
            <summary>
            Utility class used to interface with the SafeEventPump. It will filter out all
            events that match the state change event.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Program.TaskManager.TaskFilter.#ctor(Ace.Core.Server.Program.IAbstractProgram)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Program.TaskManager.TaskFilter"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Program.TaskManager.TaskFilter.Filter(Ace.Core.Server.Event.SafeEventPumpDescriptor)">
            <summary>
            Performs a filter operation.
            </summary>
            <param name="descriptor">The descriptor.</param>
            <returns>Returns <c>true</c> if the event should be filtered.</returns>
        </member>
        <member name="T:Ace.Core.Server.Program.VariableBase">
            <summary>
            Represents a variable 
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Program.VariableBase.exposableItems">
            <summary>
            The list of items being exposed by the variable
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Program.VariableBase.ExposableItems">
            <summary>
            Get the exposable data items
            </summary>
            <value></value>
            <returns>The list of exposable items</returns>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Program.VariableBase"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableBase.Dispose(System.Boolean)">
            <summary>
            Disposes of the object when it is explicitly disposed or garbage-collected.
            This removes the object from its parent directory.
            </summary>
            <param name="isDisposing">True if the object is being explicitly disposed.
            False if it is being garbage-collected.</param>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableBase.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableBase.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableBase.exposableItems_ExposableItemChanged(System.Object,Ace.Core.Server.DataItems.ExposableDataItemChangedEventArgs)">
            <summary>
            Handles the ExposableItemChanged event of the exposableItems control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.DataItems.ExposableDataItemChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Core.Server.Program.VariableNumeric">
            <summary>
            Represents a numeric variable
            </summary>	
        </member>
        <member name="M:Ace.Core.Server.Program.VariableNumeric.FindVariableSources">
            <summary>
            Finds the available variable sources.
            </summary>
            <returns>List of variable source types</returns>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableNumeric.GetVariableSourceName(System.Type)">
            <summary>
            Gets the name of the variable source.
            </summary>
            <param name="type">The type of variable to return the name for.</param>
            <returns>The name of the variable source</returns>
        </member>
        <member name="F:Ace.Core.Server.Program.VariableNumeric.dataItem">
            <summary>
            Handle to the data item used to expose the variable
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Program.VariableNumeric.source">
            <summary>
            The source of the variable
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Program.VariableNumeric.Source">
            <summary>
            Gets or sets the source for the variable.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Ace.Core.Server.Program.VariableNumeric.ConfigurationType">
            <summary>
            Gets the type of the configuration.
            </summary>
            <value>The type of the configuration.</value>
        </member>
        <member name="P:Ace.Core.Server.Program.VariableNumeric.IsBoolean">
            <summary>
            Gets a value indicating whether this instance is Boolean.
            </summary>
            <value>
            	<c>true</c> if this instance is Boolean; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableNumeric.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Program.VariableNumeric"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableNumeric.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableNumeric.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableNumeric.Dispose(System.Boolean)">
            <summary>
            Disposes of the object when it is explicitly disposed or garbage-collected.
            This removes the object from its parent directory.
            </summary>
            <param name="isDisposing">True if the object is being explicitly disposed.
            False if it is being garbage-collected.</param>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableNumeric.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableNumeric.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that 
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableNumeric.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Program.VariableNumeric.CurrentValue">
            <summary>
            Gets or sets the current state of the variable.
            </summary>
            <value></value>
        </member>
        <member name="T:Ace.Core.Server.Program.VariableString">
            <summary>
            Represents a string variable
            </summary>	
        </member>
        <member name="M:Ace.Core.Server.Program.VariableString.FindVariableSources">
            <summary>
            Finds the available variable sources.
            </summary>
            <returns>List of variable source types</returns>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableString.GetVariableSourceName(System.Type)">
            <summary>
            Gets the name of the variable source.
            </summary>
            <param name="type">The type of variable to return the name for.</param>
            <returns>The name of the variable source</returns>
        </member>
        <member name="F:Ace.Core.Server.Program.VariableString.dataItem">
            <summary>
            Handle to the data item used to expose the variable
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Program.VariableString.source">
            <summary>
            The source of the variable
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Program.VariableString.Source">
            <summary>
            Gets or sets the source for the variable.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Ace.Core.Server.Program.VariableString.ConfigurationType">
            <summary>
            Gets the type of the configuration.
            </summary>
            <value>The type of the configuration.</value>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Program.VariableString"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableString.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableString.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableString.Dispose(System.Boolean)">
            <summary>
            Disposes of the object when it is explicitly disposed or garbage-collected.
            This removes the object from its parent directory.
            </summary>
            <param name="isDisposing">True if the object is being explicitly disposed.
            False if it is being garbage-collected.</param>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableString.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableString.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that 
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Program.VariableString.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Program.VariableString.CurrentValue">
            <summary>
            Gets or sets the current state of the variable.
            </summary>
            <value></value>
        </member>
        <member name="T:Ace.Core.Server.Recipes.Recipe">
            <summary>
            Represents an individual recipe managed by a RecipeManager
            </summary>
        </member>
        <member name="E:Ace.Core.Server.Recipes.Recipe.PropertyModified">
            <summary>
            An event raised when a property is modified. Note that not all properties will throw this event.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Recipes.Recipe.Name">
            <summary>
            Gets or sets the name of the recipe
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.Recipe.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.Recipe.CreationTime">
            <summary>
            Gets the creation time.
            </summary>
            <value>
            The creation time.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.Recipe.ModifiedTime">
            <summary>
            Gets the last modified time.
            </summary>
            <value>
            The last modfiied time.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.Recipe.Image">
            <summary>
            Gets or sets the image associated with the recipe
            </summary>
            <value>
            The image.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.Recipe.UseCustomIdentifier">
            <summary>
            Gets or sets a value indicating whether a custom identifier is used for the recipe
            </summary>
            <value>
              <c>true</c> if the recipe uses a custom identifier; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.Recipe.CustomIdentifier">
            <summary>
            Gets or sets a value indicating the custom identifier 
            </summary>
            <value>
              The identifier
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.Recipe.Components">
            <summary>
            Gets the components associated with the recipe
            </summary>
            <value>
            The components.
            </value>
        </member>
        <member name="M:Ace.Core.Server.Recipes.Recipe.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Recipes.Recipe"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.Recipe.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.Recipe.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>		
        </member>
        <member name="M:Ace.Core.Server.Recipes.Recipe.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.Recipe.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that 
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.Recipe.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.Recipe.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.Recipe.Apply">
            <summary>
            Applies this recipe parameters
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.Recipe.AddComponent(Ace.Core.Server.Recipes.RecipeComponentBase)">
            <summary>
            Adds the component to the recipe
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.Recipe.RemoveComponent(Ace.Core.Server.Recipes.RecipeComponentBase)">
            <summary>
            Remove the component from the recipe
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.Recipe.GetComponent(Ace.Core.Server.Recipes.IRecipeSource)">
            <summary>
            Gets the component associated with the recipe source
            </summary>
            <param name="source">The source.</param>
            <returns>The component or null if no component is defined</returns>
        </member>
        <member name="M:Ace.Core.Server.Recipes.Recipe.OnPropertyModified(System.String)">
            <summary>
            Called when a property is modified.
            </summary>
            <param name="propertyName">Name of the modified property.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.Recipe.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Ace.Core.Server.Recipes.Recipe.component_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the component control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Core.Server.Recipes.RecipeManager">
            <summary>
            Represents an object that manages recipes in the workspace
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.ExposableItems">
            <summary>
            Get the exposable data items
            </summary>
            <returns>The list of exposable items</returns>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.Configurations">
            <summary>
            Gets the configurations managed by the recipe manager.
            </summary>
            <value>
            The configurations.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.Sources">
            <summary>
            Gets the sources associated with the recipe manager
            </summary>
            <value>
            The sources.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.AdeptSightIndex">
            <summary>
            Gets or sets the index used to reference the recipe manager by the AdeptSight V+ protocol
            </summary>
            <value>
            The index used to reference the recipe manager.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.AdeptSightSelectionRecipe">
            <summary>
            Gets or sets the AdeptSight recipe selection index.
            </summary>
            <value>
            The AdeptSight selection recipe.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.ActiveRecipe">
            <summary>
            Gets the currently selected recipe.
            </summary>
            <value>
            The active recipe.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.Recipes">
            <summary>
            Gets the defined recipes associated with the workspace
            </summary>
            <value>
            The recipes.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.RecipeSelectionActive">
            <summary>
            Gets a value indicating whether a recipe selection process is active.
            </summary>
            <value>
            <c>true</c> if the recipe selection process is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.SelectionMessage">
            <summary>
            Gets the recipe selection message encountered in the selection process/
            </summary>
            <value>
            The selection message.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.RunStatus">
            <summary>
            Gets the current run status of the script
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.Identifier">
            <summary>
            Gets the unique identifier associated with the script
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.DebugMode">
            <summary>
            Gets or sets if the script is in debug mode
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.CurrentPosition">
            <summary>
            Gets the current position in the script in debug mode
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.Breakpoints">
            <summary>
            The list of breakpoints in the script.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.Text">
            <summary>
            Gets or sets the text of the C# script. 
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.Errors">
            <summary>
            The errors associated with the last compilation attempt
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.ProtectedLines">
            <summary>
            Gets the list of protected lines
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Recipes.RecipeManager.ExecutionException">
            <summary>
            Gets the exception associated with the execution of the script
            </summary>
            <value>
            The exception.
            </value>
        </member>
        <member name="E:Ace.Core.Server.Recipes.RecipeManager.TextCompiled">
            <summary>
            An event raised when the state of the server changes.
            </summary>
        </member>
        <member name="E:Ace.Core.Server.Recipes.RecipeManager.CurrentLineChanged">
            <summary>
            An event raised when the current line changes.
            </summary>
        </member>
        <member name="E:Ace.Core.Server.Recipes.RecipeManager.TraceMessageReceived">
            <summary>
            Event thrown when a trace message is detected from the remote process
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Recipes.RecipeManager"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>		
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.Dispose(System.Boolean)">
            <summary>
            Dispose of the allocated resources.
            </summary>
            <param name="isDisposing">Is the object being disposed</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.GetConfiguration(Ace.Core.Server.Recipes.IRecipeSource)">
            <summary>
            Gets the configuration associated with the recipe source
            </summary>
            <param name="source">The source.</param>
            <returns>The configuration or null if no configuration is defined</returns>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.AddConfiguration(Ace.Core.Server.Recipes.RecipeConfigurationBase)">
            <summary>
            Adds the configuration from the recipe manager
            </summary>
            <param name="configuration">The configuration to add.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.RemoveConfiguration(Ace.Core.Server.Recipes.RecipeConfigurationBase)">
            <summary>
            Removes the configuration from the recipe manager
            </summary>
            <param name="configuration">The configuration to remove.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.AddRecipe">
            <summary>
            Adds and returns a new recipe.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.AddRecipe(Ace.Core.Server.Recipes.IRecipe)">
            <summary>
            Adds the specified recipe.
            </summary>
            <param name="recipe">The recipe.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.CopyRecipe(System.Int32)">
            <summary>
            Copies a specific recipe.
            </summary>
            <param name="index">The index of the recipe to copy.</param>
            <returns>
            The recipe that was created
            </returns>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.RemoveRecipe(Ace.Core.Server.Recipes.IRecipe)">
            <summary>
            Removes the recipe.
            </summary>
            <param name="recipe">The recipe.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.SerializeRecipe(Ace.Core.Server.Recipes.IRecipe,System.IO.Stream)">
            <summary>
            Serializes the specified recipe.
            </summary>
            <param name="recipe">The recipe to serialize.</param>
            <param name="stream">The stream to serialize into.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.DeserializeRecipe(System.IO.Stream)">
            <summary>
            Deserialize a recipe from the specified stream
            </summary>
            <param name="stream">The stream to deserialize from.</param>
            <returns>
            The recipe or null if no recipe was deserialized.
            </returns>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.UnselectRecipe">
            <summary>
            Unselects the active recipe.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.UnselectRecipe(System.Boolean)">
            <summary>
            Unselects the active recipe.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.SelectRecipe(System.String)">
            <summary>
            Selects the recipe with the specified name
            </summary>
            <param name="recipeName">Name of the recipe.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.SelectRecipe(System.String,System.Boolean)">
            <summary>
            Selects the recipe of the specified name
            </summary>
            <param name="name">The name.</param>
            <param name="waitSelection">if set to <c>true</c> wait until the recipe selection has completed.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.SelectRecipe(Ace.Core.Server.Recipes.IRecipe)">
            <summary>
            Selects the specified recipe.
            </summary>
            <param name="recipe">The recipe to select.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.SelectRecipe(Ace.Core.Server.Recipes.IRecipe,System.Boolean)">
            <summary>
            Selects the specified recipe.
            </summary>
            <param name="recipe">The recipe to select.</param>
            <param name="waitSelection">if set to <c>true</c> wait until the recipe selection has completed.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.SelectRecipeInternal(System.Object)">
            <summary>
            Internal method for selecting a recipe
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.Compile">
            <summary>
            Perform a compilation
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.StepOver">
            <summary>
            Perform a step over operation in debug mode
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.StepIn">
            <summary>
            Perform a step over operation in debug mode
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.Go">
            <summary>
            Perform a step over operation in debug mode
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.SetLine(System.Int32)">
            <summary>
            Sets the current line in the script to the specified line.
            </summary>
            <param name="line">The line to set</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.AddBreakpoint(System.Int32)">
            <summary>
            Add a breakpoint on a line in the script
            </summary>
            <param name="lineNumber">The line number.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.RemoveBreakpoint(System.Int32)">
            <summary>
            Remove a breakpoint from a line in the script
            </summary>
            <param name="lineNumber">The line number.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.ClearTraceMessages">
            <summary>
            Clears trace messages from the script
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.ResolveVariable(System.String[])">
            <summary>
            Find a variable in the script
            </summary>
            <param name="variableStack">The list of the variable stack.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.CanEdit(Ace.Core.Server.Recipes.IRecipe)">
            <summary>
            Called to check if a recipe can be edited.
            </summary>
            <param name="recipe">The recipe that will be edited.</param>
            <returns>An empty string if the recipe can be edited; otherwise a string that will be displayed to the user</returns>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.BeforeEdit(Ace.Core.Server.Recipes.IRecipe)">
            <summary>
            Called before a recipe will be edited
            </summary>
            <param name="recipe">The recipe that will be edited.</param>		
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.AfterEdit(Ace.Core.Server.Recipes.IRecipe)">
            <summary>
            Called after a recipe was edited
            </summary>
            <param name="recipe">The recipe that was edited.</param>		
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.CanSelect(Ace.Core.Server.Recipes.IRecipe)">
            <summary>
            Called to check if a recipe can be selected.
            </summary>
            <param name="recipe">The recipe that will be selected.</param>
            <returns>An empty string if the recipe can be selected; otherwise a string that will be displayed to the user</returns>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.BeforeSelection(Ace.Core.Server.Recipes.IRecipe)">
            <summary>
            Called before a recipe is selected
            </summary>
            <param name="recipe">The recipe that will be selected.</param>		
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.AfterSelection(Ace.Core.Server.Recipes.IRecipe)">
            <summary>
            Called after a recipe is selected
            </summary>
            <param name="recipe">The recipe that was selected.</param>		
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.ExecuteOperation">
            <summary>
            Executes a script operation.
            </summary>
            <returns>Return string from the script</returns>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.ExecuteOperationInternal">
            <summary>
            Performs a "Can" call.
            </summary>
            <returns>Was the operation successful</returns>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.GenerateUniqueRecipeName">
            <summary>
            Generates the name of the unique recipe.
            </summary>
            <returns>A unique recipe name</returns>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.InitializeScript">
            <summary>
            Initializes the script.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.UpdateCurrentLine(System.Int32)">
            <summary>
            Updates the current line.
            </summary>
            <param name="lineNumber">The line number.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.UpdateCurrentLine(Ace.Core.Server.Scripting.Debug.ISourcePosition)">
            <summary>
            Updates the current line.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.CanPerformStepOperation">
            <summary>
            Determines whether the script is in a state where it can perform a step operation.
            </summary>
            <returns>
            	<c>true</c> if a step operation is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.CheckForCompile(System.Boolean)">
            <summary>
            Checks to see if the script for compile.
            </summary>
            <param name="throwOnError">if set to <c>true</c> an exception is generated if a compilation error is encountered.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.configuration_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the configuration control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.recipe_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the recipe control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.AceServer_CollectionChanged(System.Object,Ace.Core.Server.Event.ContentsChangeEventArgs)">
            <summary>
            Handles the CollectionChanged event of the AceServer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.ContentsChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.domainHelper_CurrentLineChange(System.Object,Ace.Core.Server.Scripting.CurrentLineChangeEventArgs)">
            <summary>
            Handles the CurrentLineChange event of the domainHelper control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Scripting.CurrentLineChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.Recipes.RecipeManager.domainHelper_TraceMessageReceived(System.Object,Ace.Core.Util.LogEventArgs)">
            <summary>
            Handles the TraceMessageReceived event of the domainHelper control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Util.LogEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Core.Server.Recipes.RecipeManager.ExecutionParameters">
            <summary>
            Class used to track parameters for a method call
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Scripting.CSharpProgram">
            <summary>
            Represents a C# program object
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.DefaultNamespace">
            <summary>
            The default namespace to which the generated class belongs
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.TaskName">
            <summary>
            Gets the name of the task that will be displayed in the Task Status Control.
            </summary>
            <value>
            The name of the task.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.DefaultClassName">
            <summary>
            The default class name of the generated program
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.DefaultEntryMethod">
            <summary>
            The default class name of the generated program
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.DefaultUsingNamespaces">
            <summary>
            Gets a list of the default using namespaces.
            </summary>
            <value>The default using namespace.</value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.RunStatus">
            <summary>
            Gets the current run status of the script
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.Identifier">
            <summary>
            Gets the unique identifier associated with the script
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.DebugMode">
            <summary>
            Gets or sets if the script is in debug mode
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.CurrentPosition">
            <summary>
            Gets the current position in the script in debug mode
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.Breakpoints">
            <summary>
            The list of breakpoints in the script.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.ProtectedLines">
            <summary>
            Gets the list of protected lines
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.CompiledDllPath">
            <summary>
            Gets the path to the compiled dll.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.ExposableItems">
            <summary>
            Get the exposable data items
            </summary>
            <returns>The list of exposable items</returns>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.Errors">
            <summary>
            The errors associated with the last compilation attempt
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.Text">
            <summary>
            Gets or sets the startup commands for the interpreter. These commands are executed at startup and
            whenever the interpreter is reset.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.TaskVisible">
            <summary>
            Gets a flag indicating whether the property should shown in the task
            status control as an executable program. By default, returns "true".
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.ShowsProgress">
            <summary>
            Gets a flag indicating whether the program object will show progress when preparing  or aborting.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.CSharpProgram.ExecutionException">
            <summary>
            Gets the exception associated with the execution of the script
            </summary>
            <value>
            The exception.
            </value>
        </member>
        <member name="E:Ace.Core.Server.Scripting.CSharpProgram.TextCompiled">
            <summary>
            An event raised when the state of the server changes.
            </summary>
        </member>
        <member name="E:Ace.Core.Server.Scripting.CSharpProgram.CurrentLineChanged">
            <summary>
            An event raised when the current line changes.
            </summary>
        </member>
        <member name="E:Ace.Core.Server.Scripting.CSharpProgram.TraceMessageReceived">
            <summary>
            Event thrown when a trace message is received from a running script
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.#ctor(System.Collections.Generic.List{System.String},System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.CSharpProgram"/> class.
            </summary>
            <param name="usingNamespaces">The using namespaces.</param>
            <param name="namespaceName">Name of the namespace.</param>
            <param name="className">Name of the class.</param>
            <param name="isPartial">if set to <c>true</c> [is partial].</param>
            <param name="entryMethod">The entry method.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.InitializeText(System.Collections.Generic.List{System.String},System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes the text.
            </summary>
            <param name="usingNamespaces">The using namespaces.</param>
            <param name="namespaceName">Name of the namespace.</param>
            <param name="className">Name of the class.</param>
            <param name="isPartial">if set to <c>true</c> [is partial].</param>
            <param name="entryMethod">The entry method.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>		
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.Instance_CollectionChanged(System.Object,Ace.Core.Server.Event.ContentsChangeEventArgs)">
            <summary>
            Mark that the workspace has changed so we can force a recompile on next execution
            </summary>
            <param name="sender">Object generating the event</param>
            <param name="e">The event details</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.domainHelper_CurrentLineChange(System.Object,Ace.Core.Server.Scripting.CurrentLineChangeEventArgs)">
            <summary>
            Handles the CurrentLineChange event of the domainHelper control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Scripting.CurrentLineChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.domainHelper_TraceMessageReceived(System.Object,Ace.Core.Util.LogEventArgs)">
            <summary>
            Handles the TraceMessageReceived event of the domainHelper control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Util.LogEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.TaskManager_TaskStateChanged(System.Object,Ace.Core.Server.Program.TaskStateChangeEventArgs)">
            <summary>
            Handles the TaskStateChanged event of the TaskManager control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Program.TaskStateChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.UpdateCurrentLine(System.Int32)">
            <summary>
            Updates the current line.
            </summary>
            <param name="lineNumber">The line number.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.UpdateCurrentLine(Ace.Core.Server.Scripting.Debug.ISourcePosition)">
            <summary>
            Updates the current line.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.CanPerformStepOperation">
            <summary>
            Determines whether the script is in a state where it can perform a step operation.
            </summary>
            <returns>
            	<c>true</c> if a step operation is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.Dispose(System.Boolean)">
            <summary>
            Dispose of the allocated resources.
            </summary>
            <param name="isDisposing">Is the object being disposed</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.CheckDomainHelper">
            <summary>
            Checks the domain helper.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.Compile">
            <summary>
            Perform a compilation
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.Execute">
            <summary>
            Performs the operation of the program. You must override
            one of the Execute methods, typically this one.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.ExecuteInternal">
            <summary>
            Performs the operation of the program. 
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.Abort">
            <summary>
            Requests the program to abort the operation.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.Abort(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Requests the program to abort the operation.
            </summary>
            <param name="progressHandler">The progress handler.</param>		
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.Prepare">
            <summary>
            Initialize the program before execution starts. If the program object throws an exception, the execution sequence will be aborted.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.Prepare(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Initialize the program before execution starts. If the program object throws an exception, the execution sequence will be aborted.
            </summary>
            <param name="progressHandler">The progress handler.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.StepOver">
            <summary>
            Perform a step over operation in debug mode
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.StepIn">
            <summary>
            Perform a step over operation in debug mode
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.Go">
            <summary>
            Perform a step over operation in debug mode
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.SetLine(System.Int32)">
            <summary>
            Sets the current line in the script to the specified line.
            </summary>
            <param name="line">The line to set</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.AddBreakpoint(System.Int32)">
            <summary>
            Add a breakpoint on a line in the script
            </summary>
            <param name="lineNumber">The line number.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.RemoveBreakpoint(System.Int32)">
            <summary>
            Remove a breakpoint from a line in the script
            </summary>
            <param name="lineNumber">The line number.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.ResolveVariable(System.String[])">
            <summary>
            Find a variable in the script
            </summary>
            <param name="variableStack">The list of the variable stack.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.CSharpProgram.ClearTraceMessages">
            <summary>
            Clears trace messages from the script
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.AutoVariableListOperation">
            <summary>
            Class to read all the auto variables
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.AutoVariableListOperation.variables">
            <summary>
            The variable names
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.AutoVariableListOperation.Variables">
            <summary>
            Gets the variable names
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.AutoVariableListOperation.#ctor(Ace.Core.Server.Scripting.Debug.DebugHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.AutoVariableListOperation"/> class.
            </summary>
            <param name="stackMonitor">The stack monitor.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.AutoVariableListOperation.Execute">
            <summary>
            Executes the operation.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.BreakpointOperation">
            <summary>
            Commands for breakpoint management
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.BreakpointOperation.Operation">
            <summary>
            The possible operations
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.BreakpointOperation.Operation.Add">
            <summary>
            Add 1 breakpoint
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.BreakpointOperation.Operation.Remove">
            <summary>
            Remove 1 breakpoint
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.BreakpointOperation.Operation.RemoveAll">
            <summary>
            Remove all
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.BreakpointOperation.fileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.BreakpointOperation.lineNumber">
            <summary>
            The line number
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.BreakpointOperation.operation">
            <summary>
            The operation
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.BreakpointOperation.addedBreakpoint">
            <summary>
            The breakpoint that was added
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.BreakpointOperation.AddedBreakpoint">
            <summary>
            Gets the added breakpoint.
            </summary>
            <value>The added breakpoint.</value>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.BreakpointOperation.#ctor(Ace.Core.Server.Scripting.Debug.DebugHelper,Ace.Core.Server.Scripting.Debug.BreakpointOperation.Operation,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.BreakpointOperation"/> class.
            </summary>
            <param name="stackMonitor">The stack monitor.</param>
            <param name="oper">The operation.</param>
            <param name="file">The file.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.BreakpointOperation.Execute">
            <summary>
            Executes the operation.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.ControlOperation">
            <summary>
            Commands for step control operations
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.ControlOperation.Operation">
            <summary>
            The possible operations
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.ControlOperation.Operation.StepInto">
            <summary>
            Step into
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.ControlOperation.Operation.StepOut">
            <summary>
            Step  out
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.ControlOperation.Operation.StepOver">
            <summary>
            Step over
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.ControlOperation.Operation.Go">
            <summary>
            Go
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.ControlOperation.operation">
            <summary>
            The operation
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.ControlOperation.#ctor(Ace.Core.Server.Scripting.Debug.DebugHelper,Ace.Core.Server.Scripting.Debug.ControlOperation.Operation)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.ControlOperation"/> class.
            </summary>
            <param name="stackMonitor">The stack monitor.</param>
            <param name="oper">The operation.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.ControlOperation.Execute">
            <summary>
            Executes the operation.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.DebugHelper">
            <summary>
            Helper class used to monitor and debug a process
            In the CSharp Script Editor class, which is the main user of this object,
            we deal with 0-based line numbers.
            The MDBG engine is dealing with 1-based line numbers.
            To handle that, all public methods and properties must expose 0-based line numbers.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.DebugHelper.backgroundThread">
            <summary>
            Thread that issues all MDbg operations
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.DebugHelper.backgroundThreadRun">
            <summary>
            Flag indicating if the background thread should run
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.DebugHelper.backgroundProcessInitialized">
            <summary>
            Flag indicating the background task has completed the initialization
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.DebugHelper.syncObject">
            <summary>
            Synchronization object used to ensure commands are not invoked
            when the object is being disposed. This can result in a lockup
            condition.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.DebugHelper.operations">
            <summary>
            Queue of operations to perform
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.DebugHelper.processID">
            <summary>
            The process ID of the process being monitored
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.DebugHelper.debugVersion">
            <summary>
            The version information used to initialize the debugger
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.DebugHelper.process">
            <summary>
            Handle to the process being debugged
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.DebugHelper.Process">
            <summary>
            Get the handle to the process being debugged
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.DebugHelper.engine">
            <summary>
            Handle to the debugger
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.DebugHelper.Engine">
            <summary>
            Gets the handle to the debugger.
            </summary>
            <value>The engine.</value>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.DebugHelper.breakpointList">
            <summary>
            The list of breakpoints in the process
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.DebugHelper.BreakpointList">
            <summary>
            Gets the list of breakpoints in the process
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.DebugHelper.Breakpoints">
            <summary>
            Gets the breakpoints.
            </summary>
            <value>The breakpoints.</value>
        </member>
        <member name="E:Ace.Core.Server.Scripting.Debug.DebugHelper.BreakpointDetected">
            <summary>
            Event thrown when a breakpoint is detected
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.DebugHelper"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.AttachProcess(System.Int32)">
            <summary>
            Attaches the process.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.Go">
            <summary>
            Performs a Go operation
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.Go(System.Boolean)">
            <summary>
            Performs a Go operation
            </summary>
            <param name="wait">if set to <c>true</c> execution waits until the command is done.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.StepInto">
            <summary>
            Performs a Step Into operation
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.StepInto(System.Boolean)">
            <summary>
            Performs a Step Into operation
            </summary>
            <param name="wait">if set to <c>true</c> execution waits until the command is done.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.StepOver">
            <summary>
            Performs a Step Over operation
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.StepOver(System.Boolean)">
            <summary>
            Performs a Step Over operation
            </summary>
            <param name="wait">if set to <c>true</c> execution waits until the command is done.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.StepOut">
            <summary>
            Performs a Step Out operation
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.StepOut(System.Boolean)">
            <summary>
            Performs a Step Out operation
            </summary>
            <param name="wait">if set to <c>true</c> execution waits until the command is done.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.SetLine(System.Int32)">
            <summary>
            Sets the current line in the script to the specified line.
            </summary>
            <param name="line">The line to set</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.GetCurrentLineOnActiveThread">
            <summary>
            Update the current line number
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.GetStackOnActiveThread">
            <summary>
            Gets the stack for the currently active thread.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.GetStack(System.Int32)">
            <summary>
            Gets the stack.
            </summary>
            <param name="threadIndex">Index of the thread. -1 indicates the current active thread.</param>
            <returns>The stack information</returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.AddBreakpoint(System.String,System.Int32)">
            <summary>
            Adds the breakpoint.
            </summary>
            <param name="file">The file to which the breakpoint is added.</param>
            <param name="line">The line number to add.</param>
            <returns>The breakpoint position or null if one was not added</returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.RemoveBreakpoint(System.String,System.Int32)">
            <summary>
            Remove the breakpoint.
            </summary>
            <param name="file">The file to which the breakpoint is removed.</param>
            <param name="line">The line number to remove.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.RemoveAllBreakpoints">
            <summary>
            Removes all the breakpoints.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.ResolveVariable(System.String[])">
            <summary>
            Find a variable in the script
            </summary>
            <param name="variableStack">The list of the variable stack.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.BackgroundThread">
            <summary>
            Backgrounds the thread.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.AttachToProcess">
            <summary>
            Attaches to the process being debugged.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.QueueOperation(Ace.Core.Server.Scripting.Debug.DebugOperation)">
            <summary>
            Queues the operation for processing
            </summary>
            <param name="operation">The operation.</param>
            <returns>Was the operation successfully queued.</returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.GetNextOperation">
            <summary>
            Gets the next operation for processing.
            </summary>
            <returns>The operation or null if no operation to process</returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugHelper.CorProcess_OnBreakpoint(System.Object,Microsoft.Samples.Debugging.CorDebug.CorBreakpointEventArgs)">
            <summary>
            Handles the OnBreakpoint event of the CorProcess control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Microsoft.Samples.Debugging.CorDebug.CorBreakpointEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.DebugOperation">
            <summary>
            An operation to be performed by the stack monitor
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.DebugOperation.eventHandle">
            <summary>
            Event used to sequence when the event is done
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.DebugOperation.monitor">
            <summary>
            The stack monitor 
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugOperation.#ctor(Ace.Core.Server.Scripting.Debug.DebugHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.DebugOperation"/> class.
            </summary>
            <param name="stackMonitor">The stack monitor.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugOperation.Execute">
            <summary>
            Executes the operation.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.DebugOperation.WaitDone">
            <summary>
            Wait for the event to complete
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.FindVariableOperation">
            <summary>
            Class to find a variable on the thread stack frame
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.FindVariableOperation.name">
            <summary>
            The variable name
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.FindVariableOperation.variable">
            <summary>
            Handle to the 
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.FindVariableOperation.Variable">
            <summary>
            Gets a handle to the variable
            </summary>
            <value>The variable.</value>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.FindVariableOperation.#ctor(Ace.Core.Server.Scripting.Debug.DebugHelper,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.FindVariableOperation"/> class.
            </summary>
            <param name="stackMonitor">The stack monitor.</param>
            <param name="variableName">Name of the variable.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.FindVariableOperation.Execute">
            <summary>
            Executes the operation.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.GetSourcePositionOperation">
            <summary>
            Commands for getting the current line
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.GetSourcePositionOperation.Position">
            <summary>
            Gets the current position
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.GetSourcePositionOperation.#ctor(Ace.Core.Server.Scripting.Debug.DebugHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.GetSourcePositionOperation"/> class.
            </summary>
            <param name="stackMonitor">The stack monitor.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.GetSourcePositionOperation.Execute">
            <summary>
            Executes the operation.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.ResolveVariableOperation">
            <summary>
            Class to resolve a variable on the thread stack frame
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.ResolveVariableOperation.variableStack">
            <summary>
            The variable stack information
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.ResolveVariableOperation.variable">
            <summary>
            Handle to the 
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.ResolveVariableOperation.Variable">
            <summary>
            Gets a handle to the variable
            </summary>
            <value>The variable.</value>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.ResolveVariableOperation.#ctor(Ace.Core.Server.Scripting.Debug.DebugHelper,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.FindVariableOperation"/> class.
            </summary>
            <param name="stackMonitor">The stack monitor.</param>
            <param name="stack">The stack.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.ResolveVariableOperation.Execute">
            <summary>
            Executes the operation.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.SelectThreadOperation">
            <summary>
            Class to select a thread operation
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.SelectThreadOperation.threadIdx">
            <summary>
            Index of the thread to access
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.SelectThreadOperation.#ctor(Ace.Core.Server.Scripting.Debug.DebugHelper,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.SelectThreadOperation"/> class.
            </summary>
            <param name="stackMonitor">The stack monitor.</param>
            <param name="threadIndex">Index of the thread.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.SelectThreadOperation.Execute">
            <summary>
            Executes the operation.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.SetLineOperation">
            <summary>
            Commands for setting the current line
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.SetLineOperation.line">
            <summary>
            The new line 
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.SetLineOperation.#ctor(Ace.Core.Server.Scripting.Debug.DebugHelper,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.SetLineOperation"/> class.
            </summary>
            <param name="stackMonitor">The stack monitor.</param>
            <param name="lineNumber">The line number.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.SetLineOperation.Execute">
            <summary>
            Executes the operation.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.StackOperation">
            <summary>
            Class to extract the stack information
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.StackOperation.threadIdx">
            <summary>
            Index of the thread to access
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.StackOperation.stackInformation">
            <summary>
            The current stack information
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.StackOperation.StackInformation">
            <summary>
            Gets the stack listing.
            </summary>
            <value>The stack listing.</value>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.StackOperation.#ctor(Ace.Core.Server.Scripting.Debug.DebugHelper,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.StackOperation"/> class.
            </summary>
            <param name="stackMonitor">The stack monitor.</param>
            <param name="threadIndex">Index of the thread.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.StackOperation.Execute">
            <summary>
            Executes the operation.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.StackPosition">
            <summary>
            A listing of the stack position
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.StackPosition.knownPosition">
            <summary>
            Is the stack position known
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.StackPosition.endColumn">
            <summary>
            The end column.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.StackPosition.EndColumn">
            <summary>
            Gets the end column.
            </summary>
            <value>The end column.</value>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.StackPosition.endLine">
            <summary>
            The end line.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.StackPosition.EndLine">
            <summary>
            Gets the end line.
            </summary>
            <value>The end line.</value>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.StackPosition.isSpecial">
            <summary>
            Is this instance is special.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.StackPosition.IsSpecial">
            <summary>
            Gets a value indicating whether this instance is special.
            </summary>
            <value>
            	<c>true</c> if this instance is special; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.StackPosition.line">
            <summary>
            Gets the line.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.StackPosition.Line">
            <summary>
            Gets the line.
            </summary>
            <value>The line.</value>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.StackPosition.path">
            <summary>
            Gets the path.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.StackPosition.Path">
            <summary>
            Gets the path.
            </summary>
            <value>The path.</value>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.StackPosition.startColumn">
            <summary>
            Gets the start column.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.StackPosition.StartColumn">
            <summary>
            Gets the start column.
            </summary>
            <value>The start column.</value>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.StackPosition.startLine">
            <summary>
            Gets the start line.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.StackPosition.StartLine">
            <summary>
            Gets the start line.
            </summary>
            <value>The start line.</value>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.StackPosition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.StackPosition"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.StackPosition.#ctor(Microsoft.Samples.Debugging.MdbgEngine.MDbgSourcePosition)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.StackPosition"/> class.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.StackPosition.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Core.Server.Scripting.Debug.VariableDescriptor">
            <summary>
            Wrapper class providing details on a variable in a script
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.VariableDescriptor.variableName">
            <summary>
            The name of the variable
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.VariableDescriptor.typeName">
            <summary>
            The type name of the variable
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.VariableDescriptor.toStringValue">
            <summary>
            The "ToString" value of the variable
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Scripting.Debug.VariableDescriptor.variable">
            <summary>
            Handle to the variable being wrapped
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.VariableDescriptor.Variable">
            <summary>
            Gets a handle to the variable being wrapped
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.VariableDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.VariableDescriptor"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.VariableDescriptor.#ctor(Microsoft.Samples.Debugging.MdbgEngine.MDbgValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.Debug.VariableDescriptor"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.Debug.VariableDescriptor.SetToStringValue(System.String)">
            <summary>
            Sets the value used when reporting the string value of the variable.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.VariableDescriptor.IsArrayType">
            <summary>
            Gets a value indicating whether this instance is array type.
            </summary>
            <value>
            	<c>true</c> if this instance is array type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.VariableDescriptor.IsComplexType">
            <summary>
            Gets a value indicating whether this instance is complex type.
            </summary>
            <value>
            	<c>true</c> if this instance is complex type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.VariableDescriptor.IsNull">
            <summary>
            Gets a value indicating whether this instance is null.
            </summary>
            <value><c>true</c> if this instance is null; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.VariableDescriptor.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.VariableDescriptor.TypeName">
            <summary>
            Gets the name of the type.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.Debug.VariableDescriptor.Value">
            <summary>
            Gets the value of the variable in string format
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Ace.Core.Server.Scripting.SafeThread">
            <summary>
            Wrapper class that provides safe thread execution for a C# script.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.#ctor(System.Threading.ParameterizedThreadStart)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.SafeThread"/> class.
            </summary>
            <param name="start">The start.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.#ctor(System.Threading.ThreadStart)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Scripting.SafeThread"/> class.
            </summary>
            <param name="start">The start.</param>
        </member>
        <member name="P:Ace.Core.Server.Scripting.SafeThread.IsAlive">
            <summary>
            Gets a value indicating the execution status of the current thread.
            </summary>
            <value>
              <c>true</c> if this thread has been started and has not terminated normally or aborted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.SafeThread.IsBackground">
            <summary>
            Gets or sets a value indicating whether or not a thread is a background thread.
            </summary>
            <value>
            <c>true</c> if this thread is or is to become a background thread; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.SafeThread.IsThreadPoolThread">
            <summary>
            Gets a value indicating whether or not a thread belongs to the managed thread pool.
            </summary>
            <value>
            <c>true</c> if this thread belongs to the managed thread pool; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.SafeThread.ManagedThreadId">
            <summary>
            Gets a unique identifier for the current managed thread.
            </summary>
            <value>
            An integer that represents a unique identifier for this managed thread.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.SafeThread.Name">
            <summary>
             Gets or sets the name of the thread.
            </summary>
            <value>
            A string containing the name of the thread, or null if no name was set.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.SafeThread.Priority">
            <summary>
            Gets or sets a value indicating the scheduling priority of a thread.
            </summary>
            <value>
             One of the System.Threading.ThreadPriority values. The default value is Normal.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.SafeThread.ThreadState">
            <summary>
            Gets a value containing the states of the current thread.
            </summary>
            <value>
            One of the System.Threading.ThreadState values indicating the state of the current thread. The initial value is Unstarted.
            </value>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.Abort">
            <summary>
            Raises a System.Threading.ThreadAbortException in the thread on which it
            is invoked, to begin the process of terminating the thread. Calling this
            method usually terminates the thread.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.Abort(System.Object)">
            <summary>
            Raises a System.Threading.ThreadAbortException in the thread on which it
            is invoked, to begin the process of terminating the thread. Calling this
            method usually terminates the thread.
            </summary>
            <param name="stateInfo">An object that contains application-specific information, such as state, which can be used by the thread being aborted</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.Interrupt">
            <summary>
            Interrupts a thread that is in the WaitSleepJoin thread state.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.Join">
            <summary>
             Blocks the calling thread until a thread terminates, while continuing to perform standard COM and SendMessage pumping.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.Join(System.Int32)">
            <summary>
            Blocks the calling thread until a thread terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.
            </summary>
            <param name="millisecondsTimeout">The number of milliseconds to wait for the thread to terminate.</param>
            <returns>/// true if the thread terminated; false if the thread has not terminated after the amount of time specified by the timeout parameter has elapsed.</returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.Join(System.TimeSpan)">
            <summary>
            Blocks the calling thread until a thread terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.
            </summary>
            <param name="timeout">The number of milliseconds to wait for the thread to terminate.</param>
            <returns>
            true if the thread terminated; false if the thread has not terminated after the amount of time specified by the timeout parameter has elapsed.
            </returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.Start">
            <summary>
            Causes the operating system to change the state of the current instance to System.Threading.ThreadState.Running.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.Start(System.Object)">
            <summary>
            Causes the operating system to change the state of the current instance to System.Threading.ThreadState.Running, and optionally supplies an object containing data to be used by the method the thread executes.
            </summary>
            <param name="parameter">An object that contains data to be used by the method the thread executes.</param>
        </member>
        <member name="P:Ace.Core.Server.Scripting.SafeThread.CurrentContext">
            <summary>
             Gets the current context in which the thread is executing.
            </summary>
            <value>
            A System.Runtime.Remoting.Contexts.Context representing the current thread context.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.SafeThread.CurrentCulture">
            <summary>
            Gets or sets the culture for the current thread.
            </summary>
            <value>
            A System.Globalization.CultureInfo representing the culture for the current thread.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.SafeThread.CurrentPrincipal">
            <summary>
             Gets or sets the thread's current principal (for role-based security).
            </summary>
            <value>
             An System.Security.Principal.IPrincipal value representing the security context.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.SafeThread.CurrentThread">
            <summary>
            Gets the currently running thread.
            </summary>
            <value>
            A System.Threading.Thread that is the representation of the currently running thread.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.SafeThread.CurrentUICulture">
            <summary>
            Gets or sets the current culture used by the Resource Manager to look up culture-specific resources at run time.
            </summary>
            <value>
            A System.Globalization.CultureInfo representing the current culture.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Scripting.SafeThread.ExecutionContext">
            <summary>
            Gets an System.Threading.ExecutionContext object that contains information about the various contexts of the current thread.
            </summary>
            <value>
            An System.Threading.ExecutionContext object that consolidates context information for the current thread.
            </value>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.AllocateDataSlot">
            <summary>
            Allocates an unnamed data slot on all the threads. For better performance,
            use fields that are marked with the System.ThreadStaticAttribute attribute
            instead.
            </summary>
            <returns>A System.LocalDataStoreSlot.</returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.AllocateNamedDataSlot(System.String)">
            <summary>
            Allocates an unnamed data slot on all the threads. For better performance,
            use fields that are marked with the System.ThreadStaticAttribute attribute
            instead.
            </summary>
            <param name="name">The name of the data slot to be allocated.</param>
            <returns>
            A System.LocalDataStoreSlot.
            </returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.BeginCriticalRegion">
            <summary>
            Notifies a host that execution is about to enter a region of code in which
            the effects of a thread abort or unhandled exception might jeopardize other
            tasks in the application domain.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.BeginThreadAffinity">
            <summary>
            Notifies a host that managed code is about to execute instructions that depend
            on the identity of the current physical operating system thread.		
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.DisableComObjectEagerCleanup">
            <summary>
            Turns off automatic cleanup of runtime callable wrappers (RCW) for the current
            thread.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.EndCriticalRegion">
            <summary>
            Notifies a host that execution is about to enter a region of code in which
            the effects of a thread abort or unhandled exception are limited to the current
            task.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.EndThreadAffinity">
            <summary>
            Notifies a host that managed code has finished executing instructions that
            depend on the identity of the current physical operating system thread.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.FreeNamedDataSlot(System.String)">
            <summary>
            Eliminates the association between a name and a slot, for all threads in
            the process. For better performance, use fields that are marked with the
            System.ThreadStaticAttribute attribute instead.
            </summary>
            <param name="name">The name of the data slot to be freed.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.GetApartmentState">
            <summary>
            Returns an System.Threading.ApartmentState value indicating the apartment
            state.
            </summary>
            <returns>
            One of the System.Threading.ApartmentState values indicating the apartment
            state of the managed thread. The default is System.Threading.ApartmentState.Unknown.
            </returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.GetData(System.LocalDataStoreSlot)">
            <summary>
            Retrieves the value from the specified slot on the current thread, within
            the current thread's current domain. For better performance, use fields that
            are marked with the System.ThreadStaticAttribute attribute instead.
            </summary>
            <param name="slot">The System.LocalDataStoreSlot from which to get the value.</param>
            <returns>The retrieved value.</returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.GetDomain">
            <summary>
            Returns the current domain in which the current thread is running.
            </summary>
            <returns>An System.AppDomain representing the current application domain of the running thread.</returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.GetDomainID">
            <summary>
            Returns a unique application domain identifier.
            </summary>
            <returns>A 32-bit signed integer uniquely identifying the application domain.</returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.GetHashCode">
            <summary>
            Returns a hash code for the current thread.
            </summary>
            <returns>
            An integer hash code value.
            </returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.GetNamedDataSlot(System.String)">
            <summary>
             Looks up a named data slot. For better performance, use fields that are marked with the System.ThreadStaticAttribute attribute instead.
            </summary>
            <param name="name">The name of the local data slot.</param>
            <returns>A System.LocalDataStoreSlot allocated for this thread.</returns>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.MemoryBarrier">
            <summary>
            Synchronizes memory access as follows: The processor executing the current
            thread cannot reorder instructions in such a way that memory accesses prior
            to the call to System.Threading.Thread.MemoryBarrier() execute after memory
            accesses that follow the call to System.Threading.Thread.MemoryBarrier().
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.ResetAbort">
            <summary>
            Cancels an System.Threading.Thread.Abort(System.Object) requested for the current thread.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.SetApartmentState(System.Threading.ApartmentState)">
            <summary>
            Sets the apartment state of a thread before it is started.
            </summary>
            <param name="state">The new apartment state.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.SetData(System.LocalDataStoreSlot,System.Object)">
            <summary>
            Sets the data in the specified slot on the currently running thread, for
            that thread's current domain. For better performance, use fields marked with
            the System.ThreadStaticAttribute attribute instead.
            </summary>
            <param name="slot">The System.LocalDataStoreSlot in which to set the value.</param>
            <param name="data">The value to be set.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.Sleep(System.Int32)">
            <summary>
            Suspends the current thread for a specified time.
            </summary>
            <param name="millisecondsTimeout">
            The number of milliseconds for which the thread is blocked. Specify zero
            (0) to indicate that this thread should be suspended to allow other waiting
            threads to execute. Specify System.Threading.Timeout.Infinite to block the
            thread indefinitely.
            </param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.Sleep(System.TimeSpan)">
            <summary>
            Blocks the current thread for a specified time.
            </summary>
            <param name="timeout">
            A System.TimeSpan set to the amount of time for which the thread is blocked.
            Specify zero to indicate that this thread should be suspended to allow other
            waiting threads to execute. Specify System.Threading.Timeout.Infinite to
            block the thread indefinitely.
            </param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.SpinWait(System.Int32)">
            <summary>
            Causes a thread to wait the number of times defined by the iterations parameter.
            </summary>
            <param name="iterations">A 32-bit signed integer that defines how long a thread is to wait.</param>
        </member>
        <member name="M:Ace.Core.Server.Scripting.SafeThread.SafeExecute">
            <summary>
            Executes the thread method safely.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Sim3d.Box">
            <summary>
            A simple 3D box. The location of the box gives its center.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Sim3d.Box.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Sim3d.Box.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Sim3d.Box.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Sim3d.Box.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that 
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.Box.DX">
            <summary>
            Gets or sets the size of the box along the X axis (mm). The base extends from -DX/2 to DX/2.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.Box.DY">
            <summary>
            Gets or sets the size of the box along the Y axis. The base extends from -DY/2 to DY/2.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.Box.DZ">
            <summary>
            Gets or sets the height of the box along the Z axis (mm). The box extends from -DZ/2 to DZ/2.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.Box.Color">
            <summary>
            Gets or sets the color of the box.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.Box.CollisionProgram">
            <summary>
            Gets or sets the program that is called when a collision is detected
            </summary>
            <value>
            The collision program.
            </value>
        </member>
        <member name="M:Ace.Core.Server.Sim3d.Box.NotifyCollision">
            <summary>
            Called to notify that a collision has occured
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Sim3d.CadData">
            <summary>
            A stereo lithography mesh file
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.CadData.WavefrontFileName">
            <summary>
            Gets the name of the Wavefront file the data was obtained from
            </summary>
            <value>
            The segments.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.CadData.WavefrontData">
            <summary>
            Gets the wavefront data associated with the display
            </summary>
            <value>
            The segments.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.CadData.MaterialData">
            <summary>
            Gets the wavefront material data associated with the wavefront data
            </summary>
            <value>
            The segments.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.CadData.DrawTransform">
            <summary>
            Gets or sets a transform offset to apply to all vertex data
            </summary>
            <value>
            The segments.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.CadData.DrawOffset">
            <summary>
            Gets or sets an offset to apply to all vertex data
            </summary>
            <value>
            The segments.
            </value>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.CadData.Links">
            <summary>
            A list of objects that can be linked with.
            </summary>
            <remarks>
            When an object is linked, the linked object will set the parent property to the I3DConnctable object.
            </remarks>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.CadData.Mounts">
            <summary>
            A list of objects that can be mounted on.
            </summary>
            <remarks>
            When an object is mounted, the I3DConnctable object will set the parent property to the linked object.
            </remarks>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.CadData.CollisionProgram">
            <summary>
            Gets or sets the program that is called when a collision is detected
            </summary>
            <value>
            The collision program.
            </value>
        </member>
        <member name="M:Ace.Core.Server.Sim3d.CadData.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Sim3d.CadData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Sim3d.CadData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Sim3d.CadData.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that 
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Sim3d.CadData.UpdateData(System.String)">
            <summary>
            Updates the data with the wavefront file
            </summary>
            <param name="fileName">The wavefront file</param>
        </member>
        <member name="M:Ace.Core.Server.Sim3d.CadData.NotifyCollision">
            <summary>
            Called to notify that a collision has occured
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Sim3d.Cylinder">
            <summary>
            A simple 3D cylinder. The location of the cylinder gives its center.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Sim3d.Cylinder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Sim3d.Cylinder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Sim3d.Cylinder.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.Cylinder.Radius">
            <summary>
            Gets or sets the radius of the cylinder (mm).
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.Cylinder.Height">
            <summary>
            Gets or sets the height of the cylinder (mm).
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Sim3d.Cylinder.Color">
            <summary>
            Gets or sets the color of the box.
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Startup.DataMapper">
            <summary>
            Represents a collection of DataMap objects.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Startup.DataMapper.DataMaps">
            <summary>
            Gets the list of maps associated with the source
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Startup.DataMapper.Paused">
            <summary>
            Gets or sets a value indicating whether the mapping is paused.
            </summary>
            <value>
              <c>true</c> if paused; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Startup.DataMapStartupSource"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.Initialize">
            <summary>
            Initialize the source. Called in normal Ace initialization sequence.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.GetReferences">
            <summary>
            Gets the references.
            </summary>
            <returns>The references maintained by the object</returns>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.AddMap(Ace.Core.Server.Startup.IDataMap)">
            <summary>
            Adds the map to the startup source.
            </summary>
            <param name="map">The map to add.</param>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.RemoveMap(Ace.Core.Server.Startup.IDataMap)">
            <summary>
            Removes the map from the startup source.
            </summary>
            <param name="map">The map to remove.</param>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.StartMonitoring">
            <summary>
            Starts the monitoring of the triggers
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.StopMonitoring">
            <summary>
            Stops the monitoring of the triggers
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.BackgroundMain">
            <summary>
            The background program monitoring the triggers.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.ProcessMapping">
            <summary>
            Processes the maps associated with the data source
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.map_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the map control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.Root_ContentsChanged(System.Object,Ace.Core.Server.Event.ContentsChangeEventArgs)">
            <summary>
            Handles the ContentsChanged event of the Root control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.ContentsChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapper.AceServer_WorkspaceLoad(System.Object,Ace.Core.Server.Event.WorkspaceLoadEventArgs)">
            <summary>
            Handles the WorkspaceLoad event of the aceServer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.WorkspaceLoadEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Core.Server.Startup.DataMapStartupSource">
            <summary>
            Represents a startup object that monitors a collection of data map objects. 
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapStartupSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Startup.DataMapStartupSource"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.DataMapStartupSource.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Core.Server.Startup.ProgramSystemStartupSource">
            <summary>
            Source object for starting/stopping 
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Startup.ProgramSystemStartupSource.StartupProgram">
            <summary>
            Gets or sets the program executed after the workspace is loaded and initialized.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.ProgramSystemStartupSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Startup.ProgramSystemStartupSource"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.ProgramSystemStartupSource.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Startup.ProgramSystemStartupSource.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Ace.Core.Server.Startup.ProgramSystemStartupSource.GetReferences">
            <summary>
            Gets the references.
            </summary>
            <returns>The references maintained by the object</returns>
        </member>
        <member name="M:Ace.Core.Server.Startup.ProgramSystemStartupSource.Startup">
            <summary>
            Perform the required operation at system startup.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.ProgramSystemStartupSource.selfLaunchedTask_StateChanged(System.Object,Ace.Core.Server.Program.TaskStateChangeEventArgs)">
            <summary>
            Handles the StateChanged event of the selfLaunchedTask control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Program.TaskStateChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Core.Server.Startup.SystemStartup">
            <summary>
            Configures system startup.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Startup.SystemStartup.CurrentVersion">
            <summary>
            Keeps track of the version number.
            Used for backward compatibility checks.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.SystemStartup.FindStartupSources">
            <summary>
            Finds the available startup object sources.
            </summary>
            <returns>List of startup source types</returns>
        </member>
        <member name="F:Ace.Core.Server.Startup.SystemStartup.startupSources">
            <summary>
            Cached list of startup sources that have been previously configured.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Startup.SystemStartup.StartupSources">
            <summary>
            Gets or sets the cached list of startup sources that have been previously configured.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Startup.SystemStartup.enabled">
            <summary>
            Is the startup operation enabled 
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Startup.SystemStartup.Enabled">
            <summary>
            Gets or sets if the startup operation enabled 
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Startup.SystemStartup.Item(System.Type)">
            <summary>
            Indexer for returning the system startup source associated with the type/
            </summary>
            <param name="type">System startup source type</param>
            <returns>The system startup source</returns>
        </member>
        <member name="M:Ace.Core.Server.Startup.SystemStartup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Startup.SystemStartup"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.SystemStartup.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Startup.SystemStartup.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Startup.SystemStartup.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that 
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.SystemStartup.InitializeTransients">
            <summary>
            Initializes the object and ensure only 1 startup object exists.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.SystemStartup.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Core.Server.Startup.SystemStartup.Initialize">
            <summary>
            Requests to be informed of workspace load events, so that it can invoke the startup program.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.SystemStartup.ValidateObject">
            <summary>
            Push the default selected program to be the active program selected by the task manager.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.SystemStartup.AceServer_WorkspaceLoad(System.Object,System.EventArgs)">
            <summary>
            Handles the WorkspaceLoad event of the AceServer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Core.Server.Startup.SystemStartup.Dispose(System.Boolean)">
            <summary>
            Unregisters the singleton, stops listening for workspace load events.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.SystemStartup.Start">
            <summary>
            Initiate the startup operation.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Startup.SystemStartup.startupSource_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the startupSource control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Core.Server.Variable.OpcConfiguration">
            <summary>
            Describes the OPC Configuration
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.DefaultScanRate">
            <summary>
            The default scan rate for the OPC server
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.MinimumScanRate">
            <summary>
            The minimum scan rate for the OPC server
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.MaximumScanRate">
            <summary>
            The maximum scan rate for the OPC server
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.PingTime">
            <summary>
            The suggested time for pinging.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.PingErrorTime">
            <summary>
            The amount of time that must elapse without a ping for a connection error.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.backgroundThreadRun">
            <summary>
            Should the background thread run
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.backgroundThread">
            <summary>
            The background thread monitoring the OPC status
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.enabled">
            <summary>
            Is the OPC configuration enabled
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Variable.OpcConfiguration.Enabled">
            <summary>
            Gets or sets if OPC is enabled
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.enableChanged">
            <summary>
            Handler for the enable changed event
            </summary>
        </member>
        <member name="E:Ace.Core.Server.Variable.OpcConfiguration.EnableChanged">
            <summary>
            An event raised when the enable state changes.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.updateRate">
            <summary>
            The update rate for the Opc scan
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Variable.OpcConfiguration.UpdateRate">
            <summary>
            Gets or sets the update rate for the Opc scan
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.updateRateChanged">
            <summary>
            Handler for the update rate changed event
            </summary>
        </member>
        <member name="E:Ace.Core.Server.Variable.OpcConfiguration.UpdateRateChanged">
            <summary>
            An event raised when the update rate changes.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.status">
            <summary>
            The current Opc connection status
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Variable.OpcConfiguration.Status">
            <summary>
            Gets the current Opc connection status
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.statusChanged">
            <summary>
            The Opc status changed
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Variable.OpcConfiguration.StatusText">
            <summary>
            Gets the status information on the Opc Connection
            </summary>
        </member>
        <member name="E:Ace.Core.Server.Variable.OpcConfiguration.StatusChanged">
            <summary>
            An event raised when the update rate changes.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.connections">
            <summary>
            List of remote OPC connections
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Variable.OpcConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Variable.OpcConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Variable.OpcConfiguration.BackgroundMain">
            <summary>
            The main background thread monitoring the connection status.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Variable.OpcConfiguration.ShutDown">
            <summary>
            Trigger the shutdown of the Opc configuration
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Variable.OpcConfiguration.EstablishCommunications(System.String)">
            <summary>
            Establishes communications from a remote server
            </summary>
            <param name="name">The name.</param>
            <returns>Unique identifier for the connection</returns>
        </member>
        <member name="M:Ace.Core.Server.Variable.OpcConfiguration.Ping(System.Guid)">
            <summary>
            Pings the connection associated with the identifier.
            </summary>
            <param name="identifier">The identifier of the connection.</param>
            <returns>Was the connection recognized</returns>
        </member>
        <member name="M:Ace.Core.Server.Variable.OpcConfiguration.EndCommunications(System.Guid)">
            <summary>
            Ends the communications.
            </summary>
            <param name="identifier">The identifier of the connection.</param>
        </member>
        <member name="M:Ace.Core.Server.Variable.OpcConfiguration.SetErrorText(System.Guid,System.String)">
            <summary>
            Set the error text associated with the communications.
            </summary>
            <param name="identifier">The identifier of the connection.</param>
            <param name="text">The text.</param>
        </member>
        <member name="T:Ace.Core.Server.Variable.OpcConfiguration.OpcConnection">
            <summary>
            Tracking class for monitoring connections
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.OpcConnection.identifier">
            <summary>
            Identifier for the connection
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Variable.OpcConfiguration.OpcConnection.Identifier">
            <summary>
            Gets the identifier for the connection
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.OpcConnection.name">
            <summary>
            The name of the connection
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Variable.OpcConfiguration.OpcConnection.Name">
            <summary>
            Gets the name of the connection
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.OpcConnection.errorText">
            <summary>
            Error text associated with the remote connection
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Variable.OpcConfiguration.OpcConnection.ErrorText">
            <summary>
            Gets or sets the error text associated with the remote connection
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.OpcConfiguration.OpcConnection.pingTime">
            <summary>
            The time of the last ping operation
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Variable.OpcConfiguration.OpcConnection.PingError">
            <summary>
            Gets a value indicating whether there is a ping timeout error.
            </summary>
            <value><c>true</c> if there is a ping timeout; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.Core.Server.Variable.OpcConfiguration.OpcConnection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Variable.OpcConfiguration.OpcConnection"/> class.
            </summary>
            <param name="connectionName">Name of the connection.</param>
        </member>
        <member name="M:Ace.Core.Server.Variable.OpcConfiguration.OpcConnection.Ping">
            <summary>
            A ping operation
            </summary>
        </member>
        <member name="T:Ace.Core.Server.Variable.VariableNumericPropertyMapSource">
            <summary>
            Represents a property map to an object value
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.VariableNumericPropertyMapSource.targetRef">
            <summary>
            The target object against which the property maps is applied.
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Variable.VariableNumericPropertyMapSource.Target">
            <summary>
            Gets or sets the target object containing the desired property.
            </summary>
        </member>
        <member name="F:Ace.Core.Server.Variable.VariableNumericPropertyMapSource.propertyMap">
            <summary>
            The mapping of the value in the target to get
            </summary>
        </member>
        <member name="P:Ace.Core.Server.Variable.VariableNumericPropertyMapSource.PropertyMap">
            <summary>
            The mapping of the value in the target to get
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Variable.VariableNumericPropertyMapSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Core.Server.Variable.VariableNumericPropertyMapSource"/> class.
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Variable.VariableNumericPropertyMapSource.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Core.Server.Variable.VariableNumericPropertyMapSource.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Ace.Core.Server.Variable.VariableNumericPropertyMapSource.GetAssociatedController">
            <summary>
            Gets the name of a controller associated with the variable source.
            </summary>
            <returns></returns>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Core.Server.Variable.VariableNumericPropertyMapSource.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Core.Server.Variable.VariableNumericPropertyMapSource.SetValue(System.Double)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="M:Ace.Core.Server.Variable.VariableNumericPropertyMapSource.GetReferences">
            <summary>
            Gets the references.
            </summary>
            <returns>The references maintained by the object</returns>
        </member>
        <member name="M:Ace.Core.Server.Variable.VariableNumericPropertyMapSource.Initialize">
            <summary>
            Restore the links to the mapped object
            </summary>
        </member>
        <member name="M:Ace.Core.Server.Variable.VariableNumericPropertyMapSource.IsCircularReference(System.Collections.Generic.List{Ace.Core.Server.IAceObject},Ace.Core.Server.Variable.PropertyMapCollection)">
            <summary>
            Calculates if the collection represents a circular reference that is invalid
            </summary>
            <param name="owners">The owners associated with the collection.</param>
            <param name="collection">The collection.</param>
            <returns>
            	<c>true</c> if this is an invalid circular reference; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Core.Server.Variable.VariableNumericPropertyMapSource.IsCircularReference(Ace.Core.Server.Variable.PropertyMapCollection)">
            <summary>
            Calculates if the collection represents a circular reference that is invalid
            </summary>
            <param name="collection">The collection.</param>
            <returns>
            	<c>true</c> if this is an invalid circular reference; otherwise, <c>false</c>.
            </returns>
        </member>
    </members>
</doc>
