<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ace.Adept.Server</name>
    </assembly>
    <members>
        <member name="T:Ace.Adept.Server.Controls.AdeptControllerIconAttribute">
            <summary>
            Attribute indicating status of an Adept Controller object
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerIconAttribute.#ctor(System.Type,System.String)">
            <summary>
            Create an icon attribute, specifying its resource file and property name.
            </summary>
            <param name="resourceFileType">Type of the resource file.</param>
            <param name="defaultIconName">Name of the default icon.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerIconAttribute.#ctor(System.String,System.String)">
            <summary>
            Create an icon attribute, specifying its resource file and property name.
            </summary>
            <param name="resourceFileTypeNameWithAssembly">Type of the resource file.</param>
            <param name="defaultIconName">Name of the default icon.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerIconAttribute.GetImageForObjectState(Ace.Core.Server.IAceObject,System.Boolean@,System.String@)">
            <summary>
            Gets the name of an image for the state of the object.
            </summary>
            <param name="aceObject">The ace object.</param>
            <param name="isLicensed">if set to <c>true</c> the type is licensed.</param>
            <param name="keyName">The name of the key associated with the image.</param>
        </member>
        <member name="T:Ace.Adept.Server.Controls.AdeptControllerImpl">
            <summary>
            An implementation class for Adept controllers.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerImpl.GetDeviceValue(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the device value.
            </summary>
            <param name="type">The type.</param>
            <param name="unit">The unit.</param>
            <param name="select">The select.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerImpl.SetDevice(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the device.
            </summary>
            <param name="type">The type.</param>
            <param name="unit">The unit.</param>
            <param name="select">The select.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerImpl.SetDeviceValue(System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Sets the device value.
            </summary>
            <param name="type">The type.</param>
            <param name="unit">The unit.</param>
            <param name="select">The select.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerImpl.SetDeviceValues(System.Int32,System.Int32,System.Int32,System.Single[])">
            <summary>
            Sets the device values.
            </summary>
            <param name="type">The type.</param>
            <param name="unit">The unit.</param>
            <param name="select">The select.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerImpl.GetControllerEncodersNums">
            <summary>
            Gets the index of the encoders hosted by the controller (the others are hosted on other devices like smi6)
            </summary>
            <returns>list containing the controller hosted encoder numbers</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerImpl.GetProgramInformation(System.String,System.Int32)">
            <summary>
            Gets the information about a specific program or variable.
            </summary>
            <param name="name">The name of the program or variable.</param>
            <param name="mode">The mode of operation from 0-9.</param>
            <returns>The details of the program</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerImpl.UpdateFlash(System.String,System.String)">
            <summary>
            Updates the FPGA flash
            </summary>
            <param name="device">The device.</param>
            <param name="path">The file path.</param>
        </member>
        <member name="T:Ace.Adept.Server.Controls.AdeptController">
            <summary>
            An Adept controller (such as SmartController CX, SmartController CS, or SmartController EX) class.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.ModelType">
            <summary>
            Gets the model type of the controller node.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.SerialNumber">
            <summary>
            Gets the serial number of the node.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.ControllerType">
            <summary>
            Gets the controller type, as returned by ID(5,4).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.FpgaVersion">
            <summary>
            Gets the FPGA version, as returned by ID(10, 1).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.SoftwareRevision">
            <summary>
            Gets the software revision of the node.
            </summary>		
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.SystemOptions">
            <summary>
            Gets the system options
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.SecurityId">
            <summary>
            Gets the security ID string the hexadecimal form "XXXX-XXXX-XXXX".
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.TrajectoryRate">
            <summary>
            Gets the trajectory generation rate, in points/sec.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.ControllerTime">
            <summary>
            Gets or sets the controller time.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.AceControllerFile">
            <summary>
            Gets the name of the ace file on the controller.
            </summary>
            <value>The name of the ace file on the controller.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.HashFileExtension">
            <summary>
            Gets the hash file extension.
            </summary>
            <value>The hash  file extension.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.HashVpVariable">
            <summary>
            Gets the V+ variable used to hold the hash value.
            </summary>
            <value>The hash V+ variable.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.EmulatorInstance">
            <summary>
            Gets the emulator instance.
            </summary>
            <value>The emulator instance.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.Link">
            <summary>
            The link to the controller
            </summary>
            <value></value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.RobotCount">
            <summary>
            Return the number of robots in the controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.IsCalibrated">
            <summary>
            Gets a true value if all robots are calibrated.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.IsInEStop">
            <summary>
            Gets a true value if controller is in EStop
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.IsInManualMode">
            <summary>
            Returns true if controller is in Manual Mode
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.ValidateConfiguration(System.String[]@)">
            <summary>
            Checks the controller for any configuration issues.
            </summary>
            <param name="messages">The messages.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.Calibrate">
            <summary>
            Enables power and calibrates all the robots in the system.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.HighPower">
            <summary>
            Gets or sets the "high power" state in the controller. When enabling power, this
            will wait until the user presses the optional high-power button, and will throw
            an exception if power fails to enable for any reason.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.MonitorSpeed">
            <summary>
            Gets or sets the overall (monitor) speed of the Adept controller.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Controls.AdeptController.NodeStateChanged">
            <summary>
            An event fired when communication with the controller is established or broken.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Controls.AdeptController.PowerStateChanged">
            <summary>
            An event fired when the V+ POWER switch changes state.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Controls.AdeptController.CalibrationStateChanged">
            <summary>
            An event fired when the V+ calibration state changes.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Controls.AdeptController.MonitorSpeedChanged">
            <summary>
            An event fired when the V+ monitor speed changes.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Controls.AdeptController.EStopStateChanged">
            <summary>
            An event fired when the EStop changes state.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Controls.AdeptController.ApplicationEventReceived">
            <summary>
            An event fired when a Application Event is generated from V+
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.ExposableItems">
            <summary>
            Get the exposable data items
            </summary>
            <returns>The list of exposable items</returns>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.FileSystem">
            <summary>
            Gets a reference to the file system for the Adept controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.StartupMessages">
            <summary>
            Gets the startup messages to V+.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.IsEVPlus">
            <summary>
            Gets a flag indicating whether this is an eV+ controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.FileCache">
            <summary>
            Gets the file cache associated with the controllers.
            </summary>
            <value>The file cache.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.Memory">
            <summary>
            Gets a handle to the contents of V+ memory.
            </summary>
            <value>
            The handle to the memory.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.SaveConfiguration">
            <summary>
            Gets the saving configuration for the controller
            </summary>
            <value>
            The startup configuration.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.Enabled">
            <summary>
            Gets or sets the requested operational state of the node.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.CancelConnection">
            <summary>
            Gets or sets a value indicating whether the connection attempt should be canceled.
            </summary>
            <value>
              <c>true</c> if the connection attempt should be canceled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.MaxTaskNumber">
            <summary>
            Maximum Task number
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.EnabledEncoderCount">
            <summary>
            Gets a bit mask of enabled encoders.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.DryRun">
            <summary>
            Gets or sets the V+ "DRY.RUN" system switch value, which determines whether
            robot moves will be suppressed for simulation purposes.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.Address">
            <summary>
            Gets or sets the IP address of the Adept controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.HostAddress">
            <summary>
            The host address identified for the network adapter communicating with V+.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.AutoSetTime">
            <summary>
            Flag indicating if the time on the controller will be automatically set with the time on the computer
            when connecting to a controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.FirewireNodes">
            <summary>
            Return an array of the FireWire nodes in the system.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.IsAlive">
            <summary>
            Gets a flag indicating whether communications with the controller has been successfully established.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.IsRebooting">
            <summary>
            Gets a flag indicating whether the linked object is in the process of rebooting. 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.SetEmulatorInstance(Ace.Adept.Server.Emulator.EmulatorInstance)">
            <summary>
            Sets the emulator instance.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.SendActiveVCommand(System.String)">
            <summary>
            Sends an ActiveV command, waiting for the full response (which may come in multiple packets).
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetActiveVProgramStatus(System.String)">
            <summary>
            Gets the program status from ActiveV
            </summary>
            <param name="mainProgram">The main program.</param>
            <returns>The program status</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.SendFileToVPlus(System.Net.IPAddress,System.String,System.String)">
            <summary>
            Sends the file to V plus.
            </summary>
            <param name="localAddress">The local address.</param>
            <param name="localPath">The local path of the file on the PC.</param>
            <param name="remotePath">The remote path of the file to copy to on the controller.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.SendFileToVPlus(System.Net.IPAddress,System.String)">
            <summary>
            Sends the file to V plus without copying the file.
            </summary>
            <param name="localAddress">The local address.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.#ctor">
            <summary>
            Default constructor for an Adept controller node.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.#ctor(System.String)">
            <summary>
            Create a controller at the specified IP address, initializing its name to the IP address as well.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.StartEmulator">
            <summary>
            When we are running in emulation mode, starts an instance of the emulator.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.StopEmulator">
            <summary>
            When we are running in emulation mode, stops the instance of the emulator.
            This will dispose the emulator instance.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.RebootEmulator">
            <summary>
            Reboots the emulator.
            This will stop the emulator process and restart it with the same configuration folder. 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.InitializeTransients">
            <summary>
            Initializes the object properties and events.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.AddDiagnosticData(Ace.Core.Util.LogLevel,Ace.Core.Server.Diagnostic.IDiagnosticData)">
            <summary>
            Add component information about this object to the specified diagnostic data collection.
            </summary>
            <param name="logLevel">The logging level indicating how much information to include.</param>
            <param name="parent">The node to which to add the information.</param>
            <returns>The same collection passed in, appended with diagnostic information.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.AddDiagnosticInfo(Ace.Communication.VPlusServer.Abstraction.Parameters.Firewire.FirewireNode,Ace.Core.Util.LogLevel,Ace.Core.Server.Diagnostic.IDiagnosticData)">
            <summary>
            Add diagnostic info including FPGA, servo versions, and so on, to the parent node.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetEncoderPosition(System.Int32)">
            <summary>
            Returns position (in encoder counts) from the specified encoder.
            </summary>
            <param name="encoder">0-based encoder number.</param>
            <returns>Position reading.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.SetEncoderPosition(System.Int32,System.Int32)">
            <summary>
            Sets the position (in encoder counts) of the specified encoder.
            This is valid in emulation mode only.
            </summary>
            <param name="encoder">0-based encoder number.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetEncoderVelocity(System.Int32)">
            <summary>
            Returns velocity (in encoder counts/sec) from the specified encoder.
            </summary>
            <param name="encoder">0-based encoder number.</param>
            <returns>Velocity reading.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.SetEncoderVelocity(System.Int32,System.Int32)">
            <summary>
            Sets the velocity (in encoder counts/sec) for the specified encoder.
            This is valid in emulation mode only.
            </summary>
            <param name="encoder">0-based encoder number.</param>
            <param name="velocity">The velocity.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetEncoderProperties(System.Int32)">
            <summary>
            Gets the encoder properties.
            This is used in emulation mode only.
            </summary>
            <param name="encoder">The encoder.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.CreateLatch(System.Int32,System.Int32)">
            <summary>
            Create a latch for the specified encoder.
            This is valid in emulation mode only.
            </summary>
            <param name="encoder">0-based encoder number.</param>
            <param name="latchInput">The latch input.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.CreateLatch(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a latch for the specified encoder.
            This is valid in emulation mode only.
            </summary>
            <param name="encoder">0-based encoder number.</param>
            <param name="latchInput">The latch input.</param>
            <param name="latchPosition">The latch position.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.LoadFromPC(System.String,System.String)">
            <summary>
            Load the specified V+ file from the PC into V+ memory.
            </summary>
            <param name="programName">Name of the program to check if it is in memory. If the program is in memory, then the file is not loaded.
            If the file is not specified, then the file will always be loaded.</param>
            <param name="pcPath">The path to the file location on the PC.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.LoadFromPC(System.String,System.String,System.Boolean)">
            <summary>
            Load the specified V+ file from the PC into V+ memory.
            </summary>
            <param name="programName">Name of the program to check if it is in memory. If the program is in memory, then the file is not loaded.
            If the file is not specified, then the file will always be loaded.</param>
            <param name="pcPath">The path to the file location on the PC.</param>
            <param name="throwIfAlreadyExists">if set to <c>true</c> we will throw an exception if the program already exists.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.LoadEmbeddedFile(System.String,System.Type,System.String)">
            <summary>
            Load a V+ program file embedded in a .NET assembly into V+ memory.
            </summary>
            <param name="programName">The program name. The file will only be loaded if the program doesn't exist in V+ memory.</param>
            <param name="type">Type whose namespace is used to scope the program file name. In other words, the file should
            be embedded in the same assembly at the same namespace as the specified type.</param>
            <param name="fileName">The program file name.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.InvokeVPlusProgram(System.Int32,System.String)">
            <summary>
            Invoke a generic V+ program. The V+ program must be of the form <c>.PROGRAM my_prog()</c>
            Note that the program should not run for a long period of time, since it will hang one of
            the communication tasks. In that case, you should use <c>ExecuteVPlusInstruction</c> with
            an argument of "EXECUTE n my_prog()", to start the long-running program in its own task.
            Parameters may be passed and returned from the program using global variables, together
            with the <c>GetRealValue</c> to get values and <c>ExecuteVPlusInstruction</c> to set values.
            </summary>
            <param name="robotNumber">Number of the robot command queue in which to execute. These do NOT
            correspond to V+ task numbers.
            Use 1 for robot 1's queue, 2 for robot 2's queue, etc. Use 0 for a non-robot queue.
            </param>
            <param name="programName">Name of the program to invoke.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.Initialize">
            <summary>
            Initializes this device. If enabled, attempts to connect to the controller.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.aceServer_WorkspaceSaved(System.Object,Ace.Core.Server.Event.WorkspaceSaveEventArgs)">
            <summary>
            Handles the WorkspaceSaved event of the aceServer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.WorkspaceSaveEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.Value_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the Value control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.dataItems_ExposableItemChanged(System.Object,Ace.Core.Server.DataItems.ExposableDataItemChangedEventArgs)">
            <summary>
            Handles the ExposableItemChanged event of the dataItems control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.DataItems.ExposableDataItemChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.UpdateMotorMap(System.Int32)">
            <summary>
            Update the motor map. Note that SYS.INIT must be done BEFORE AND AFTER.
            </summary>
            <param name="robotMask">Bit mask indicating robot to update (bit 0 for encoders, 1 for robot 1, etc.), or -1 for all devices.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.Dispose(System.Boolean)">
            <summary>
            Disposes of the controller by disabling any active connection.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.ReserveRobot(Ace.Adept.Server.Motion.IAdeptRobot)">
            <summary>
            Reserves a robot number for a specific robot, so that two can't be enabled simultaneously.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.ReleaseRobot(Ace.Adept.Server.Motion.IAdeptRobot)">
            <summary>
            Releases a robot number, so that another can be enabled.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetRobot(System.Int32)">
            <summary>
            Return the specified robot, if defined.
            </summary>
            <param name="robotNumber">1-based robot number.</param>
            <returns>Robot of that number, or null if the robot is not allocated.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetJointCount(System.Int32)">
            <summary>
            Get the joint count for the specified robot.
            </summary>
            <param name="robotNumber">1-based robot number.</param>
            <returns>Number of joints in that robot.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetMotorCount(System.Int32)">
            <summary>
            Get the motor count for the specified robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetSecondaryEncoderCount(System.Int32)">
            <summary>
            Get the total secondary encoder count for the specified robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetMotorsHaveSecondaryEncoder(System.Int32)">
            <summary>
            Get the list of motors that have secondary encoder for specified robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetMinJointCount(System.Int32)">
            <summary>
            Get the minimum allowed joint count for the specified robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetMaxJointCount(System.Int32)">
            <summary>
            Get the maximum allowed joint count for the specified robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetAllowedAxisMask(System.Int32)">
            <summary>
            Gets a bit mask of the axes that are allowed to be selected for the specified robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetEnabledAxisMask(System.Int32)">
            <summary>
            Gets a bit mask of the axes that are actually enabled for the specified robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.SetEnabledAxisMask(System.Int32,System.Int32)">
            <summary>
            Sets a bit mask of the axes that can be enabled for the specified robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetMotorNodes(System.Int32)">
            <summary>
            Array of integers indicating node numbers for each motor in the specified robot.
            -1 indicates motor is not enabled.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetMotorGadgets(System.Int32)">
            <summary>
            Array of integers indicating gadget numbers for each motor in the specified robot.
            -1 indicates motor is not enabled.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.SysInit(System.Boolean)">
            <summary>
            Reinitializes the controller. Re-enables communication afterward as well.
            "Fast" mode only recomputes internal V+ values such as scale factors.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.ApplyConfiguration(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs},System.Boolean)">
            <summary>
            Applies the configuration into the controller
            depends on the controller type, V+, eV+ or emulator we do a reboot or only a srv.reset.
            </summary>
            <param name="progressHandler">The progress handler.</param>
            <param name="suppressAutoStart">if set to <c>true</c> [suppress auto start].</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.Reboot(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Reboot V+ system. Suppresses AUTO.V2 during reboot.
            </summary>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.Reboot(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs},System.Boolean)">
            <summary>
            Reboot V+ system. 
            </summary>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
            <param name="suppressAutostart">if set to <c>true</c> V+ autostart is suppressed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.Save(System.Int32)">
            <summary>
            Saves robot specifications from specified robots to V+ boot disk.
            </summary>
            <param name="robotMask">Bit mask of robots to save (bit 0 for encoders, bit i for robot i).</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.ClearServoInitOpcodes(System.Int32)">
            <summary>
            Clears the the opcodes stored in the servo initialization data specifications for the specified robots
            </summary>
            <param name="robotMask">Bit mask of robots to clear</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetServoInitOpcodeCount(System.Int32)">
            <summary>
            Gets the number of opcodes stored in the servo initialization data specifications for the specified robots.
            </summary>
            <param name="robotMask">Bit mask of robots to clear</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.UpdateImpl(System.Boolean)">
            <summary>
            Updates the implementation object identifying the target controller with the specified socket.
            </summary>
            <param name="isConnected">if set to <c>true</c> change to a connected state.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.RaiseStateChange(System.Boolean)">
            <summary>
            Raise state change. 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetId(System.Int32,System.Int32)">
            <summary>
            Performs the V+ ID() function.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetId(System.Int32)">
            <summary>
            Performs the V+ $ID() function.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.ChangeConnectionState(System.Boolean,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Changes the connection state.
            </summary>
            <param name="newStatus">if set to <c>true</c>, communications will be established with the controller.</param>
            <param name="progressHandler">The progress handler to receive messages concerning the connection attempt.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.ZeroMemory(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Zero the memory on the device.
            </summary>
            <param name="progressHandler">The progress handler.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetProtectedVPlusTasks">
            <summary>
            Get the reserved V+ program tasks that are used as part of the communications link
            </summary>
            <returns>List of the task numbers associated with the communications server</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.StartCommunication(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs},System.Boolean)">
            <summary>
            Starts the communication with the controller.
            </summary>
            <param name="progressHandler">The progress handler to receive messages concerning the connection attempt.</param>
            <param name="syncMemory">if set to <c>true</c> memory should be synced as part of the connection process.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.StartCommunication(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs},System.Int32,System.Boolean)">
            <summary>
            Starts the communication with the controller.
            </summary>
            <param name="progressHandler">The progress handler to receive messages concerning the connection attempt.</param>
            <param name="maxConnectionTime">The maximum amount pof time to wait for a connection.</param>
            <param name="syncMemory">if set to <c>true</c> memory should be synced as part of the connection process.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.StartCommunicationCopyFileLocal(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs},System.Int32,System.Boolean)">
            <summary>
            Starts the communication with the controller copying the files locally.
            </summary>
            <param name="progressHandler">The progress handler to receive messages concerning the connection attempt.</param>
            <param name="maxConnectionTime">The maximum amount pof time to wait for a connection.</param>
            <param name="syncMemory">if set to <c>true</c> memory should be synced as part of the connection process.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.CommServer_ConnectionFailure(System.Object,System.EventArgs)">
            <summary>
            Handles the ConnectionFailure event of the CommServer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.CheckRemoteFile(System.Net.IPAddress,System.String,System.String)">
            <summary>
            Checks the remote file and see if it matches the local file.
            </summary>
            <param name="hostAddress">The host address.</param>
            <param name="localFile">The local file.</param>
            <param name="remoteFile">The remote file.</param>
            <returns>
            Does the remote file match the local file
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.CalculateHashFromFile(System.String)">
            <summary>
            Calculates the hash for a file.
            </summary>
            <param name="file">The file.</param>
            <returns>The calculated has value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.CalculateMd5Hash(System.String)">
            <summary>
            Calculates an MD5 Hash based on the specified input
            </summary>
            <param name="input">The input string.</param>
            <returns>The hash as a 32 character hexadecimal string.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.link_FatalCommunicationsErrorDetected(System.Object,System.EventArgs)">
            <summary>
            Handles the FatalCommunicationsErrorDetected event of the link control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.memory_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the memory control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.saveConfiguration_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the saveConfiguration control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.DownloadFileToController(System.String,System.String)">
            <summary>
            Downloads the file to the controller, checking to see if the downloading is needed
            </summary>
            <param name="remoteFile">The name of the destination file in V+.</param>
            <param name="pcFile">The pc file.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.DownloadFileToController(System.String,System.String,System.String)">
            <summary>
            Downloads the file to the controller, checking to see if the downloading is needed
            </summary>
            <param name="remoteFile">The name of the destination file in V+.</param>
            <param name="pcFile">The pc file.</param>
            <param name="moduleName">Name of the module.</param>
            <remarks>
            If the module name is defined, the module will be deleted in memory before proceeding
            </remarks>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.DownloadEmbeddedFileToController(System.Type,System.String,System.String)">
            <summary>
            Download a file that is embedded into the module to the controller.
            </summary>
            <param name="type">Type whose namespace is used to scope the program file name. In other words, the file should
            be embedded in the same assembly at the same namespace as the specified type.</param>
            <param name="remoteFile">The name of the destination file.</param>
            <param name="resourceFile">The resource file.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.LoadFileOnController(System.String)">
            <summary>
            Loads the file on controller.
            </summary>
            <param name="controllerFile">The controller file.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.LoadFileOnController(System.String,System.String)">
            <summary>
            Loads the file on controller, deleting the module if it is in memory
            </summary>
            <param name="controllerFile">The controller file.</param>
            <param name="moduleProgram">The module program.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetAllDigitalIO(System.Int32,System.Int32)">
            <summary>
            Returns the current status of all digital I/O values.
            </summary>
            <param name="robotNumber">Robot number, or 0 for general system I/O.</param>
            <param name="index">0 for outputs, 1 for inputs, 2 for soft signals, must be 3 if robotNumber is non-zero</param>
            <returns>An array of bytes, with each byte representing the status of 8 individual I/O points. The first bit in the first byte represents the first I/O point in the range.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetDigitalIOMap(System.Int32,System.Int32)">
            <summary>
            Returns a bit array of operational digital I/O values for V+. Bits are operational if they are enabled
            (using system configuration) and V+ is communicating with the hardware.
            </summary>
            <param name="robotNumber">Robot number, or 0 for general system I/O.</param>
            <param name="index">0 for outputs, 1 for inputs, 2 for soft signals, must be 3 if robotNumber is non-zero</param>
            <returns>An array of bytes, with each byte representing the status of 8 individual I/O points. The first bit in the first byte represents the first I/O point in the range.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetRobotDigitalIO(System.Int32,System.Int32)">
            <summary>
            Return the value of the specified robot digital signal.
            </summary>
            <param name="robotNumber">Robot number, or 0 for system I/O.</param>
            <param name="signal">Signal number.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetDigitalIO(System.Int32)">
            <summary>
            Return the value of the specified digital signal.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetDigitalIOs(System.Int32[])">
            <summary>
            Return the value of the specified digital signals.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.SetRobotDigitalIO(System.Int32,System.Int32[])">
            <summary>
            Set the value of the specified robot digital signals.
            </summary>
            <param name="robotNumber">Robot number, or 0 for system I/O.</param>
            <param name="signals">Signal numbers to set, positive to set or negative to clear.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.SetDigitalIO(System.Int32[])">
            <summary>
            Set the value of the specified digital signal.
            </summary>
            <remarks>Only 33 signals can be set in a single method call.</remarks>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.ExecuteVPlusInstruction(System.String)">
            <summary>
            Execute the specified V+ instruction.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetRealValue(System.String)">
            <summary>
            Returns the value of the specified V+ real expression.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetStringValue(System.String)">
            <summary>
            Returns the value of the specified V+ string expression.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetTransformValue(System.String)">
            <summary>
            Returns the value of the specified V+ transform expression.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetPrecisionPointValue(System.String)">
            <summary>
            Returns the value of the specified V+ precision point expression.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetSwitches">
            <summary>
            Gets the switches associated with the controller.
            </summary>
            <returns>The name of the defined switches</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetParameters">
            <summary>
            Gets the parameters associated with the controller.
            </summary>
            <returns>The name of the defined switches</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetProgramStatus(System.String)">
            <summary>
            Does the program exist.
            </summary>
            <param name="programName">The name of the program.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.WriteObject(System.String,System.Object)">
            <summary>
            Writes a single object to the controller using the <see cref="T:Ace.Communication.VPlusServer.Abstraction.Parameters.Remote.VPObjectSerializer"/> object.
            </summary>
            <param name="key">The key used to store and reference the object on the controller.</param>
            <param name="obj">The object to write to the controller.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.WriteObject(System.String[],System.Object[])">
            <summary>
            Writes multiple objects to the controller using the <see cref="T:Ace.Communication.VPlusServer.Abstraction.Parameters.Remote.VPObjectSerializer"/> object.
            </summary>
            <param name="keys">The keys used to store and reference the object on the controller.</param>
            <param name="objs">The objects to write to the controller.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.DeleteObject(System.String)">
            <summary>
            Deletes the object with the specified key on the controller.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.DeleteObjects(System.String[])">
            <summary>
            Deletes the objects with the specified keys on the controller.
            </summary>
            <param name="keys">The keys.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.DeleteAllObjects">
            <summary>
            Delete all objects on the controller.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetObjectIndex(System.String)">
            <summary>
            Gets the index of an object written to V+ memory.
            </summary>
            <param name="key">The name of the object key saved in V+ memory.</param>
            <returns>The index of the object or -1 if no key was found</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetKinematicType(System.Int32)">
            <summary>
            Return the kinematic type for the specified robot number.
            </summary>
            <param name="robotNumber">1-based robot number.</param>
            <returns>Kinematic type of the specified robot.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetRobotType(System.Int32)">
            <summary>
            Return the robot type for the specified robot.
            </summary>
            <param name="robotNumber">1-based robot number.</param>
            <returns>Class representing the specified robot, or null if the robot type can't be found.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.Send(Ace.Adept.Server.Controls.IAdeptMessage)">
            <summary>
            Sends a message to the Adept controller.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.LoadMotorSpecFile(System.Int32,System.Int32[],System.String[])">
            <summary>
            Load a default motor spec file based on part number. Also loads a default robot spec file.
            </summary>
            <param name="robotNumber">1-based robot number.</param>
            <param name="motorNumbers">list of motor number.</param>
            <param name="partNumbers">list of Part numbers</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.LoadMotorSpecFile(System.Int32,System.Int32,System.String)">
            <summary>
            Load a default motor spec file based on part number. Also loads a default robot spec file.
            </summary>
            <param name="robotNumber">1-based robot number.</param>
            <param name="motorNumber">1-based motor number.</param>
            <param name="partNumber">Part number</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.LoadSpecFile(System.Int32,System.Int32[],System.String[])">
            <summary>
            Load a default motor spec file based on part number. Also loads a default robot spec file.
            </summary>
            <param name="robotNumber">Robot number, or 0 for encoders.</param>
            <param name="motorNumbers">list of Motor number, or 0 for a full robot spec file.</param>
            <param name="pcFilePaths">list of File path on PC to SPEC file.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.LoadSpecFile(System.Int32,System.Int32,System.String)">
            <summary>
            Load a robot or joint spec file from the specified V+ path.
            </summary>
            <param name="robotNumber">Robot number, or 0 for encoders.</param>
            <param name="motorNumber">Motor number, or 0 for a full robot spec file.</param>
            <param name="pcFilePath">File path on PC to SPEC file.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.SaveSpecFile(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Save a robot or joint spec file to the specified V+ path.
            </summary>
            <param name="robotNumber">Robot number, or 0 for encoders.</param>
            <param name="motorNumber">Motor number, or 0 for all motors.</param>
            <param name="pcFilePath">File path on PC to SPEC file.</param>
            <param name="ascii">True to save in ASCII format, false for binary.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.IsLicenseAvailable(Ace.Communication.VPlusLicense)">
            <summary>
            Returns true if the license is available on the current controller
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.IsLicenseAvailable(Ace.Communication.VPlusLicense,System.Int32)">
            <summary>
            Returns true if the license is available on the current controller
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.IsLicenseEnabled(Ace.Communication.VPlusLicense)">
            <summary>
            Returns true if the specified license bit is enabled.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.IsLicenseEnabled(Ace.Communication.VPlusLicense,System.Int32)">
            <summary>
            Returns true if the specified license bit is enabled.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.InstallLicense(System.Boolean,System.String)">
            <summary>
            Installs or removes a V+ license.
            </summary>
            <param name="enabled">True to install a license; false to remove.</param>
            <param name="password">Password required to change license setting; this value depends on the SecurityId parameter.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.InstallLicense(System.Boolean,System.Int32,System.String)">
            <summary>
            Installs or removes a V+ license.
            </summary>
            <param name="enabled">True to install a license; false to remove.</param>
            <param name="index">The index of the device to install the license for</param>
            <param name="password">Password required to change license setting; this value depends on the SecurityId parameter.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.DevicesInstruction(System.Boolean,System.Int32,System.Int32,System.Int32,System.Byte[])">
            <summary>
            Perform a V+ DEVICES instruction
            </summary>
            <param name="robotAccess">True for robot/motor access; False for node/gadget access.</param>
            <param name="nodeOrRobot">FireWire node number or robot number.</param>
            <param name="gadgetOrMotor">FireWire gadget number, or 1-based motor number.</param>
            <param name="opcode">Command opcode</param>
            <param name="toDevice">Byte array to send to device.</param>
            <returns>Byte array returned by device.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.UpgradeFirewireFirmware(System.Boolean,System.String,System.Boolean,System.Collections.Generic.IList{Ace.Communication.VPlusServer.Abstraction.Parameters.Firewire.FirewireNode},System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Upgrade FireWire node firmware (FPGA or servo code). Will NOT update SmartAmps.
            </summary>
            <param name="fpga">True to upgrade FPGA, false to upgrade servo.</param>
            <param name="pcPath">Path to servo code files on the controller.</param>
            <param name="nodes">List of nodes to update.</param>
            <param name="ignoreVersionTest">Don't test versions--just install specified files.</param>
            <param name="progressHandler">If defined, will receive event reports during transfer.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.UpgradeControllerFpga(System.String,System.Boolean)">
            <summary>
            Upgrade FPGA on this controller.
            </summary>
            <param name="controllerFpgaPath">Path to the directory containing the "upd" controller FPGA file on PC.</param>
            <param name="ignoreVersionTest">true to overwrite newer versions with older; false to skip if controller already up-to-date.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.UpgradeControllerFpga(System.String,System.Boolean,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Upgrade FPGA on this controller.
            </summary>
            <param name="controllerFpgaPath">Path to the directory containing the "upd" controller FPGA file on PC.</param>
            <param name="ignoreVersionTest">true to overwrite newer versions with older; false to skip if controller already up-to-date.</param>
            <param name="progressHandler">If defined, will receive event reports during transfer.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetErrors">
            <summary>
            Gets any pending error messages. Errors are cleared when power is enabled on the controller.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.ScanDeviceNet(System.Int32,System.Int32)">
            <summary>
            Scan the DeviceNet. Note that this can take up to a minute to execute.
            </summary>
            <param name="baudRate">Communication baud rate. 0:125K, 1:250K, 2:500K.</param>
            <param name="localMacId">Local MAC ID (typically 0).</param>
            <returns>An array of DeviceNet information.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetControllerEncodersNums">
            <summary>
            Gets the index of the encoders hosted by the controller (the others are hosted on other devices like smi6)
            </summary>
            <returns>list containing the controller hosted encoder numbers</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.GetProgramInformation(System.String,System.Int32)">
            <summary>
            Gets the information about a specific program or variable.
            </summary>
            <param name="name">The name of the program or variable.</param>
            <param name="mode">The mode of operation from 0-9.</param>
            <returns>The details of the program</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.CreateRecipeConfiguration">
            <summary>
            Creates and returns a new recipe configuration.
            </summary>
            <value>
            The recipe configuration.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.Ace#Communication#VPlusServer#ITcpConnectionMessageSupport#EmulationMode">
            <summary>
            Gets a value indicating whether the instance is running in emulation mode.
            </summary>
            <value>
            <c>true</c> if the instance is running in emulation mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.Ace#Communication#VPlusServer#ITcpConnectionMessageSupport#HostAddress">
            <summary>
            The host address identified for the network adapter communicating with V+.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptController.Ace#Communication#VPlusServer#ITcpConnectionMessageSupport#Link">
            <summary>
            The link to the controller
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptController.Ace#Communication#VPlusServer#ITcpConnectionMessageSupport#Send(Ace.Communication.VPlusServer.ITcpConnectionMessage)">
            <summary>
            Sends the message to the controller 
            </summary>
            <param name="msg">The message.</param>
        </member>
        <member name="T:Ace.Adept.Server.Controls.AdeptMessage">
            <summary>
            A class for storing and receiving messages to and from an
            Adept controller.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.AdeptMessage"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.AdeptMessage"/> class.
            </summary>
            <param name="vPlusProgramName">Name of the program.</param>
            <remarks>
            Creates a message that invokes the specified V+ program on the controller
            in message queue 1, and waits for a reply.
            </remarks>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptMessage.SendTime">
            <summary>
            Gets a time stamp of when the message was sent in milliseconds.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptMessage.ReplyTime">
            <summary>
            Gets a time stamp of when the message reply was received in milliseconds.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ToString">
            <summary>
            Returns a string version of this message, including V+ program name and whether
            it is actively waiting for a reply.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptMessage.MessageNumber">
            <summary>
            Gets the unique message number associated with this message.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptMessage.VPlusProgramName">
            <summary>
            Gets the V+ program name that will be invoked.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptMessage.Queue">
            <summary>
            Gets or sets the queue on the V+ controller in which
            the message should be executed. There are numerous
            queues, with queue 0 being the actual task performing
            communication, other queues for each robot, etc.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptMessage.ReplyExpected">
            <summary>
            Gets or sets a flag indicating whether a reply is expected.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptMessage.SuppressTimeout">
            <summary>
            Gets or sets a flag indicating whether the timeout should be
            suppressed during this message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ReplyReceived(System.Byte[],System.Int32)">
            <summary>
            Called to notify that a reply was received
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="errorCode">The error code.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ReadString">
            <summary>
            Reads a string from the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ReadSingle">
            <summary>
            Reads a float from the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ReadDouble">
            <summary>
            Reads a double from the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ReadSingleArray">
            <summary>
            Reads a float array from the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ReadDoubleArray">
            <summary>
            Reads a double array from the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ReadStringArray">
            <summary>
            Reads a string array from the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ReadShort">
            <summary>
            Reads a 16-bit integer from the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ReadShortArray">
            <summary>
            Reads a short array from the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ReadBytes">
            <summary>
            Reads a byte array from the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ReadByte">
            <summary>
            Reads a byte from the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ReadBoolean">
            <summary>
            Reads a boolean from the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ReadVpTransform">
            <summary>
            Reads a Z-Y-Z transform from the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.ReadTransform">
            <summary>
            Reads a Z-Y-Z transform from the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteVpTransform(Ace.Communication.VpTransform)">
            <summary>
            Writes a Z-Y-Z transform to the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteTransform(Ace.Core.Server.Transform3D)">
            <summary>
            Writes a Z-Y-Z transform to the incoming message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteByte(System.Byte[])">
            <summary>
            Writes a sequence of byte to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteBoolean(System.Boolean)">
            <summary>
            Writes a boolean to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteBoolean(System.Boolean[])">
            <summary>
            Writes a sequence of boolean to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteShort(System.Int32)">
            <summary>
            Writes a 16-bit integer to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteShort(System.Int32[])">
            <summary>
            Writes a sequence of 16-bit integer to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteString(System.String)">
            <summary>
            Writes a string to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteString(System.String[])">
            <summary>
            Writes a sequence of string to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteBytes(System.Byte[])">
            <summary>
            Writes the given byte array to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteSingle(System.Double)">
            <summary>
            Writes a float to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteSingle(System.Double[])">
            <summary>
            Writes a sequence of float to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteDouble(System.Double)">
            <summary>
            Writes a double to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteDouble(System.Double[])">
            <summary>
            Writes a sequence of double to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteShortArray(System.Int32[])">
            <summary>
            Writes a short array to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteSingleArray(System.Single[])">
            <summary>
            Writes a single array to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteDoubleArray(System.Double[])">
            <summary>
            Writes a double array to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WriteStringArray(System.String[])">
            <summary>
            Writes a string array to the outgoing message.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.Write(System.IO.Stream)">
            <summary>
            Writes the message to the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <exception cref="T:Ace.Core.Server.AceException">Message too long</exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptMessage.WaitForReply">
            <summary>
            Waits for the reply to the message
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptMessage.ErrorCode">
            <summary>
            Gets any error code returned from V+, or 0 if no error.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptMessage.ErrorIndex">
            <summary>
            Gets the variable portion of the error code from V+.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptMessage.ErrorString">
            <summary>
            Gets the string interpretation of the error code from V+.
            Only valid if the error code is non-zero.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptMessage.ErrorDescription">
            <summary>
            Gets an additional user-specified error string from V+.
            Only valid if the error code is non-zero.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptMessage.ErrorStack">
            <summary>
            Gets an additional user-specified error string from V+.
            Only valid if the error code is non-zero.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.AdeptServerPlugin">
            <summary>
            AdeptServerPlugin
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Controls.AdeptServerPlugin.ReconciliationRequired">
            <summary>
            Occurs when a conflict between a program on the controller and in Ace is detected. This is caused when the programs do not match.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptServerPlugin.Value">
            <summary>
            Implements the IPropertyHandler.Value to register the property with the AceServer
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptServerPlugin.TaskManagerCanOpenPrograms">
            <summary>
            Gets or sets a value indicating whether the V+ Task Manager can automatically open programs
            is received from V+. 
            </summary>
            <value>
            	<c>true</c> if the task manager can automatically open programs; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptServerPlugin.SaveVPlusMemoryToWorkspace">
            <summary>
            Gets or sets a value indicating whether the contents of V+ memory will be saved to the workspace 
            when the workspace is saved.
            </summary>
            <value>
            <c>true</c> if V+ memory is saved to the workspace; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptServerPlugin.Initialize(Ace.Core.Server.IAceServer)">
            <summary>
            An interface implemented by server-side ACE plugins. Classes implementing
            this interface are automatically discovered at system startup, and the
            <c>Initialize()</c> method called. There are no guarantees as to which
            order plugins are initialized.
            </summary>
            <param name="server">The server associated with the plugin</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptServerPlugin.ShutDown">
            <summary>
            Initiates a shuts-down operation on the plug-in
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptServerPlugin.aceServer_WorkspaceLoad(System.Object,Ace.Core.Server.Event.WorkspaceLoadEventArgs)">
            <summary>
            Handles the WorkspaceLoad event of the aceServer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.WorkspaceLoadEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptServerPlugin.OnReconciliationRequired(Ace.Adept.Server.Desktop.Connection.IVpLinkedObject,Ace.Adept.Server.Controls.IVPlusMemoryComparison,Ace.Adept.Server.Controls.VPlusMemoryReconcilitationStatus)">
            <summary>
            Handles the ReconciliationRequired event of the VPlusMemory control.
            </summary>
            <param name="linkedObject">The linked object.</param>
            <param name="comparison">The comparison between workspace and active memory.</param>
            <param name="status">The status.</param>
        </member>
        <member name="T:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration">
            <summary>
            Represents a configuration of items included in a recipe.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.RecipeItemDetails">
            <summary>
            Parameters associated with each recipe item
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.RecipeItemRealDetails">
            <summary>
            Parameters specific to a real variable
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.RecipeItemLocationDetails">
            <summary>
            Parameters specific to a location or precision point variable
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.Controller">
            <summary>
            Gets the controller associated with the configuration
            </summary>
            <value>
            The controller.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.Variables">
            <summary>
            Gets the variables included in the recipe configuration
            </summary>
            <value>
            The variables.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.DisplayByCategory">
            <summary>
            Gets or sets a value indicating whether the variables are displayed based on category.
            </summary>
            <value>
              <c>true</c> if items are display by categories; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.#ctor(Ace.Adept.Server.Controls.IAdeptController)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration" /> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.CreateRecipeComponent">
            <summary>
            Creates a new recipe component based on the current configuration
            </summary>
            <returns>The recipe component</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.ConvertRecipeComponent(System.Boolean,Ace.Core.Server.Recipes.RecipeComponentBase)">
            <summary>
            Converts the recipe component based on the current recipe configuration settings.
            </summary>
            <param name="isActive">if set to <c>true</c> this component is from the active recipe.</param>
            <param name="recipeComponent">The recipe component to convert.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.Apply(Ace.Core.Server.Recipes.RecipeComponentBase)">
            <summary>
            Applies the specified recipe component to the source.
            </summary>
            <param name="recipeComponent">The recipe component.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.AddVariable(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Adds the variable to the recipe definition
            </summary>
            <param name="variable">The variable.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.RemoveVariable(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Removes the variable from the recipe definition
            </summary>
            <param name="variable">The variable.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.GetVariableDetails(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.String@,Ace.Core.Server.Access.AccessLevel@,Ace.Core.Server.Access.AccessLevel@)">
            <summary>
            Gets the details for the specified variable
            </summary>
            <param name="variable">The variable.</param>
            <param name="displayName">The display name.</param>
            <param name="readAccessLevel">The read access level.</param>
            <param name="writeAccessLevel">The write access level.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.GetRealVariableDetails(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Double@,System.Double@,System.Int32@,Ace.Adept.Server.Controls.RealDisplayMode@)">
            <summary>
            Gets the details for the specified variable
            </summary>
            <param name="variable">The variable.</param>
            <param name="minimumValue">The minimum value.</param>
            <param name="maximumValue">The maximum value.</param>
            <param name="decimalPlaces">The decimal places.</param>
            <param name="displayMode">The display mode.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.GetRealVariableDetails(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Collections.Generic.Dictionary{System.String,System.Double}@)">
            <summary>
            Gets the details for the specified variable
            </summary>
            <param name="variable">The variable.</param>
            <param name="selectionValues">The selection values.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.GetLocationVariableDetails(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Boolean@,System.Int32@,System.Boolean@,System.Int32@)">
            <summary>
            Gets the details for the specified variable
            </summary>
            <param name="variable">The variable.</param>
            <param name="allowApproach">if set to <c>true</c> do we allow an approach move.</param>
            <param name="approachHeight">Height of the approach.</param>
            <param name="allowMove">if set to <c>true</c> do we allow a direct move.</param>
            <param name="moveSpeed">The move speed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.SetVariableDetails(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.String,Ace.Core.Server.Access.AccessLevel,Ace.Core.Server.Access.AccessLevel)">
            <summary>
            Sets the details for the specified variable
            </summary>
            <param name="variable">The variable.</param>
            <param name="displayName">The display name.</param>
            <param name="readAccessLevel">The read access level.</param>
            <param name="writeAccessLevel">The write access level.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.SetRealVariableDetails(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Double,System.Double,System.Int32,Ace.Adept.Server.Controls.RealDisplayMode)">
            <summary>
            Sets the details for the specified variable
            </summary>
            <param name="variable">The variable.</param>
            <param name="minimumValue">The minimum value.</param>
            <param name="maximumValue">The maximum value.</param>
            <param name="decimalPlaces">The decimal values.</param>
            <param name="displayMode">The display mode.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.SetRealVariableDetails(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Collections.Generic.Dictionary{System.String,System.Double})">
            <summary>
            Sets the details for the specified variable
            </summary>
            <param name="variable">The variable.</param>
            <param name="selectionValues">The selection values.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.SetLocationVariableDetails(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Boolean,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Gets the details for the specified variable
            </summary>
            <param name="variable">The variable.</param>
            <param name="allowApproach">if set to <c>true</c> do we allow an approach move.</param>
            <param name="approachHeight">Height of the approach.</param>
            <param name="allowMove">if set to <c>true</c> do we allow a direct move.</param>
            <param name="moveSpeed">The move speed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeConfiguration.memory_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the memory control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent">
            <summary>
            Represents an instance of data associated with a recipe / recipe component.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.Variables">
            <summary>
            Gets the V+ variables defined in the component
            </summary>
            <value>
            The variables.
            </value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.#ctor(Ace.Adept.Server.Controls.IAdeptController)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent" /> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.Apply">
            <summary>
            Applies the recipe information to the source
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.CreateEditCopy">
            <summary>
            Creates a copy of the component for editing.
            </summary>
            <returns>A copy of the current object used only for editing</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.ApplyEditCopy(Ace.Core.Server.Recipes.RecipeComponentBase,System.Boolean)">
            <summary>
            Applies the edit copy to the component.
            </summary>
            <param name="component">The component.</param>
            <param name="isSelected">if set to <c>true</c> the recipe associated with the component is the active/selected recipe.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.Apply(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Applies the specified variable values
            </summary>
            <param name="variable">The variable.</param>
            <exception cref="T:Ace.Core.Server.AceException"></exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.RemoveVariable(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Removes the variable from the listing.
            </summary>
            <param name="variable">The variable.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.AddVariable(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Adds the variable to the collection
            </summary>
            <param name="variable">The variable.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.GetRealValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Gets the real value for the specified variable in the recipe
            </summary>
            <param name="variable">The variable.</param>
            <returns>The recipe value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.SetRealValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Double)">
            <summary>
            Sets the real value for the specified variable in the recipe
            </summary>
            <param name="variable">The variable.</param>
            <param name="val">The new value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.GetStringValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Gets the string value for the specified variable in the recipe
            </summary>
            <param name="variable">The variable.</param>
            <returns>The recipe value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.SetStringValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.String)">
            <summary>
            Sets the string value for the specified variable in the recipe
            </summary>
            <param name="variable">The variable.</param>
            <param name="val">The new value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.GetTransformValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Gets the transform value for the specified variable in the recipe
            </summary>
            <param name="variable">The variable.</param>
            <returns>The recipe value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.SetTransformValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable,Ace.Core.Server.Transform3D)">
            <summary>
            Sets the transform value for the specified variable in the recipe
            </summary>
            <param name="variable">The variable.</param>
            <returns>The recipe value</returns>
            <param name="val">The new value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.GetPrecisionPointValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Gets the precision point value for the specified variable in the recipe
            </summary>
            <param name="variable">The variable.</param>
            <returns>The recipe value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.AdeptControllerRecipeComponent.SetPrecisionPointValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Double[])">
            <summary>
            Sets the precision point value for the specified variable in the recipe
            </summary>
            <param name="variable">The variable.</param>
            <returns>The recipe value</returns>
            <param name="val">The new value.</param>
        </member>
        <member name="T:Ace.Adept.Server.Controls.ControllerConfigFile">
            <summary>
            controller config file base class for accessing controler configuration file
            </summary>	
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.CONFIGURATION">
            <summary>
            configuration string
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.BUS_SECTION">
            <summary>
            bus section
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.DEVICENET">
            <summary>
            device net
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.DEVICENET_CX">
            <summary>
            device net CX
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.LOCAL_NODE">
            <summary>
            local node
            </summary>		
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.LOCAL_NODE_CX">
            <summary>
            local node CX
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.MAC_ID">
            <summary>
            macid
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.MAC_ID_CX">
            <summary>
            macid CX
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.SIGNAL_MAPPING_CX">
            <summary>
            MAPPING - signal mapping
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.BYTE_CX">
            <summary>
            BYTE - signal mapping
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.BIT_CX">
            <summary>
            Bit - signal mapping
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.BIT_LENGTH_CX">
            <summary>
            BIT LENGTH - signal mapping
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.SIGNAL_CX">
            <summary>
            SIGNAL - signal mapping
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.BAUD_RATE">
            <summary>
            baudrate
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.BAUD_RATE_CX">
            <summary>
            baudrate CX
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.SLAVE">
            <summary>
            slave
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.OBJECT_ID">
            <summary>
            object id
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.REMOTE_NODE">
            <summary>
            remote node
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.CONNECTION_TIMEOUT">
            <summary>
            connection timeout
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.INPUT_SIZE">
            <summary>
            INPUT SIZE
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.OUTPUT_SIZE">
            <summary>
            INPUT SIZE
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.DEVICE_TYPE">
            <summary>
            device type
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.VENDOR_ID">
            <summary>
            VENDOR_ID
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.PRODUCT_CODE">
            <summary>
            PRODUCT_CODE
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.COMPLEXTYPE_LOCAL_NODE">
            <summary>
            COMPLEXTYPE_LOCAL_NODE
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.INPUT_SIGNAL_SECTION">
            <summary>
            INPUT_SIGNAL_SECTION
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.OUTPUT_SIGNAL_SECTION">
            <summary>
            OUTPUT_SIGNAL_SECTION
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.INPUT_SIGNAL">
            <summary>
            INPUT_SIGNAL
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.OUTPUT_SIGNAL">
            <summary>
            OUTPUT_SIGNAL
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.DESCRIPTION">
            <summary>
            DESCRIPTION
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.SIGNALID">
            <summary>
            SIGNALID
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.BIT">
            <summary>
            BIT
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.LENGTH">
            <summary>
            LENGTH
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.NAME">
            <summary>
            NAME
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.VALUE">
            <summary>
            VALUE
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.SIGNALTYPE">
            <summary>
            SIGNALTYPE
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.ADEPT">
            <summary>
            ADEPT
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.INPUT_SIGNAL_TYPE">
            <summary>
            input signal type = 0
            signal 1 - 999
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.OUTPUT_SIGNAL_TYPE">
            <summary>
            output signal type = 1
            signal 1000 - 1999
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.SOFT_SIGNAL_TYPE">
            <summary>
            soft signal type = 2
            signal 2000 - 2999
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.ROBOT_SIGNAL_TYPE">
            <summary>
            robot signal type = 3
            signal 3000+
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.VPlusControllerText">
            <summary>
            controller configuration string
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.Controller">
            <summary>
            controller 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.ControllerConfigFile.Config">
            <summary>
            Config 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.ControllerConfigFile"/> class.
            </summary>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.BaudRateStringWith_K_ToLong(System.String)">
            <summary>
            Convert the baudrate from string with "K" to long.
            </summary>
            <param name="sBaudRateWith_K">The baudrate </param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.BaudRateLongToStringWith_K(System.Int64)">
            <summary>
            Convert the baudrate from long to string with "K".
            </summary>
            <param name="lBaudRate">The baudrate </param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.GetSignalRange(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Get signal range based on signal type
            </summary>
            <param name="ioSignalType">The signal type.</param>	
            <param name="signalStart">The signal start.</param>	
            <param name="signalEnd">The signal end.</param>	
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.SignalOffsetToSignalNumbers(System.Int32,System.Int32)">
            <summary>
            Convert signal start and count to list of signals
            </summary>			
            <param name="signalRangeStart">The signal range start.</param>	
            <param name="signalCount">The signal count.</param>	
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.ConfigObjectToString(System.Object)">
            <summary>
            Convert the configuration object to string
            </summary>		
            <param name="newConfig">The configuration object to convert to string.</param>							
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.GetNextObjectID(Ace.Adept.Server.Controls.Configuration.Data.IConfigurationStatement[],System.String)">
            <summary>
            Get the next available object id for the element
            </summary>		
            <param name="statements">The statement containing the object ID.</param>					
            <param name="statementId">The statement id that contains the object ID.</param>
            <returns>
             the next object ID
            </returns>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.GetNextObjectID(System.Xml.Linq.XElement,System.String)">
            <summary>
            Get the next available object id for the element
            </summary>		
            <param name="parentElement">The parent element of the elements containing the object ID.</param>					
            <param name="elementNameOfObjectId">The element name of the element that contains the object ID.</param>
            <returns>
             the next object ID
            </returns>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.IsLocalNodeDefined">
            <summary>
            Verify the eVPlus local statement defined
            </summary>				
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.AddLocalNode(System.String,System.String,System.String)">
            <summary>
            Adds a local statement to the configuration file
            </summary>			
            <param name="macId">The mac id.</param>
            <param name="baudStringWithoutK">The baud string.</param>
            <param name="slave">The slave string.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.AddLocalNode(System.String,System.String,System.String,System.String)">
            <summary>
            Adds a local statement to the configuration file
            </summary>		
            <param name="vPlusControllerText">The controller configuration string.</param>
            <param name="macId">The mac id.</param>
            <param name="baudStringWithoutK">The baud string.</param>
            <param name="slave">The slave string.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.AddListDeviceNetInfo(Ace.Communication.VPlusServer.Abstraction.Parameters.DeviceNetInfo[])">
            <summary>
            Add a list of devicenet node to the config string.
            </summary>				
            <param name="addDeviceNetInfos">The list adding device net info.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.AddListDeviceNetInfo(System.String,Ace.Communication.VPlusServer.Abstraction.Parameters.DeviceNetInfo[])">
            <summary>
            Add a list of devicenet node to the config string.
            </summary>		
            <param name="vPlusControllerText">The controller configuration string.</param>
            <param name="addDeviceNetInfos">The list adding device net info.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.AddDeviceNetInfo(System.String,Ace.Communication.VPlusServer.Abstraction.Parameters.DeviceNetInfo)">
            <summary>
            Add a devicenet node to the config string.
            </summary>		
            <param name="vPlusControllerText">The configuration file string.</param>		
            <param name="addDeviceNetInfo">The adding device net info.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.AddListIOSignalInfo(System.Collections.Generic.List{Ace.Adept.Server.Controls.IOSignalInfo[]},System.Int32)">
            <summary>
            add list iosignal node to config string
            </summary>				
            <param name="addListSignalInfos">The list of iosignal info to add.</param>		
            <param name="ioSignalType">The signal type input/output.</param>			
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.AddListIOSignalInfo(System.String,System.Collections.Generic.List{Ace.Adept.Server.Controls.IOSignalInfo[]},System.Int32)">
            <summary>
            add list iosignal node to config string
            </summary>		
            <param name="vPlusControllerText">The controller configuration string.</param>
            <param name="addListSignalInfos">The list of iosignal info to add.</param>		
            <param name="ioSignalType">The signal type input/output.</param>			
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.AddIOSignalInfo(System.String,Ace.Adept.Server.Controls.IOSignalInfo,System.Int32)">
            <summary>
            Add a devicenet node to the config string.
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
            <param name="addSignalInfo">The adding signal info.</param>
            <param name="ioSignalType">The signal type input/output.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.DeleteListDeviceNetInfo(Ace.Communication.VPlusServer.Abstraction.Parameters.DeviceNetInfo[])">
            <summary>
            delete list device net node to config string
            </summary>				
            <param name="deleteDeviceNetInfos">The list device net info to delete.</param>				
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.DeleteListDeviceNetInfo(System.String,Ace.Communication.VPlusServer.Abstraction.Parameters.DeviceNetInfo[])">
            <summary>
            delete list device net node to config string
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
            <param name="deleteDeviceNetInfos">The list device net info to delete.</param>				
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.DeleteDeviceNetInfo(System.String,Ace.Communication.VPlusServer.Abstraction.Parameters.DeviceNetInfo)">
            <summary>
            delete device net node to config string
            </summary>		
            <param name="vPlusControllerText">The config string.</param>	
            <param name="deleteDeviceNetInfo">The device net info to delete.</param>				
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.DeleteListIOSignalInfo(System.Collections.Generic.List{Ace.Adept.Server.Controls.IOSignalInfo[]},System.Int32)">
            <summary>
            delete list of iosignal node to config string
            </summary>				
            <param name="deleteListSignalInfos">The list of iosignal info to delete.</param>		
            <param name="ioSignalType">The signal type input/output.</param>			
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.DeleteListIOSignalInfo(System.String,System.Collections.Generic.List{Ace.Adept.Server.Controls.IOSignalInfo[]},System.Int32)">
            <summary>
            delete list of iosignal node to config string
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
            <param name="deleteListSignalInfos">The list of iosignal info to delete.</param>		
            <param name="ioSignalType">The signal type input/output.</param>			
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.DeleteIOSignalInfo(System.String,Ace.Adept.Server.Controls.IOSignalInfo,System.Int32)">
            <summary>
            delete iosignal node to config string
            </summary>
            <param name="vPlusControllerText">The config string.</param>	
            <param name="deleteSignalInfo">The iosignal info to delete.</param>		
            <param name="ioSignalType">The signal type input/output.</param>			
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.ReadDeviceNetInfo">
            <summary>
            read device net node from config string
            </summary>				
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.ReadDeviceNetInfo(System.String)">
            <summary>
            read device net node from config string
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.ReadRobotIOBlockInfo(System.Int32,System.Int32[])">
            <summary>
            read Robot IO Block info from config string
            this will read the information from the Input or Output structure based on the 
            input parameter ioBlockNumbers
            </summary>				
            <param name="ioSignalType">The input/output signal.</param>
            <param name="ioBlockNumbers">The IO block numbers.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.ReadIOBlockInfo(System.String,System.Int32,System.String,System.Int32[])">
            <summary>
            read IO Block info from config string
            this will read the information from the Input or Output structure based on the 
            input parameter ioBlockNumbers
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
            <param name="ioSignalType">The input/output signal.</param>
            <param name="signalSettingType">The signal type devicenet or adept.</param>
            <param name="ioBlockNumbers">The IO block numbers.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.ReadIOSignalInfo(System.Nullable{System.Int32},System.Int32,System.String)">
            <summary>
            read IO Signal from config string
            0 is inputs block. 
            1 is output blocks. 
            2 is soft signals. 
            3 is robot signals.
            </summary>		
            <param name="macId">The macid. macId = -1 will read all signals</param>
            <param name="ioSignalType">The input/output signal.</param>
            <param name="signalSettingType">The signal type devicenet or adept.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.ReadIOSignalInfo(System.String,System.Nullable{System.Int32},System.Int32,System.String)">
            <summary>
            read IO Signal from config string
            0 is inputs block. 
            1 is output blocks. 
            2 is soft signals. 
            3 is robot signals.
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
            <param name="macId">The macid. macId = -1 will read all signals</param>
            <param name="ioSignalType">The input/output signal.</param>
            <param name="signalSettingType">The signal type devicenet or adept.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.ReadLocalNode(System.String@,System.String@,System.String@)">
            <summary>
            read local node values. 
            </summary>
            <param name="macId">The mac id.</param>
            <param name="baudStringWithoutK">The baud string.</param>
            <param name="slave">The slave string.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.ReadLocalNode(System.String,System.String@,System.String@,System.String@)">
            <summary>
            read local node values. 
            </summary>
            <param name="vPlusControllerText">The config string.</param>
            <param name="macId">The mac id.</param>
            <param name="baudStringWithoutK">The baud string.</param>
            <param name="slave">The slave string.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.ReadMacIDFromLocalNode">
            <summary>
            Read the MAC ID from the Local Node in the Statement
            </summary>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.ReadMacIDFromLocalNode(System.String)">
            <summary>
            Read the MAC ID from the Local Node in the Statement
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.ReadBaudRateFromLocalNode">
            <summary>
            Read the Baud Rate from the Local Node in the Statement
            </summary>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.ReadBaudRateFromLocalNode(System.String)">
            <summary>
            Read the Baud Rate from the Local Node in the Statement
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.UpdateLocalNode(System.String,System.String,System.String)">
            <summary>
            update local node values. 
            </summary>
            <param name="macId">The mac id.</param>
            <param name="baudStringWithoutK">The baud string.</param>
            <param name="slave">The slave string.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.ControllerConfigFile.UpdateLocalNode(System.String,System.String,System.String,System.String)">
            <summary>
            update local node values. 
            </summary>
            <param name="vPlusControllerText">The config string.</param>
            <param name="macId">The mac id.</param>
            <param name="baudStringWithoutK">The baud string.</param>
            <param name="slave">The slave string.</param>		
        </member>
        <member name="T:Ace.Adept.Server.Controls.EVPControllerConfigFile">
            <summary>
            EX controller config file class for accessing controler configuration file
            </summary>	
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.#ctor(Ace.Adept.Server.Controls.IVPlusConfig)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.EVPControllerConfigFile"/> class.
            </summary>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.ReadSectionFromConfigurationString(System.String,System.String)">
            <summary>
            Read the section (BUS_SECTION) from the configuration string
            </summary>		
            <param name="configurationStr">configuration string in Xml format.</param>
            <param name="sectionName">The section name - (BUS_SECTION).</param>			
            <returns>
             the element (BUS_SECTION) read from the configuration string.
            </returns>
            Sample xml elements
            <configuration>
            	<BUS_SECTION>
            		<devicenet objectid="1">
            			<local_node objectid="1">
            				<macid>0</macid>
            				<baudrate>125000</baudrate>
            				<slave>false</slave>
            			</local_node>
            		</devicenet>
            	</BUS_SECTION>
            </configuration>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.AddSectionToConfigurationString(System.String,System.String)">
            <summary>
            Add the section (BUS_SECTION) to the configuration string
            </summary>		
            <param name="configurationStr">configuration string in Xml format.</param>
            <param name="sectionName">The section name - (BUS_SECTION).</param>			
            <returns>
             the element (BUS_SECTION) added to the configuration string.
            </returns>
            Sample xml elements
            <configuration>
            	<BUS_SECTION>
            		<devicenet objectid="1">
            			<local_node objectid="1">
            				<macid>0</macid>
            				<baudrate>125000</baudrate>
            				<slave>false</slave>
            			</local_node>
            		</devicenet>
            	</BUS_SECTION>
            </configuration>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.UpdateSectionToConfigurationString(System.String,System.String,System.Xml.Linq.XElement)">
            <summary>
            Update the section (BUS_SECTION or other section) to the configuration string
            </summary>		
            <param name="configurationStr">configuration string in Xml format.</param>
            <param name="sectionName">The section name - (BUS_SECTION).</param>			
            <param name="newSection">The new replacing section.</param>		
            <returns>
             the new configuration string
            </returns>
            Sample xml elements
            <configuration>
            	<BUS_SECTION>
            		<devicenet objectid="1">
            			<local_node objectid="1">
            				<macid>0</macid>
            				<baudrate>125000</baudrate>
            				<slave>false</slave>
            			</local_node>
            		</devicenet>
            	</BUS_SECTION>
            </configuration>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.ReadStatementFromConfigurationString(System.String,System.String,System.String,System.String)">
            <summary>
            Read the statement (devicenet) from the configuration string
            </summary>		
            <param name="configurationStr">configuration string in Xml format.</param>
            <param name="sectionName">The section name - (BUS_SECTION).</param>
            <param name="statementName">The statement name - (devicenet).</param>
            <param name="statement_objectid">The statement ID.</param>				
            <returns>
             the element (devicenet) read from the configuration string.
            </returns>
            Sample xml elements
            <configuration>
            	<BUS_SECTION>
            		<devicenet objectid="1">
            			<local_node objectid="1">
            				<macid>0</macid>
            				<baudrate>125000</baudrate>
            				<slave>false</slave>
            			</local_node>
            		</devicenet>
            	</BUS_SECTION>
            </configuration>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.AddStatementToConfigurationString(System.String,System.String,System.String,System.String)">
            <summary>
            add the new statement (devicenet) to the configuration string
            </summary>		
            <param name="configurationStr">configuration string in Xml format.</param>
            <param name="sectionName">The section name - (BUS_SECTION).</param>
            <param name="statementName">The statement name - (devicenet).</param>
            <param name="statement_objectid">The statement ID.</param>				
            <returns>
             the new added statement element.
            </returns>
            Sample xml elements
            <configuration>
            	<BUS_SECTION>
            		<devicenet objectid="1">
            			<local_node objectid="1">
            				<macid>0</macid>
            				<baudrate>125000</baudrate>
            				<slave>false</slave>
            			</local_node>
            		</devicenet>
            	</BUS_SECTION>
            </configuration>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.UpdateStatementToConfigurationString(System.String,System.String,System.String,System.String,System.Xml.Linq.XElement)">
            <summary>
            update the new statement (devicenet) to the configuration string
            </summary>		
            <param name="configurationStr">configuration string in Xml format.</param>
            <param name="sectionName">The section name - (BUS_SECTION).</param>
            <param name="statementName">The statement name - (devicenet).</param>
            <param name="statement_objectid">The statement ID.</param>		
            <param name="newStatement">The new updating statement - (devicenet).</param>	
            <returns>
             the new updated configuration string.
            </returns>
            Sample xml elements
            <configuration>
            	<BUS_SECTION>
            		<devicenet objectid="1">
            			<local_node objectid="1">
            				<macid>0</macid>
            				<baudrate>125000</baudrate>
            				<slave>false</slave>
            			</local_node>
            		</devicenet>
            	</BUS_SECTION>
            </configuration>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.ReadItemValueFromConfigurationString(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Read the value (0, 125000, or false) of the Item (macid, baudrate or slave) in the configuration string
            </summary>
            <param name="configurationStr">configuration string in Xml format.</param>
            <param name="sectionName">The section name - (BUS_SECTION).</param>
            <param name="statementName">The statement name - (devicenet).</param>
            <param name="statement_objectid">The statement ID.</param>
            <param name="itemName">The item name - (local_node).</param>
            <param name="item_objectid">The item ID.</param>		
            <param name="valueTagName">The element (macid, baudrate, or slave) will be read.</param>				
            <returns>
             the value (0, 125000 or false) of the Item element (macid, baudrate or slave) read from the configuration string.
            </returns>
            Sample xml elements
            <configuration>
            	<BUS_SECTION>
            		<devicenet objectid="1">
            			<local_node objectid="1">
            				<macid>0</macid>
            				<baudrate>125000</baudrate>
            				<slave>false</slave>
            			</local_node>
            		</devicenet>
            	</BUS_SECTION>
            </configuration>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.ReadItemFromConfigurationString(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Read the item (local_node) from the configuration string
            </summary>		
            <param name="configurationStr">configuration string in Xml format.</param>
            <param name="sectionName">The section name - (BUS_SECTION).</param>
            <param name="statementName">The statement name - (devicenet).</param>
            <param name="statement_objectid">The statement ID.</param>
            <param name="itemName">The item name - (local_node).</param>
            <param name="item_objectid">The item ID.</param>				
            <returns>
             the element (local_node) read from the configuration string.
            </returns>
            Sample xml elements
            <configuration>
            	<BUS_SECTION>
            		<devicenet objectid="1">
            			<local_node objectid="1">
            				<macid>0</macid>
            				<baudrate>125000</baudrate>
            				<slave>false</slave>
            			</local_node>
            		</devicenet>
            	</BUS_SECTION>
            </configuration>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.AddItemToConfigurationString(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Add the item (local_node) to the configuration string
            </summary>		
            <param name="configurationStr">configuration string in Xml format.</param>
            <param name="sectionName">The section name - (BUS_SECTION).</param>
            <param name="statementName">The statement name - (devicenet).</param>
            <param name="statement_objectid">The statement ID.</param>
            <param name="itemName">The item name - (local_node).</param>
            <param name="item_objectid">The item ID.</param>				
            <returns>
             the added item (local_node) to the configuration string.
            </returns>
            Sample xml elements
            <configuration>
            	<BUS_SECTION>
            		<devicenet objectid="1">
            			<local_node objectid="1">
            				<macid>0</macid>
            				<baudrate>125000</baudrate>
            				<slave>false</slave>
            			</local_node>
            		</devicenet>
            	</BUS_SECTION>
            </configuration>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.ReadValueFromItem(System.Xml.Linq.XElement,System.String)">
            <summary>
            Read the value from Item element\Tag element - (macid, baudrate or slave)
            </summary>		
            <param name="itemElement">element item - (local_node).</param>
            <param name="valueTagName">The element (macid, baudrate or slave) is read.</param>		
            <returns>
             the value (0, 125000 or false) read from the item element (macid, baudrate or slave).
            </returns>
            Sample xml elements
            <configuration>
            	<BUS_SECTION>
            		<devicenet objectid="1">
            			<local_node objectid="1">
            				<macid>0</macid>
            				<baudrate>125000</baudrate>
            				<slave>false</slave>
            			</local_node>
            		</devicenet>
            	</BUS_SECTION>
            </configuration>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.UpdateValueToItem(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Update the value to Item element\Tag element - (macid, baudrate or slave)
            </summary>		
            <param name="itemElement">element item - (local_node).</param>
            <param name="valueTagName">The element (macid, baudrate or slave).</param>		
            <param name="value">The value of element (macid, baudrate or slave).</param>			
            Sample xml elements
            <configuration>
            	<BUS_SECTION>
            		<devicenet objectid="1">
            			<local_node objectid="1">
            				<macid>0</macid>
            				<baudrate>125000</baudrate>
            				<slave>false</slave>
            			</local_node>
            		</devicenet>
            	</BUS_SECTION>
            </configuration>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.AddValueToItem(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Add the value to Item element\Tag element - (macid, baudrate or slave)
            </summary>		
            <param name="itemElement">element item - (local_node).</param>
            <param name="valueTagName">The element (macid, baudrate or slave).</param>		
            <param name="value">The value of element (macid, baudrate or slave).</param>	
            <returns>
             the added value (0, 125000 or false) including tag (macid, baudrate or slave) to the config string
            </returns>
            Sample xml elements
            <configuration>
            	<BUS_SECTION>
            		<devicenet objectid="1">
            			<local_node objectid="1">
            				<macid>0</macid>
            				<baudrate>125000</baudrate>
            				<slave>false</slave>
            			</local_node>
            		</devicenet>
            	</BUS_SECTION>
            </configuration>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.UpdateItemToConfigurationString(System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.Linq.XElement)">
            <summary>
            update the new item (local_node) to the configuration string
            </summary>		
            <param name="configurationStr">configuration string in Xml format.</param>
            <param name="sectionName">The section name - (BUS_SECTION).</param>
            <param name="statementName">The statement name - (devicenet).</param>
            <param name="statement_objectid">The statement ID.</param>
            <param name="itemName">The item name - (local_node).</param>
            <param name="item_objectid">The item ID </param>	
            <param name="newItem">The new updating item - (local_node).</param>					
            <returns>
             the new updated configuration string.
            </returns>
            Sample xml elements
            <configuration>
            	<BUS_SECTION>
            		<devicenet objectid="1">
            			<local_node objectid="1">
            				<macid>0</macid>
            				<baudrate>125000</baudrate>
            				<slave>false</slave>
            			</local_node>
            		</devicenet>
            	</BUS_SECTION>
            </configuration>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.ConfigObjectToString(System.Object)">
            <summary>
            this will convert the configuration object to string
            </summary>		
            <param name="newConfig">The IConfigurationFile.</param>							
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.GetNextObjectID(System.Xml.Linq.XElement,System.String)">
            <summary>
            Get the next available object id for the element
            </summary>		
            <param name="parentElement">The parent element of the elements containing the object ID.</param>					
            <param name="elementNameOfObjectId">The element name of the element that contains the object ID.</param>
            <returns>
             the next object ID
            </returns>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.IsLocalNodeDefined">
            <summary>
            Verify the eVPlus local statement defined
            </summary>				
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.AddLocalNode(System.String,System.String,System.String,System.String)">
            <summary>
            Adds a local statement to the configuration file
            </summary>		
            <param name="vPlusControllerText">The controller configuration string.</param>
            <param name="macId">The mac id.</param>
            <param name="baudStringWithoutK">The baud string.</param>
            <param name="slave">The slave string.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.AddListDeviceNetInfo(System.String,Ace.Communication.VPlusServer.Abstraction.Parameters.DeviceNetInfo[])">
            <summary>
            Add a list of devicenet node to the config string.
            </summary>		
            <param name="vPlusControllerText">The controller configuration string.</param>
            <param name="addDeviceNetInfos">The list adding device net info.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.AddDeviceNetInfo(System.String,Ace.Communication.VPlusServer.Abstraction.Parameters.DeviceNetInfo)">
            <summary>
            Add a devicenet node to the config string.
            </summary>
            <param name="vPlusControllerText">The config string.</param>
            <param name="addDeviceNetInfo">The adding device net info.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.AddListIOSignalInfo(System.String,System.Collections.Generic.List{Ace.Adept.Server.Controls.IOSignalInfo[]},System.Int32)">
            <summary>
            add list iosignal node to config string
            </summary>		
            <param name="vPlusControllerText">The controller configuration string.</param>
            <param name="addListSignalInfos">The list of iosignal info to add.</param>		
            <param name="ioSignalType">The signal type input/output.</param>			
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.AddIOSignalInfo(System.String,Ace.Adept.Server.Controls.IOSignalInfo,System.Int32)">
            <summary>
            add iosignal node to config string
            </summary>
            <param name="vPlusControllerText">The config string.</param>	
            <param name="addSignalInfo">The iosignal info to add.</param>		
            <param name="ioSignalType">The signal type input/output.</param>			
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.DeleteListDeviceNetInfo(System.String,Ace.Communication.VPlusServer.Abstraction.Parameters.DeviceNetInfo[])">
            <summary>
            delete list of device net node to config string
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
            <param name="deleteDeviceNetInfos">The list of device net info to delete.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.DeleteDeviceNetInfo(System.String,Ace.Communication.VPlusServer.Abstraction.Parameters.DeviceNetInfo)">
            <summary>
            delete device net node to config string
            </summary>
            <param name="vPlusControllerText">The config string.</param>	
            <param name="deleteDeviceNetInfo">The device net info to delete.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.DeleteListIOSignalInfo(System.String,System.Collections.Generic.List{Ace.Adept.Server.Controls.IOSignalInfo[]},System.Int32)">
            <summary>
            delete list of iosignal node to config string
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
            <param name="deleteListSignalInfos">The list of iosignal info to delete.</param>		
            <param name="ioSignalType">The signal type input/output.</param>			
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.DeleteIOSignalInfo(System.String,Ace.Adept.Server.Controls.IOSignalInfo,System.Int32)">
            <summary>
            delete iosignal node to config string
            </summary>
            <param name="vPlusControllerText">The config string.</param>	
            <param name="deleteSignalInfo">The iosignal info to delete.</param>		
            <param name="ioSignalType">The signal type input/output.</param>			
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.PredicateSearchSignalInfo(System.Xml.Linq.XElement,Ace.Adept.Server.Controls.IOSignalInfo)">
            <summary>
            Predicate function for the linq query the list of matching signal infos.		
            </summary>
            <param name="existingSignalInfoElement">The existing signal info.</param>
            <param name="searchingSignalInfo">The searching signal info.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.ReadDeviceNetInfo(System.String)">
            <summary>
            read device net node from config string
            </summary>	
            <param name="vPlusControllerText">The config string.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.ReadIOBlockInfo(System.String,System.Int32,System.String,System.Int32[])">
            <summary>
            read IO Block info from config string
            this will read the information from the Input or Output structure based on the 
            input parameter ioBlockNumbers
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
            <param name="ioSignalType">The input/output signal.</param>
            <param name="signalSettingType">The signal type devicenet or adept.</param>
            <param name="ioBlockNumbers">The IO block numbers.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.ReadIOSignalInfo(System.String,System.Nullable{System.Int32},System.Int32,System.String)">
            <summary>
            read IO Signal from config string
            0 is inputs block. 
            1 is output blocks. 
            2 is soft signals. 
            3 is robot signals.
            </summary>				
            <param name="vPlusControllerText">The config string.</param>
            <param name="macId">The macid. macId = -1 will read all signals</param>
            <param name="ioSignalType">The input/output signal.</param>
            <param name="signalSettingType">The signal type devicenet or adept.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.ReadIOSignalInfoElement(System.String,System.Nullable{System.Int32},System.Int32,System.String)">
            <summary>
            read IO Signal from config string
            0 is inputs block. 
            1 is output blocks. 
            2 is soft signals. 
            3 is robot signals.
            </summary>
            <param name="vPlusControllerText">The config string.</param>		
            <param name="macId">The macid. macId = -1 will read all signals</param>
            <param name="ioSignalType">The input/output signal.</param>
            <param name="signalSettingType">The signal type devicenet or adept.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.ReadLocalNode(System.String,System.String@,System.String@,System.String@)">
            <summary>
            read local node values. 
            </summary>
            <param name="vPlusControllerText">The config string.</param>
            <param name="macId">The mac id.</param>
            <param name="baudStringWithoutK">The baud string.</param>
            <param name="slave">The slave string.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.ReadMacIDFromLocalNode(System.String)">
            <summary>
            Read the MAC ID from the Local Node in the Statement
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.ReadBaudRateFromLocalNode(System.String)">
            <summary>
            Read the Baud Rate from the Local Node in the Statement
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.UpdateLocalNode(System.String,System.String,System.String,System.String)">
            <summary>
            update local node values. 
            </summary>
            <param name="vPlusControllerText">The config string.</param>
            <param name="macId">The mac id.</param>
            <param name="baudStringWithoutK">The baud string.</param>
            <param name="slave">The slave string.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPControllerConfigFile.ConvertSignalInfoToElement(Ace.Adept.Server.Controls.IOSignalInfo,System.Int32)">
            <summary>
            Create a signal info element based on the signal info
            </summary>
            <param name="signalInfo">The signal info to covert.</param>	
            <param name="ioSignalType">The signal type.</param>	
        </member>
        <member name="T:Ace.Adept.Server.Controls.VPControllerConfigFile">
            <summary>
            CX controller config file class for accessing controler configuration file
            </summary>	
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.#ctor(Ace.Adept.Server.Controls.IVPlusConfig,Ace.Adept.Server.Controls.IAdeptController)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPControllerConfigFile"/> class.
            </summary>		
            <param name="config">The configuration.</param>								
            <param name="controller">The controller</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.ReadParametersFromString(System.String,System.Object[])">
            <summary>
            parse parameters from parameters string for CX controller
            </summary>		
            <param name="parametersString">The parameters string to read from.</param>
            <param name="parametersName">The parameters to read.</param>		
            <returns>
             the list of parameters (key and value)
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.ReadLocalNodeParameters(Ace.Core.Server.IAceServer,System.String,System.Object[])">
            <summary>
            read local node parameters for CX controller
            </summary>		
            <param name="server">The server to create the object</param>
            <param name="vPlusControllerText">The vplus controller text.</param>
            <param name="parametersName">The parameters to read.</param>
            <returns>
             the list of parameters (key and value) of the local node
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.ReadStatementItemValue(System.String,System.String)">
            <summary>
            Read the statement item value from the statement.
            </summary>
            <param name="statement">The statement.</param>
            <param name="statementId">The  statement id.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.ConfigObjectToString(System.Object)">
            <summary>
            this will read and return the IConfigurationFile.CurrentFileText
            </summary>		
            <param name="newConfig">The IConfigurationFile.</param>							
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.GetNextObjectID(Ace.Adept.Server.Controls.Configuration.Data.IConfigurationStatement[],System.String)">
            <summary>
            Get the next available object id for the element
            </summary>		
            <param name="statements">The statement containing the object ID.</param>					
            <param name="statementId">The statement id that contains the object ID.</param>
            <returns>
             the next object ID
            </returns>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.IsLocalNodeDefined">
            <summary>
            Verify the vPlus local statement defined
            </summary>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.AddLocalNode(System.String,System.String,System.String,System.String)">
            <summary>
            Adds a local statement to the configuration file
            </summary>		
            <param name="vPlusControllerText">The controller configuration string.</param>
            <param name="macId">The mac id.</param>
            <param name="baudStringWithoutK">The baud string.</param>
            <param name="slave">The slave string.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.AddListDeviceNetInfo(System.String,Ace.Communication.VPlusServer.Abstraction.Parameters.DeviceNetInfo[])">
            <summary>
            Add a list of devicenet node to the config string.
            </summary>			
            <param name="vPlusControllerText">The controller configuration string.</param>
            <param name="addDeviceNetInfos">The list of adding device net info.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.AddDeviceNetInfo(System.String,Ace.Communication.VPlusServer.Abstraction.Parameters.DeviceNetInfo)">
            <summary>
            Add a devicenet node to the config string.
            </summary>		
            <param name="vPlusControllerText">The configuration file.</param>
            <param name="addDeviceNetInfo">The adding device net info.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.AddListIOSignalInfo(System.String,System.Collections.Generic.List{Ace.Adept.Server.Controls.IOSignalInfo[]},System.Int32)">
            <summary>
            Add a devicenet node to the config string.
            </summary>		
            <param name="vPlusControllerText">The controller configuration string.</param>
            <param name="addListSignalInfos">The list of adding signal info.</param>
            <param name="ioSignalType">The signal type input/output.</param>			
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.AddIOSignalInfo(System.String,Ace.Adept.Server.Controls.IOSignalInfo,System.Int32)">
            <summary>
            Add a devicenet node to the config string.
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
            <param name="addSignalInfo">The adding signal info.</param>
            <param name="ioSignalType">The signal type input/output.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.DeleteListDeviceNetInfo(System.String,Ace.Communication.VPlusServer.Abstraction.Parameters.DeviceNetInfo[])">
            <summary>
            delete list device net node to config string
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
            <param name="deleteDeviceNetInfos">The list device net info to delete.</param>				
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.DeleteDeviceNetInfo(System.String,Ace.Communication.VPlusServer.Abstraction.Parameters.DeviceNetInfo)">
            <summary>
            delete device net node to config string
            </summary>		
            <param name="vPlusControllerText">The config string.</param>	
            <param name="deleteDeviceNetInfo">The device net info to delete.</param>				
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.DeleteListIOSignalInfo(System.String,System.Collections.Generic.List{Ace.Adept.Server.Controls.IOSignalInfo[]},System.Int32)">
            <summary>
            delete list of iosignal node to config string
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
            <param name="deleteListSignalInfos">The list of iosignal info to delete.</param>		
            <param name="ioSignalType">The signal type input/output.</param>	
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.DeleteIOSignalInfo(System.String,Ace.Adept.Server.Controls.IOSignalInfo,System.Int32)">
            <summary>
            delete iosignal node to config string
            </summary>		
            <param name="vPlusControllerText">The config string.</param>	
            <param name="deleteSignalInfo">The device net info to delete.</param>	
            <param name="ioSignalType">The signal type input/output.</param>	
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.ReadDeviceNetInfo(System.String)">
            <summary>
            read device net node from config string
            </summary>							
            <param name="vPlusControllerText">The config string.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.ReadIOBlockInfo(System.String,System.Int32,System.String,System.Int32[])">
            <summary>
            read IO Block info from config string
            this will read the information from the Input or Output structure based on the 
            input parameter ioBlockNumbers
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
            <param name="ioSignalType">The input/output signal.</param>
            <param name="signalSettingType">The signal type devicenet or adept.</param>
            <param name="ioBlockNumbers">The IO block numbers.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.ReadIOSignalInfo(System.String,System.Nullable{System.Int32},System.Int32,System.String)">
            <summary>
            read IO Signal from config string
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
            <param name="macId">The macid.</param>						
            <param name="ioSignalType">The signal type.</param>		
            <param name="signalSettingType">The signal type devicenet or adept.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.ReadIOSignalInfoStatement(System.String,System.Nullable{System.Int32},System.Int32)">
            <summary>
            read IO Signal from config string
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
            <param name="macId">The macid.</param>						
            <param name="ioSignalType">The signal type.</param>						
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.PredicateSameSignalType(Ace.Adept.Server.Controls.Configuration.Data.IConfigurationStatement,System.Int32,System.Int32)">
            <summary>
            Predicate function for the linq query the list of matching signal infos in the range of singal type
            </summary>
            <param name="statement">The existing statement.</param>
            <param name="rangeStart">The signal range start.</param>
            <param name="rangeEnd">The signal range end.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.ReadLocalNode(System.String,System.String@,System.String@,System.String@)">
            <summary>
            read local node values. 
            </summary>
            <param name="vPlusControllerText">The config string.</param>
            <param name="macId">The mac id.</param>
            <param name="baudStringWithoutK">The baud string.</param>
            <param name="slave">The slave string.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.ReadMacIDFromLocalNode(System.String)">
            <summary>
            Read the MAC ID from the Local Node in the Statement
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.ReadBaudRateFromLocalNode(System.String)">
            <summary>
            Read the Baud Rate from the Local Node in the Statement
            </summary>		
            <param name="vPlusControllerText">The config string.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPControllerConfigFile.UpdateLocalNode(System.String,System.String,System.String,System.String)">
            <summary>
            update local node values. 
            </summary>
            <param name="vPlusControllerText">The config string.</param>
            <param name="macId">The mac id.</param>
            <param name="baudStringWithoutK">The baud string.</param>
            <param name="slave">The slave string.</param>		
        </member>
        <member name="T:Ace.Adept.Server.Controls.VPlusMemoryComparison">
            <summary>
            Utility class that compares two different instances of V+ memory and identifies differences between them.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemoryComparison.Memory1">
            <summary>
            Gets the first memory instance
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemoryComparison.Memory2">
            <summary>
            Gets the second memory instance
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemoryComparison.AreSame">
            <summary>
            Gets a value indicating whether the memory instances are considered the same.
            </summary>
            <value>
              <c>true</c> if the memory instances are the same; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemoryComparison.ModuleListingDifference">
            <summary>
            Gets a value indicating whether a module listing difference was detected.
            </summary>
            <value>
            <c>true</c> if a difference in the module listing was detected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemoryComparison.Memory1AtDefault">
            <summary>
            Gets a value indicating whether the memory instance 1 is in a default state.
            </summary>
            <value>
              <c>true</c> if the memory instances is in a default state; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemoryComparison.Memory2AtDefault">
            <summary>
            Gets a value indicating whether the memory instance 2 is in a default state.
            </summary>
            <value>
              <c>true</c> if the memory instances is in a default state; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemoryComparison.VariablesOnlyInMemory1">
            <summary>
            Gets the variables only in memory1.
            </summary>
            <value>
            The variables only in memory1.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemoryComparison.VariablesOnlyInMemory2">
            <summary>
            Gets the variables only in memory2.
            </summary>
            <value>
            The variables only in memory2.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemoryComparison.VariablesInBoth">
            <summary>
            Gets the variables in both memory1 and memory2.
            </summary>
            <value>
            The variables shared by memory1 and memory2.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemoryComparison.ProgramsSameInBoth">
            <summary>
            Gets the listing of V+ programs that are in memory 1 and memory 2 and are the same
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemoryComparison.ProgramsDifferentInBoth">
            <summary>
            Gets the listing of V+ programs that are in memory 1 and memory 2 but are different
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemoryComparison.ProgramsOnlyInMemory1">
            <summary>
            Gets the listing of V+ programs that are in memory 1 but not in memory 2 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemoryComparison.ProgramsOnlyInMemory2">
            <summary>
            Gets the listing of V+ programs that are in memory 2 but not in memory 1 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemoryComparison.#ctor(Ace.Adept.Server.Controls.IVPlusMemory,Ace.Adept.Server.Controls.IVPlusMemory)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusMemoryComparison"/> class.
            </summary>
            <param name="memory1">The first instance of memory.</param>
            <param name="memory2">The second instance of memory.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemoryComparison.Compare">
            <summary>
            Compares the current contents of memory 
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VPlusMemory">
            <summary>
            A class for representing the contents of V+ memory
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.MergeLegacyModulesAndVariables(Ace.Core.Server.IAceServer,Ace.Adept.Server.Desktop.Connection.IVpLinkedObject)">
            <summary>
            Looks for V+ modules and variable collections in the workspace (that have been deprecated) and merges them into memory for the specified linked object
            </summary>
            <param name="aceServer">The ace server.</param>
            <param name="linkedObject">The linked object.</param>
            <returns>Were legacy objects merged</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.RemoveFreeModulesAndVariables(Ace.Core.Server.IAceServer)">
            <summary>
            Removes all modules and variables not associated with a controller.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemory.Modules">
            <summary>
            Gets the modules in V+ memory.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemory.UserModules">
            <summary>
            Gets the modules in V+ memory that are user supplied.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemory.ExcludedModules">
            <summary>
            Gets the modules in V+ memory that are considered excluded.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMemory.Variables">
            <summary>
            Gets the variables in V+ memory.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Controls.VPlusMemory.PropertyModified">
            <summary>
            An event raised when a property is modified. Note that not all properties will throw this event.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusMemory"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.InitializeLinkedObject(Ace.Adept.Server.Desktop.Connection.IVpLinkedObject)">
            <summary>
            Initializes the linked object.
            </summary>
            <param name="linkedObject">The linked object.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.PurgeDuplicatePrograms(Ace.Adept.Server.Controls.IVPlusModule)">
            <summary>
            Purges the module of any program that have duplicate names.
            </summary>
            <param name="module">The module.</param>
            <remarks>
            This should never happen now, but old workspaces could contain duplicate programs in a module.
            This can lead to problems loading the program from the workspace
            </remarks>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.OnPropertyModified(System.String)">
            <summary>
            Called when a property is modified.
            </summary>
            <param name="propertyName">Name of the modified property.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.OnPropertyModified(System.String,System.Boolean)">
            <summary>
            Called when a property is modified.
            </summary>
            <param name="propertyName">Name of the modified property.</param>
            <param name="isSerialized">if set to <c>true</c> the property is serialized with the workspace.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.OnReconciliationRequired(Ace.Adept.Server.Controls.VPlusMemoryComparison,Ace.Adept.Server.Controls.VPlusMemoryReconcilitationStatus)">
            <summary>
            Raises the <see cref="E:OnReconciliationRequired" /> event.
            </summary>
            <param name="comparison">The comparison summary.</param>
            <param name="status">The status of the reconciliation attempt.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.ChangeEventHooks(System.Boolean)">
            <summary>
            Changes the status of the event hooks.
            </summary>
            <param name="hook">if set to <c>true</c> the event hooks are enabled.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.SynchronizeModules(System.Collections.Generic.Dictionary{System.String,System.String[]},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String[]})">
            <summary>
            Synchronizes the V+ module programs from the program line listings
            </summary>
            <param name="moduleAndProgramListing">The module and program listing.</param>
            <param name="protectedModules">The listing of modules that are protected.</param>
            <param name="programListing">Dictionary containing the program names and lines associated with the programs.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.SynchronizeModule(Ace.Adept.Server.Controls.VPlusModule,System.Boolean,System.String[],System.Collections.Generic.Dictionary{System.String,System.String[]})">
            <summary>
            Synchronizes the module with the listing of program lines
            </summary>
            <param name="module">The module.</param>
            <param name="isProtected">if set to <c>true</c>, the module contains protected programs.</param>
            <param name="programsInModule">The programs in module.</param>
            <param name="programListing">The program listing.</param>
            <returns>
            Was the collection of programs modified
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.PullControllerMemory(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs},Ace.Adept.Server.Controls.IAdeptController)">
            <summary>
            Extracts the contents of V+ memory and updates the controller memory
            </summary>
            <param name="progressHandler">The progress handler.</param>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.PullControllerMemoryModules(Ace.Adept.Server.Controls.IAdeptController,System.String[])">
            <summary>
            Extracts the V+ programs and modules from V+ memory 
            </summary>
            <param name="controller">The controller.</param>
            <param name="lines">The lines of the STORE listing.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.PullMemoryVariables(System.String[])">
            <summary>
            Extracts the V+ variables from a STORE listing
            </summary>
            <param name="lines">The lines of the STORE listing.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.AddVariables(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adds the variables from the listing
            </summary>
            <param name="variablesInFile">The variables in file.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.PullLinkedObjectMemory(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs},Ace.Adept.Server.Desktop.Connection.IVpLinkedObject)">
            <summary>
            Extracts the contents of V+ memory from a linked object and updates the controller memory
            </summary>
            <param name="progressHandler">The progress handler.</param>
            <param name="linkedObject">The linked object.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.CopyFromMemory(Ace.Adept.Server.Controls.VPlusMemory,System.Boolean,System.Boolean)">
            <summary>
            Copies the contents of the specified memory object.
            </summary>
            <param name="activeMemory">The active memory.</param>
            <param name="userContent">if set to <c>true</c> copy the user content.</param>
            <param name="excludedContent">if set to <c>true</c> copy the excluded content.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.UpdateVariableValues(Ace.Adept.Server.Controls.VPlusMemory)">
            <summary>
            Updates the variable initial values based on the specified memory object
            </summary>
            <param name="activeMemory">The active memory.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.ZeroMemory">
            <summary>
            Zeroes the memory on the linked object
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.module_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the module control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.variables_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the variables control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.Link_ProgramDeleted(System.Object,Ace.Communication.Link.ProgramEventArgs)">
            <summary>
            Handles the ProgramDeleted event of the Link control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.ProgramEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.link_ProgramRenamed(System.Object,Ace.Communication.Link.ProgramEventArgs)">
            <summary>
            Handles the ProgramRenamed event of the link control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.ProgramEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.Link_ModuleAssigned(System.Object,Ace.Communication.Link.ModuleAssignmentEventArgs)">
            <summary>
            Handles the ModuleAssigned event of the Link control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.ModuleAssignmentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.Synchronize(Ace.Adept.Server.Controls.IVPlusModule)">
            <summary>
            Synchronizes the specified module with the modules in memory.
            </summary>
            <param name="module">The module.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.Synchronize(Ace.Adept.Server.Controls.IVPlusGlobalVariableCollection)">
            <summary>
            Synchronizes the specified variable collection with the variables in memory.
            </summary>
            <param name="variableCollection">The variable collection.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.FindProgram(System.String)">
            <summary>
            Finds the program of the specified name
            </summary>
            <param name="programName">Name of the program.</param>
            <returns>The program or null if the program does not exist</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.FindModule(System.String)">
            <summary>
            Finds the module of the specified name
            </summary>
            <param name="moduleName">Name of the module.</param>
            <returns>The module or null if the module does not exist</returns>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.FindModuleForProgram(System.String)">
            <summary>
            Finds the module for the specified program
            </summary>
            <param name="programName">Name of the program.</param>
            <returns>The module the program belongs to or null if the module does not exist</returns>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.FindModuleForProgram(Ace.Adept.Server.Controls.IVPlusModuleProgram)">
            <summary>
            Finds the module for the specified program
            </summary>
            <param name="program">The specified program.</param>
            <returns>The module the program belongs to or null if the module does not exist</returns>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.IsExcluded(Ace.Adept.Server.Controls.IVPlusModule)">
            <summary>
            Determines whether the specified module is considered an excluded module that is not saved with the workspace
            </summary>
            <param name="module">The module.</param>
            <returns>
              <c>true</c> if the specified module is excluded; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.IsExcluded(Ace.Adept.Server.Controls.IVPlusModuleProgram)">
            <summary>
            Determines whether the specified program is considered an excluded program that is not saved with the workspace
            </summary>
            <param name="program">The program.</param>
            <returns>
              <c>true</c> if the specified program is excluded; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.ChangeProgramName(System.String,System.String)">
            <summary>
            Changes the name of the specified program.
            </summary>
            <param name="programName">Name of the program.</param>
            <param name="newName">The new name.</param>
            <returns>Was the name change successful</returns>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.ChangeModuleName(System.String,System.String)">
            <summary>
            Changes the name of the specified module.
            </summary>
            <param name="moduleName">Name of the module.</param>
            <param name="newName">The new name.</param>
            <returns>Was the name change successful</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.DeleteModule(Ace.Adept.Server.Controls.IVPlusModule)">
            <summary>
            Deletes the specified module from memory.
            </summary>
            <param name="module">The module.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.Clear">
            <summary>
            Clears the contents of V+ memory
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.Pull">
            <summary>
            Pulls the contents of V+ memory to the memory object
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.Pull(System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Pulls the contents of V+ memory to the memory object
            </summary>
            <param name="progressHandler">The progress handler.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.PullModule(System.String)">
            <summary>
            Pulls all the programs associated with the specified module from the controller to the memory object
            </summary>
            <param name="moduleName">Name of the module.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.Push">
            <summary>
            Pushes the offline contents to V+ memory 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.Push(System.Boolean,System.Boolean)">
            <summary>
            Pushes the offline contents to V+ memory
            </summary>
            <param name="pushModules">if set to <c>true</c> push the modules.</param>
            <param name="pushVariables">if set to <c>true</c> push the variables.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.Reconcile">
            <summary>
            Reconciles the contents of memory with the active memory on the target system
            </summary>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMemory.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that 
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.EncoderProperties">
            <summary>
            Identifies the properties associated with the encoder.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.EncoderProperties.propertyModified">
            <summary>
            An event raised when the object is modified.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Controls.EncoderProperties.PropertyModified">
            <summary>
            An event raised when the object is modified.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.EncoderProperties.DefaultRunningVelocity">
            <summary>
            The default encoder running velocity in cts/s
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EncoderProperties.Running">
            <summary>
            Gets or sets a value indicating whether the encoder is running in emulation mode.
            </summary>
            <value><c>true</c> if the encoder is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EncoderProperties.Position">
            <summary>
            Gets or sets the position of the encoder.
            </summary>
            <value></value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EncoderProperties.Velocity">
            <summary>
            Gets or sets the velocity of the encoder.
            </summary>
            <value></value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EncoderProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.EncoderProperties"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EncoderProperties.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EncoderProperties.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EncoderProperties.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EncoderProperties.OnPropertyModified(System.String)">
            <summary>
            Trigger the modified event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Ace.Adept.Server.Controls.FileCache">
            <summary>
            Helper class that provided for offline storage of files
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.FileCache.fileDictionary">
            <summary>
            The list of all full path file names and the data
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.FileCache.configurationFileName">
            <summary>
            The name of the configuration file
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.FileCache.ConfigurationFileName">
            <summary>
            Gets or sets the name of the configuration file.
            </summary>
            <value>The name of the configuration file.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FileCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.FileCache"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FileCache.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FileCache.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FileCache.Clear">
            <summary>
            Clears all files from the cache.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FileCache.AddFile(System.String,System.String)">
            <summary>
            Adds the file to the cache
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="text">The contents of the file.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FileCache.AddFile(System.String,System.Byte[])">
            <summary>
            Adds the file to the cache
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FileCache.DeleteFile(System.String)">
            <summary>
            Deletes the file in the associated 
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FileCache.ListFiles">
            <summary>
            Lists the files in the cache
            </summary>
            <returns>The files in the cache</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FileCache.ListFiles(System.String)">
            <summary>
            Lists the files in the specified directory
            </summary>
            <param name="directoryName">Name of the directory.</param>
            <returns>The files in the directory</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FileCache.DeleteDirectory(System.String)">
            <summary>
            Deletes all the files in the specified directory.
            </summary>
            <param name="directoryName">Name of the directory.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FileCache.GetFileBytes(System.String)">
            <summary>
            Gets the file bytes.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>The file contents</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FileCache.GetFileText(System.String)">
            <summary>
            Gets the file text.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>The file contents</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FileCache.GetConfigurationFile">
            <summary>
            Gets the configuration file text.
            </summary>
            <returns>The file contents</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FileCache.ImportFrom(Ace.Adept.Server.Controls.FileCache)">
            <summary>
            Fills us with a copy of another file cache.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VPlusMonitorWindow">
            <summary>
            Represents a V+ monitor window to a controller
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.VPlusMonitorWindow.objectLink">
            <summary>
            The controller associated with the V+ program
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusMonitorWindow.ObjectLink">
            <summary>
            Gets or sets the calibration used to convert from camera to robot coordinates.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMonitorWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusMonitorWindow"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMonitorWindow.#ctor(Ace.Adept.Server.Desktop.Connection.IVpLinkedObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusMonitorWindow"/> class.
            </summary>
            <param name="link">The communications link.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMonitorWindow.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMonitorWindow.Dispose(System.Boolean)">
            <summary>
            Disposes of the object when it is explicitly disposed or garbage-collected.
            This removes the object from its parent directory.
            </summary>
            <param name="isDisposing">True if the object is being explicitly disposed.
            False if it is being garbage-collected.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMonitorWindow.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusMonitorWindow.objectLink_Closed(System.Object,System.EventArgs)">
            <summary>
            Handles the Closed event of the objectLink control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Adept.Server.Controls.EVPlusFileSystem">
            <summary>
            eV+ file system functions.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EVPlusFileSystem.CustomDir">
            <summary>
            Gets the eV+ custom directory
            </summary>
            <value>The </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EVPlusFileSystem.ConfigFile">
            <summary>
            The configuration file for the file system
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EVPlusFileSystem.ConfigFormatFile">
            <summary>
            The configuration format file
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EVPlusFileSystem.DataFormatFile">
            <summary>
            The data format file
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EVPlusFileSystem.SystemDir">
            <summary>
            Gets the V+ system directory.
            </summary>
            <value>The system directory.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EVPlusFileSystem.SpecDir">
            <summary>
            Gets the V+ Spec directory.
            </summary>
            <value>The Spec directory.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EVPlusFileSystem.PlatformDir">
            <summary>
            Gets the V+ platform directory.
            </summary>
            <value>The system directory.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EVPlusFileSystem.ManifestFilepath">
            <summary>
            Gets the manifest file path.
            </summary>
            <value>The manifest file path.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EVPlusFileSystem.ControllerConfigurationFilePath">
            <summary>
            Configuration file path at the controller
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EVPlusFileSystem.ConfigurationFormatFilePath">
            <summary>
            Configuration format file path at the controller
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EVPlusFileSystem.DataFormatFilePath">
            <summary>
            Data Format file path
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.EVPlusFileSystem.AdeptFileRoot">
            <summary>
            The directory that contains the Adept files
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EVPlusFileSystem.EVPlusConfigFormatText">
            <summary>
            eV+ configuration format text.
            </summary>
            <value>The content text from the eV+ configuration format file</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.EVPlusFileSystem.EVPlusDataFormatText">
            <summary>
            eV+ data format text.
            </summary>
            <value>The content text from the eV+ data format file</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.#ctor(Ace.Adept.Server.Controls.AdeptController)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.EVPlusFileSystem"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.InitializeFileCache">
            <summary>
            Initializes the file cache associated with the controller
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.GetConfigurationDirectoryContents">
            <summary>
            Get the configuration directory contents for the eV+ file system
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.GetConfigurationFormatFileContents">
            <summary>
            Get the configuration format file for the eV+ file system
            </summary>
            <returns>The contents of the file</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.GetDataFormatFileContents">
            <summary>
            Get the data format file for the eV+ file system
            </summary>
            <returns>The contents of the file</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.GetLanguageDefinitionContents">
            <summary>
            Gets the language definition file
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.GetLangageStringContents">
            <summary>
            Gets the language definition string file
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.BackupVPlus(System.String,System.String,System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Backs up V+ to the specified directory on the PC. Returns an array of spec files that were saved.
            </summary>
            <param name="vPlusDevice">V+ device (such as "DISK").</param>
            <param name="vPlusDisk">V+ disk (such as "D:).</param>
            <param name="pcDirPath">The PC backup directory for the old version of V+.</param>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.RestoreVPlus(System.String,System.String,System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Restores V+ from the specified directory.
            </summary>
            <param name="distributionPath">Directory in which the V+ distribution is found.</param>
            <param name="vPlusDevice">Device, such as "DISK"</param>
            <param name="vPlusDisk">Disk target, such as "D:".</param>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.VerifyVersionUpgrade(System.String,System.String@,System.String@)">
            <summary>
            Check to see if the V+ version being installed from a specified directory
            represents a version upgrade. Returns true if it is OK to upgrade (the version number
            is either the same as the current version). If a false is returned, the user should be
            asked if it is ok to upgrade
            </summary>
            <param name="distributionDirectory">The distribution directory.</param>
            <param name="oldVersion">The old V+ version detected.</param>
            <param name="newVersion">The new V+ version detected.</param>
            <returns>Is the upgrade allowed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.UpgradeVPlus(System.String,System.String,System.String,System.Boolean,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Upgrades V+ from a PC directory.
            </summary>
            <param name="vPlusDevice">V+ device (such as "DISK").</param>
            <param name="vPlusDisk">V+ disk (such as "D:).</param>
            <param name="pcVPlusDirectory">The PC directory containing the new version of V+.</param>
            <param name="upgradeFirmware">true to upgrade system FPGA's and servo code; false to upgrade V+ only.</param>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.CheckDriveSpace(System.String,System.String,System.String)">
            <summary>
            Checks the device for sufficient space to install V+.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.ValidateNewVersionFiles(System.Boolean,System.String)">
            <summary>
            Validates the new version files.
            </summary>
            <param name="upgrade">if set to <c>true</c> an upgrade is being performed. If <c>false</c> a restore is being performed.</param>
            <param name="distributionPath">The path on the PC where the V+ files are located.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.GetEVPlusVersionFromManifest(System.String)">
            <summary>
            Gets the eV+ version from manifest.
            </summary>
            <param name="manifestPath">The manifest path.</param>
            <returns>The version number.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.GetDirectoriesFromManifest(System.String)">
            <summary>
            Gets the directories from manifest. 
            </summary>
            <param name="manifestPath">The manifest path.</param>
            <returns>The list of the eV+ directories sorted in alphabetical order.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.GetRequiredFilesFromManifest(System.String,System.Boolean)">
            <summary>
            Gets the path for all required files depending on the operation is a upgrade or not.
            </summary>
            <param name="manifestPath">The manifest path.</param>
            <param name="upgrade">if set to <c>true</c> [upgrade].</param>
            <returns>The list of the eV+ files.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.GetManifestContent(System.String)">
            <summary>
            Gets the content of the manifest.
            </summary>
            <param name="manifestPath">The manifest path.</param>
            <returns>the manifest content as a byte array.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.CompareLicenseFiles(System.String,System.String)">
            <summary>
            Compares the license files between the source and destination files.
            </summary>
            <param name="sourcePath">The source path.</param>
            <param name="destPath">The dest path.</param>
            <returns>Do the security IDs in the files match</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.EVPlusFileSystem.GetLicenseSecurityID(System.String)">
            <summary>
            Gets the license security identifier from the license file
            </summary>
            <param name="licenseFilePath">The license file path.</param>
            <returns>The security ID</returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VPlusFileSystemBase">
             <summary>
             Base class providing V+ file system abstraction.
             </summary>
             <example>A class that simultaneously upgrades V+ and firmware on multiple controllers.
             <code>
             using Ace.Adept.Server.Controls;
             using System;
             using System.IO;
            
             // Concurrently upgrades every controller whose IP address is listed in the command line.
             // Invoke with a command like "VPlusUpgrade 192.9.222.118 192.9.222.119
             public class VPlusUpgrade {
                 const string NewVPlusDirectory = @"C:\ADEPT\V\16.3D2";
                 const string WorkingDirectory = @"C:\TEMP";
            
                 public static void Main(string[] args) {
                     foreach (string ipAddress in args) {
                         new System.Threading.Thread(UpgradeThread).Start(ipAddress);
                     }
                 }
            
                 private static void UpgradeThread(object ipAddress) {
                     AdeptController controller = new AdeptController(ipAddress.ToString());
                     VPlusFileSystem fileSystem = controller.FileSystem;
                     try {
                         Console.WriteLine(controller + ": Connecting to Adept controller");
                         controller.Enabled = true;
            
                         // Backup, then upgrade V+
                         Console.WriteLine(controller + ": Upgrading V+ on controller...");
                         fileSystem.UpgradeVPlus(Path.Combine(WorkingDirectory, controller.Address), NewVPlusDirectory, true, null);
            
                         Console.WriteLine(controller + ": All done upgrading V+! Please reboot system to use new FPGA updates.");
                     } catch (Exception ex) {
                         Console.WriteLine(controller + ": ERROR: " + ex);
                     }
                 }
             }
             </code>
             </example>
        </member>
        <member name="F:Ace.Adept.Server.Controls.VPlusFileSystemBase.VPlusSectorSize">
            <summary>
            The size of a V+ sector. Used to convert from sectors to bytes.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.VPlusFileSystemBase.controller">
            <summary>
            The Adept Controller owning the file system object
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusFileSystemBase.Controller">
            <summary>
            Gets the Adept Controller owning the file system object
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusFileSystemBase.ConfigFile">
            <summary>
            The configuration file for the file system
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusFileSystemBase.SystemDir">
            <summary>
            Gets the V+ system directory.
            </summary>
            <value>The system directory.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusFileSystemBase.SpecDir">
            <summary>
            Gets the V+ Spec directory.
            </summary>
            <value>The Spec directory.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusFileSystemBase.SystemFile">
            <summary>
            Gets the V+ system file.
            </summary>
            <value>The system file.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusFileSystemBase.ControllerConfigurationFilePath">
            <summary>
            Configuration file path at the controller
            </summary>
            <value>Full path for the configuration file at the controller</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.#ctor(Ace.Adept.Server.Controls.AdeptController)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusFileSystem"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusFileSystemBase.Impl">
            <summary>
            Gets a handle to the low level controller communications object. 
            </summary>
            <value>The low level controller communications object.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.Combine(System.String,System.String)">
            <summary>
            Combines two V+ path strings.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.InitializeFileCache">
            <summary>
            Initializes the file cache associated with the controller
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.VerifyVersionUpgrade(System.String,System.String@,System.String@)">
            <summary>
            Check to see if the V+ version being installed from a specified directory
            represents a version upgrade. Returns true if it is OK to upgrade (the version number
            is either the same as the current version). If a false is returned, the user should be
            asked if it is ok to upgrade
            </summary>
            <param name="distributionDirectory">The distribution directory.</param>
            <param name="oldVersion">The old V+ version detected.</param>
            <param name="newVersion">The new V+ version detected.</param>
            <returns>Is the upgrade allowed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.UpgradeVPlus(System.String,System.Boolean,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Upgrades V+ from a PC directory.
            </summary>
            <param name="pcVPlusDirectory">The PC directory containing the new version of V+.</param>
            <param name="upgradeFirmware">true to upgrade system FPGA's and servo code; false to upgrade V+ only.</param>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.UpgradeVPlus(System.String,System.String,System.String,System.Boolean,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Upgrades V+ from a PC directory.
            </summary>
            <param name="vPlusDevice">V+ device (such as "DISK").</param>
            <param name="vPlusDisk">V+ disk (such as "D:).</param>
            <param name="pcVPlusDirectory">The PC directory containing the new version of V+.</param>
            <param name="upgradeFirmware">true to upgrade system FPGA's and servo code; false to upgrade V+ only.</param>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.BackupSpecs(System.String)">
            <summary>
            Backup specs to a specified directory on the PC. Returns an array of paths to the spec files saved on the PC;
            array element 0 is encoders, array element 1 is robot 1, etc.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.CopyServoKitSpecFiles(System.String,System.String,System.String)">
            <summary>
            Copy servo kit spec files on V+ to PC. Returns an array of spec files that were copied to PC.
            </summary>
            <param name="vPlusDevice">V+ device (such as "DISK").</param>
            <param name="vPlusDisk">V+ disk (such as "D:).</param>
            <param name="pcDirPath">The PC directory for the spec files.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.RestoreVPlus(System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Restores V+ from the specified directory.
            </summary>
            <param name="distributionPath">Directory in which the V+ distribution is found.</param>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.RestoreVPlus(System.String,System.String,System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Restores V+ from the specified directory.
            </summary>
            <param name="distributionPath">Directory in which the V+ distribution is found.</param>
            <param name="vPlusDevice">Device, such as "DISK"</param>
            <param name="vPlusDisk">Disk target, such as "D:".</param>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.CopyDirectoryToPC(System.String,System.String,System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Recursively copy a V+ directory to the PC, creating directories as necessary and posting progress reports.
            Throws a "Directory not found" exception if the V+ directory is missing.
            </summary>
            <param name="vPlusDevice">Device, such as "DISK"</param>
            <param name="vPlusDirPath">The V+ source directory, such as "D:\mydir".</param>
            <param name="pcDirPath">The PC target directory (need not exist), such as "C:\temp\mydir". Existing files will be overwritten.</param>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.CopyDirectoryToVPlus(System.String,System.String,System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Recursively copy a PC directory to V+, creating directories as necessary and reporting progress.
            </summary>
            <param name="pcDirPath">The PC source directory (need not exist), such as "C:\temp\mydir".</param>
            <param name="vPlusDevice">Device, such as "DISK"</param>
            <param name="vPlusDirPath">The V+ target directory, such as "D:\mydir". Existing files will be overwritten.</param>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.BackupVPlus(System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Backs up V+ to the specified directory on the PC. Returns an array of spec files that were saved.
            </summary>
            <param name="pcDirPath">The PC backup directory for the old version of V+.</param>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.BackupVPlus(System.String,System.String,System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Backs up V+ to the specified directory on the PC. Returns an array of spec files that were saved.
            </summary>
            <param name="vPlusDevice">V+ device (such as "DISK").</param>
            <param name="vPlusDisk">V+ disk (such as "D:).</param>
            <param name="pcDirPath">The PC backup directory for the old version of V+.</param>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.CreateDirectory(System.String)">
            <summary>
            Creates a V+ directory on the specified path.
            </summary>
            <param name="vPlusDir">The V+ directory, such as "D:\mydir".</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.CreateDirectory(System.String,System.String)">
            <summary>
            Creates a V+ directory on the specified path.
            </summary>
            <param name="vPlusDevice">Device, such as "DISK"</param>
            <param name="vPlusDir">The V+ directory, such as "D:\mydir".</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.DeleteDirectory(System.String)">
            <summary>
            Recursively deletes a V+ directory on the specified path.
            </summary>
            <param name="vPlusDir">The V+ directory, such as "D:\mydir".</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.DeleteDirectory(System.String,System.String)">
            <summary>
            Recursively deletes a V+ directory on the specified path.
            </summary>
            <param name="vPlusDevice">Device, such as "DISK"</param>
            <param name="vPlusDir">The V+ directory, such as "D:\mydir".</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.FormatDrive">
            <summary>
            Format the specified disk and return the number of bad sectors found.
            </summary>
            <returns>
            Number of bad sectors found on device and remapped.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.FormatDrive(System.String,System.String)">
            <summary>
            Format the specified disk and return the number of bad sectors found.
            </summary>
            <param name="vPlusDevice">V+ device, typically "DISK".</param>
            <param name="vPlusDisk">V+ disk, typically "D:".</param>
            <returns>Number of bad sectors found on device and remapped.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.RenameDirectory(System.String,System.String,System.String)">
            <summary>
            Rename a V+ directory.
            </summary>
            <param name="vPlusDir">The V+ parent directory, such as "D:\par_dir".</param>
            <param name="oldName">The old directory name, such as "olddir".</param>
            <param name="newName">The new directory name, such as "newdir".</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.RenameDirectory(System.String,System.String,System.String,System.String)">
            <summary>
            Rename a V+ directory.
            </summary>
            <param name="vPlusDevice">The V+ device, such as "DISK" or "NFS".</param>
            <param name="vPlusDir">The V+ parent directory, such as "D:\par_dir".</param>
            <param name="oldName">The old directory name, such as "olddir".</param>
            <param name="newName">The new directory name, such as "newdir".</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.RenameFile(System.String,System.String,System.String)">
            <summary>
            Rename a V+ file.
            </summary>
            <param name="vPlusDir">The V+ directory, such as "D:\mydir".</param>
            <param name="oldName">The old file name, such as "oldfile.txt".</param>
            <param name="newName">The new file name, such as "newfile.txt".</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.RenameFile(System.String,System.String,System.String,System.String)">
            <summary>
            Rename a V+ file.
            </summary>
            <param name="vPlusDevice">The V+ device, such as "DISK" or "NFS".</param>
            <param name="vPlusDir">The V+ directory, such as "D:\mydir".</param>
            <param name="oldName">The old file name, such as "oldfile.txt".</param>
            <param name="newName">The new file name, such as "newfile.txt".</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.CopyFilesToVPlus(System.String,System.String,System.String,System.String)">
            <summary>
            Copies the files to V+.
            </summary>
            <param name="pcPath">The pc path.</param>
            <param name="searchPattern">The search pattern.</param>
            <param name="vDevice">The v device.</param>
            <param name="vPath">The v path.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.CopyFileToVPlus(System.String,System.String)">
            <summary>
            Copy a file from the PC to V+. Existing files will be overwritten.
            </summary>
            <param name="pcPath">The PC path, such as "C:\my pc file.ext".</param>
            <param name="vPlusPath">The V+ path, such as "D:\myfile.ext".</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.CopyFileToVPlus(System.String,System.String,System.String)">
            <summary>
            Copy a file from the PC to V+. Existing files will be overwritten.
            </summary>
            <param name="pcPath">The PC path, such as "C:\my pc file.ext".</param>
            <param name="vPlusDevice">The V+ device, such as "DISK" or "NFS".</param>
            <param name="vPlusPath">The V+ path, such as "D:\myfile.ext".</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.CopyFileToVPlus(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Copy a file from the PC to V+. Existing files will be overwritten.
            </summary>
            <param name="pcPath">The PC path, such as "C:\my pc file.ext".</param>
            <param name="vPlusDevice">The V+ device, such as "DISK" or "NFS".</param>
            <param name="vPlusPath">The V+ path, such as "D:\myfile.ext".</param>
            <param name="deleteFile">if set to <c>true</c> the file will be deleted after it is transfered.</param>
            <returns>
            The name of the temporary file created in the transfer process, if it was not deletecd.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.CopyFileToPC(System.String,System.String)">
            <summary>
            Copy a file from V+ to the PC.
            </summary>
            <param name="vPlusPath">The V+ path, such as "D:\myfile.ext".</param>
            <param name="pcPath">The PC path, such as "C:\my pc file.ext".</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.CopyFileToPC(System.String,System.String,System.String)">
            <summary>
            Copy a file from V+ to the PC.
            </summary>
            <param name="vPlusDevice">The V+ device, such as "DISK" or "NFS".</param>
            <param name="vPlusPath">The V+ path, such as "D:\myfile.ext".</param>
            <param name="pcPath">The PC path, such as "C:\my pc file.ext".</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.GetRoots">
            <summary>
            Get the file system roots of the V+ file system. For example, on a typical
            SmartController, this is a file containing "D:".
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.ReadDirectory(System.String,System.String)">
            <summary>
            Read a directory in V+.
            </summary>
            <param name="vPlusDirectory">V+ directory (such as "D:\MY_PATH").</param>
            <param name="mask">Search mask (such as "*.v2").</param>
            <returns>
            Array of file objects, or null if directory was not found.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.ReadDirectory(System.String,System.String,System.String)">
            <summary>
            Read a directory in V+.
            </summary>
            <param name="vPlusDevice">V+ device (such as "DISK").</param>
            <param name="vPlusDirectory">V+ directory (such as "D:\MY_PATH").</param>
            <param name="mask">Search mask (such as "*.v2").</param>
            <returns>Array of file objects, or null if directory was not found.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.GetFreeSpace(System.String)">
            <summary>
            Returns available drive space available on the specified disk, in V+ sectors (512 bytes).
            </summary>
            <param name="vPlusDirectory">V+ path (may be to any directory on device) (such as "D:\").</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.GetFreeSpace(System.String,System.String)">
            <summary>
            Returns available drive space available on the specified disk, in V+ sectors (512 bytes).
            </summary>
            <param name="vPlusDevice">V+ device (such as "DISK").</param>
            <param name="vPlusDirectory">V+ path (may be to any directory on device) (such as "D:\").</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.GetTotalSpace(System.String)">
            <summary>
            Returns total drive space used in the specified disk, in V+ sectors (512 bytes).
            </summary>
            <param name="vPlusDirectory">V+ path (may be to any directory on device) (such as "D:\").</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.GetTotalSpace(System.String,System.String)">
            <summary>
            Returns total drive space used in the specified disk, in V+ sectors (512 bytes).
            </summary>
            <param name="vPlusDevice">V+ device (such as "DISK").</param>
            <param name="vPlusDirectory">V+ path (may be to any directory on device) (such as "D:\").</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.DeleteFile(System.String)">
            <summary>
            Deletes the specified file from the controller.
            </summary>
            <param name="vPlusPath">Path of file to delete, such as "D:\mypath\todelete.txt".</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.DeleteFile(System.String,System.String)">
            <summary>
            Deletes the specified file from the controller.
            </summary>
            <param name="vPlusDevice">V+ device (such as "DISK").</param>
            <param name="vPlusPath">Path of file to delete, such as "D:\mypath\todelete.txt".</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.CreateCacheDirectory">
            <summary>
            Creates a cache directory.
            </summary>
            <returns>The cached directory</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.DeleteCacheDirectory(System.String)">
            <summary>
            Deletes the cache directory.
            </summary>
            <param name="dir">The directory to delete.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.CopyFileToCache(System.String,System.String,System.Byte[])">
            <summary>
            Copies a file to a cache directory.
            </summary>
            <param name="dir">The directory path to copy into.</param>
            <param name="fileName">Name of the file.</param>
            <param name="data">The data in the file.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.ReadFileFromCache(System.String,System.String)">
            <summary>
            Reads the file from cache.
            </summary>
            <param name="dir">The directory path to copy into.</param>
            <param name="fileName">Name of the file.</param>
            <returns>The contents of the file</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.GetCachedFiles(System.String)">
            <summary>
            Gets the files located in a cache directory.
            </summary>
            <param name="dir">The director to check.</param>
            <returns>The list of files in the directory</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystemBase.CheckDirectoryExists(System.String,System.String)">
            <summary>
            Check if the specified directory exists in the device
            </summary>
            <param name="vPlusDevice">Device (such as "DISK")</param>
            <param name="vPlusDirectory">Directory (such as "ADEPT\\CUSTOM")</param>
            <returns>True, if the specified directory exists </returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.FreeVPlusProgram">
            <summary>
            Represents a V+ module on the controller
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.FreeVPlusProgram.ObjectLink">
            <summary>
            Gets or sets the calibration used to convert from camera to robot coordinates.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.FreeVPlusProgram.ProgramName">
            <summary>
            Gets the name of the free V+ program
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.FreeVPlusProgram.Program">
            <summary>
            Gets the program being edited.
            </summary>
            <value>The programs.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.FreeVPlusProgram.Owner">
            <summary>
            Gets the V+ module that owns the program.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.FreeVPlusProgram"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.#ctor(Ace.Adept.Server.Desktop.Connection.IVpLinkedObject,Ace.Adept.Server.Controls.VPlusModule,Ace.Adept.Server.Controls.VPlusModuleProgram)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.FreeVPlusProgram"/> class.
            </summary>
            <param name="link">The device owning the program.</param>
            <param name="owner">The module that owns the program.</param>
            <param name="program">The program object being edited.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.Dispose(System.Boolean)">
            <summary>
            Disposes of the object when it is explicitly disposed or garbage-collected.
            This removes the object from its parent directory.
            </summary>
            <param name="isDisposing">True if the object is being explicitly disposed.
            False if it is being garbage-collected.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.GetProgramStatus(System.String)">
            <summary>
            Gets the status for a given program.
            </summary>
            <param name="name">The name of the program.</param>
            <returns>The program status</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.Refresh">
            <summary>
            Refreshes the program from V+.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.objectLink_Disposing(System.Object,System.EventArgs)">
            <summary>
            Handles the Disposing event of the objectLink control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.objectLink_ProgramDeleted(System.Object,Ace.Communication.Link.ProgramEventArgs)">
            <summary>
            Handles the ProgramDeleted event of the objectLink control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.ProgramEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.owner_Disposing(System.Object,System.EventArgs)">
            <summary>
            Handles the Disposing event when the owning module is disposed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.objectLink_ProgramRenamed(System.Object,Ace.Communication.Link.ProgramEventArgs)">
            <summary>
            Handles the ProgramRenamed event of the objectLink control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.ProgramEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.objectLink_ModuleAssigned(System.Object,Ace.Communication.Link.ModuleAssignmentEventArgs)">
            <summary>
            Handles the ModuleAssigned event of the objectLink control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.ModuleAssignmentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.objectLink_Closed(System.Object,System.EventArgs)">
            <summary>
            Handles the Closed event of the objectLink control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.FreeVPlusProgram.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VariableNumericControllerPower">
            <summary>
            A numeric variable source exposing the enable/disable power and calibrate command
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VariableNumericControllerPower.Controller">
            <summary>
            Gets or sets the controller associated with the variable.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VariableNumericControllerPower.CalibrateRobots">
            <summary>
            Gets or sets if robots are to be calibrated when power is enabled.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerPower.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VariableNumericControllerPower"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerPower.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerPower.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerPower.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerPower.GetAssociatedController">
            <summary>
            Gets the name of a controller associated with the variable source.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerPower.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerPower.SetValue(System.Double)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerPower.IsBoolean">
            <summary>
            Determines whether this instance is boolean.
            </summary>
            <returns>
            	<c>true</c> if this instance is boolean; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerPower.GetReferences">
            <summary>
            Gets the references.
            </summary>
            <returns>The references maintained by the object</returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VariableNumericControllerParameter">
            <summary>
            A numeric variable source exposing a parameter on a controller 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VariableNumericControllerParameter.Controller">
            <summary>
            Gets or sets the controller associated with the variable.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VariableNumericControllerParameter.Name">
            <summary>
            Gets or sets the parameter name.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VariableNumericControllerParameter"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerParameter.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerParameter.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerParameter.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerParameter.GetAssociatedController">
            <summary>
            Gets the name of a controller associated with the variable source.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerParameter.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerParameter.SetValue(System.Double)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerParameter.GetReferences">
            <summary>
            Gets the references.
            </summary>
            <returns>The references maintained by the object</returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VariableNumericControllerParameter.ControllerParameterFieldConverter">
            <summary>
            Allows the parameter property to be edited as a combobox filled with linked field names
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerParameter.ControllerParameterFieldConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get if standard values are supported
            </summary>
            <param name="context">Context of the operation</param>
            <returns>Are standard values supported</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerParameter.ControllerParameterFieldConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get if standard values are exclusive
            </summary>
            <param name="context">The context of the operation</param>
            <returns>Are standard values exclusive</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerParameter.ControllerParameterFieldConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Return the values for display
            </summary>
            <param name="context">The context of the operation</param>
            <returns>The values for display/selection</returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VariableNumericControllerSignal">
            <summary>
            A numeric variable source exposing a signal on a controller 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VariableNumericControllerSignal.Controller">
            <summary>
            Gets or sets the controller associated with the variable.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VariableNumericControllerSignal.Robot">
            <summary>
            Gets or sets the robot associated with the variable.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VariableNumericControllerSignal.Signal">
            <summary>
            Gets or sets the signal number.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSignal.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VariableNumericControllerSignal"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSignal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSignal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSignal.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSignal.GetAssociatedController">
            <summary>
            Gets the name of a controller associated with the variable source.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSignal.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSignal.SetValue(System.Double)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSignal.IsBoolean">
            <summary>
            Determines whether this instance is boolean.
            </summary>
            <returns>
            	<c>true</c> if this instance is boolean; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSignal.GetReferences">
            <summary>
            Gets the references.
            </summary>
            <returns>The references maintained by the object</returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VariableNumericControllerSource">
            <summary>
            Represents a numeric variable expression on a controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VariableNumericControllerSource.Controller">
            <summary>
            Gets or sets the controller associated with the variable.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VariableNumericControllerSource.Variable">
            <summary>
            Gets or sets the variable name.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VariableNumericControllerSource"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSource.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSource.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSource.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSource.GetAssociatedController">
            <summary>
            Gets the name of a controller associated with the variable source.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSource.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSource.SetValue(System.Double)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSource.GetReferences">
            <summary>
            Gets the references.
            </summary>
            <returns>The references maintained by the object</returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.RemoteOperationsManager">
            <summary>
            Manager for remote operations associated with a controller
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.#ctor(Ace.Adept.Server.Controls.AdeptController,Ace.Adept.Server.Controls.AdeptControllerImpl)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.RemoteOperationsManager"/> class.
            </summary>
            <param name="adeptController">The adept controller.</param>
            <param name="adeptControllerImpl">The controller implementation associated with the message</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Ace.Adept.Server.Controls.RemoteOperationsManager"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="isDisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.HandleMessage(Ace.Communication.VPlusServer.RemoteOperationEventCode,Ace.Communication.VPlusServer.ITcpConnectionMessage)">
            <summary>
            Handles the message.
            </summary>
            <param name="messageNumber">The message number.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationThread">
            <summary>
            Thread that can execute remote operations
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationThread.IsBusy">
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value><c>true</c> if this instance is busy; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationThread.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationThread"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationThread.Execute(Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperation)">
            <summary>
            Executes the specified new operation.
            </summary>
            <param name="newOperation">The new operation.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationThread.ShutDown">
            <summary>
            Shutdown the remote operation thread.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationThread.Main">
            <summary>
            Main program executing the operations.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperation">
            <summary>
            Represents a remote operation being performed for a V+ program
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperation.aceServer">
            <summary>
            The server associated with the object
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperation.controller">
            <summary>
            The controller associated with the manager
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperation.controllerImpl">
            <summary>
            The controller associated with the manager
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperation.controllerAbstraction">
            <summary>
            The controller abstraction handle
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperation.message">
            <summary>
            The message containing the details of the operation
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperation.#ctor(Ace.Core.Server.IAceServer,Ace.Adept.Server.Controls.AdeptController,Ace.Adept.Server.Controls.AdeptControllerImpl,Ace.Communication.VPlusServer.Abstraction.Controller,Ace.Communication.VPlusServer.ITcpConnectionMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperation" /> class.
            </summary>
            <param name="server">The server associated with the object.</param>
            <param name="controller">The controller.</param>
            <param name="adeptControllerImpl">The controller implementation associated with the message</param>
            <param name="controllerAbstraction">The controller abstraction.</param>
            <param name="message">The adept message.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperation.Parse(Ace.Core.Server.IAceObject,System.String)">
            <summary>
            Parses the specified ace object.
            </summary>
            <param name="aceObject">The ace object.</param>
            <param name="property">The property string.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperation.Execute">
            <summary>
            Perform the remote operation
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperation.CheckLicense">
            <summary>
            Checks to make sure the controller is licensed and can perform the operation
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperation.Finish">
            <summary>
            Finishes this instance.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationExecute">
            <summary>
            Performs the command to execute a method in a PC side object 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationExecute.#ctor(Ace.Core.Server.IAceServer,Ace.Adept.Server.Controls.AdeptController,Ace.Adept.Server.Controls.AdeptControllerImpl,Ace.Communication.VPlusServer.Abstraction.Controller,Ace.Communication.VPlusServer.ITcpConnectionMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationExecute" /> class.
            </summary>
            <param name="server">The server associated with the object.</param>
            <param name="controller">The controller.</param>
            <param name="adeptControllerImpl">The controller implementation associated with the message</param>
            <param name="controllerAbstraction">The controller abstraction.</param>
            <param name="message">The adept message.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationExecute.Execute">
            <summary>
            Perform the remote operation
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationRead">
            <summary>
            Performs the command to read a set of variables from a PC side object 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationRead.#ctor(Ace.Core.Server.IAceServer,Ace.Adept.Server.Controls.AdeptController,Ace.Adept.Server.Controls.AdeptControllerImpl,Ace.Communication.VPlusServer.Abstraction.Controller,Ace.Communication.VPlusServer.ITcpConnectionMessage)">
            <summary>
            Default constructor
            </summary>
            <param name="server">The server associated with the object.</param>
            <param name="controller">The controller.</param>
            <param name="adeptControllerImpl">The controller implementation associated with the message</param>
            <param name="controllerAbstraction">The controller abstraction.</param>
            <param name="message">The message associated with the command</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationRead.Execute">
            <summary>
            Perform the remote operation
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationWrite">
            <summary>
            Performs the command to write a set of variables from a PC side object 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationWrite.#ctor(Ace.Core.Server.IAceServer,Ace.Adept.Server.Controls.AdeptController,Ace.Adept.Server.Controls.AdeptControllerImpl,Ace.Communication.VPlusServer.Abstraction.Controller,Ace.Communication.VPlusServer.ITcpConnectionMessage)">
            <summary>
            Default constructor
            </summary>
            <param name="server">The server associated with the object.</param>
            <param name="controller">The controller.</param>
            <param name="adeptControllerImpl">The controller implementation associated with the message</param>
            <param name="controllerAbstraction">The controller abstraction.</param>
            <param name="message">The message associated with the command</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationWrite.Execute">
            <summary>
            Perform the remote operation
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationDeleteFile">
            <summary>
            Performs the command to delete a file on the PC 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationDeleteFile.#ctor(Ace.Core.Server.IAceServer,Ace.Adept.Server.Controls.AdeptController,Ace.Adept.Server.Controls.AdeptControllerImpl,Ace.Communication.VPlusServer.Abstraction.Controller,Ace.Communication.VPlusServer.ITcpConnectionMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationDeleteFile" /> class.
            </summary>
            <param name="server">The server associated with the object.</param>
            <param name="controller">The controller.</param>
            <param name="adeptControllerImpl">The controller implementation associated with the message</param>
            <param name="controllerAbstraction">The controller abstraction.</param>
            <param name="message">The message associated with the command</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationDeleteFile.Execute">
            <summary>
            Perform the remote operation
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationAppendLinesToFile">
            <summary>
            Performs the command to append lines to a file on the PC 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationAppendLinesToFile.#ctor(Ace.Core.Server.IAceServer,Ace.Adept.Server.Controls.AdeptController,Ace.Adept.Server.Controls.AdeptControllerImpl,Ace.Communication.VPlusServer.Abstraction.Controller,Ace.Communication.VPlusServer.ITcpConnectionMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationAppendLinesToFile" /> class.
            </summary>
            <param name="server">The server associated with the object.</param>
            <param name="controller">The controller.</param>
            <param name="adeptControllerImpl">The controller implementation associated with the message</param>
            <param name="controllerAbstraction">The controller abstraction.</param>
            <param name="message">The message associated with the command</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationAppendLinesToFile.Execute">
            <summary>
            Perform the remote operation
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationCopyFile">
            <summary>
            Performs the command to copy a file from the PC to the controller -or- the controller to the PC
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationCopyFile.DiskPrefix">
            <summary>
            The prefix indicating a file on the Adept Controller
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationCopyFile.CopyType">
            <summary>
            The possible types of copy operations
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationCopyFile.CopyType.Invalid">
            <summary>
            An invalid copy operation
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationCopyFile.CopyType.PcToPc">
            <summary>
            From 1 PC file to another
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationCopyFile.CopyType.PcToController">
            <summary>
            From the PC to the Controller
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationCopyFile.CopyType.ControllerToPc">
            <summary>
            From the controller to the PC
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationCopyFile.#ctor(Ace.Core.Server.IAceServer,Ace.Adept.Server.Controls.AdeptController,Ace.Adept.Server.Controls.AdeptControllerImpl,Ace.Communication.VPlusServer.Abstraction.Controller,Ace.Communication.VPlusServer.ITcpConnectionMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationCopyFile" /> class.
            </summary>
            <param name="server">The server associated with the object.</param>
            <param name="controller">The controller.</param>
            <param name="adeptControllerImpl">The controller implementation associated with the message</param>
            <param name="controllerAbstraction">The controller abstraction.</param>
            <param name="message">The message associated with the command</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationCopyFile.Execute">
            <summary>
            Perform the remote operation
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationFileDirectory">
            <summary>
            Performs the command to perform a directory listing on the PC
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationFileDirectory.#ctor(Ace.Core.Server.IAceServer,Ace.Adept.Server.Controls.AdeptController,Ace.Adept.Server.Controls.AdeptControllerImpl,Ace.Communication.VPlusServer.Abstraction.Controller,Ace.Communication.VPlusServer.ITcpConnectionMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationFileDirectory" /> class.
            </summary>
            <param name="server">The server associated with the object.</param>
            <param name="controller">The controller.</param>
            <param name="adeptControllerImpl">The controller implementation associated with the message</param>
            <param name="controllerAbstraction">The controller abstraction.</param>
            <param name="message">The message associated with the command</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationFileDirectory.Execute">
            <summary>
            Perform the remote operation
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationAceServerLog">
            <summary>
            Performs the command to append text to the AceServer log
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationAceServerLog.#ctor(Ace.Core.Server.IAceServer,Ace.Adept.Server.Controls.AdeptController,Ace.Adept.Server.Controls.AdeptControllerImpl,Ace.Communication.VPlusServer.Abstraction.Controller,Ace.Communication.VPlusServer.ITcpConnectionMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationAceServerLog" /> class.
            </summary>
            <param name="server">The server associated with the object.</param>
            <param name="controller">The controller.</param>
            <param name="adeptControllerImpl">The controller implementation associated with the message</param>
            <param name="controllerAbstraction">The controller abstraction.</param>
            <param name="message">The message associated with the command</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationAceServerLog.Execute">
            <summary>
            Perform the remote operation
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationApplicationEvent">
            <summary>
            Performs the command to generate an application event
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationApplicationEvent.#ctor(Ace.Core.Server.IAceServer,Ace.Adept.Server.Controls.AdeptController,Ace.Adept.Server.Controls.AdeptControllerImpl,Ace.Communication.VPlusServer.Abstraction.Controller,Ace.Communication.VPlusServer.ITcpConnectionMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationApplicationEvent" /> class.
            </summary>
            <param name="server">The server associated with the object.</param>
            <param name="controller">The controller.</param>
            <param name="adeptControllerImpl">The controller implementation associated with the message</param>
            <param name="controllerAbstraction">The controller abstraction.</param>
            <param name="message">The message associated with the command</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationApplicationEvent.Execute">
            <summary>
            Perform the remote operation
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationSaveWorkspace">
            <summary>
            Performs the command to save the workspace
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationSaveWorkspace.#ctor(Ace.Core.Server.IAceServer,Ace.Adept.Server.Controls.AdeptController,Ace.Adept.Server.Controls.AdeptControllerImpl,Ace.Communication.VPlusServer.Abstraction.Controller,Ace.Communication.VPlusServer.ITcpConnectionMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationSaveWorkspace" /> class.
            </summary>
            <param name="server">The server associated with the object.</param>
            <param name="controller">The controller.</param>
            <param name="adeptControllerImpl">The controller implementation associated with the message</param>
            <param name="controllerAbstraction">The controller abstraction.</param>
            <param name="message">The message associated with the command</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.RemoteOperationsManager.RemoteOperationSaveWorkspace.Execute">
            <summary>
            Perform the remote operation
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VariableStringControllerString">
            <summary>
            Represents a string variable expression on a controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VariableStringControllerString.Controller">
            <summary>
            Gets or sets the controller associated with the variable.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VariableStringControllerString.Variable">
            <summary>
            Gets or sets the variable name.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableStringControllerString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VariableStringControllerString"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableStringControllerString.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableStringControllerString.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableStringControllerString.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableStringControllerString.GetAssociatedController">
            <summary>
            Gets the name of a controller associated with the variable source.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableStringControllerString.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableStringControllerString.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableStringControllerString.GetReferences">
            <summary>
            Gets the references.
            </summary>
            <returns>The references maintained by the object</returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VariableNumericControllerSwitch">
            <summary>
            A numeric variable source exposing a switch on a controller 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.Controller">
            <summary>
            Gets or sets the controller associated with the variable.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.Name">
            <summary>
            Gets or sets the switch name.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VariableNumericControllerSwitch"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.GetAssociatedController">
            <summary>
            Gets the name of a controller associated with the variable source.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.SetValue(System.Double)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.IsBoolean">
            <summary>
            Determines whether this instance is boolean.
            </summary>
            <returns>
            	<c>true</c> if this instance is boolean; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.GetReferences">
            <summary>
            Gets the references.
            </summary>
            <returns>The references maintained by the object</returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.ControllerSwitchFieldConverter">
            <summary>
            Allows the switch property to be edited as a combobox filled with linked field names
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.ControllerSwitchFieldConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get if standard values are supported
            </summary>
            <param name="context">Context of the operation</param>
            <returns>Are standard values supported</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.ControllerSwitchFieldConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get if standard values are exclusive
            </summary>
            <param name="context">The context of the operation</param>
            <returns>Are standard values exclusive</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VariableNumericControllerSwitch.ControllerSwitchFieldConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Return the values for display
            </summary>
            <param name="context">The context of the operation</param>
            <returns>The values for display/selection</returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection">
            <summary>
            A container for V+ global variables
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.ObjectLink">
            <summary>
            Gets or sets the controller associated with the V+ variables.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.Variables">
            <summary>
            Gets the variables in the collection
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.VariablesToDisplay">
            <summary>
            Gets the variables in the collection that are displayed in the 3D display.
            </summary>
            <value>
            The variables to display.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.VariableNames">
            <summary>
            Gets the names of all variables in the collection.
            </summary>
            <value>
            The variable names.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.Item(System.Guid)">
            <summary>
            Gets the variable with the specified identifier
            </summary>
            <param name="identifier">The identifier.</param>
            <returns></returns>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.VariableFileName">
            <summary>
            Gets or sets the name of the file on the controller used to save variables.
            </summary>
            <value>
            The name of the variable file.
            </value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.SerializeVariables(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            Serialize all variables owned by the collection
            </summary>
            <param name="info">The information.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.DeserializeVariables(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            Deserializes the variables.
            </summary>
            <param name="info">The information.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that 
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.Dispose(System.Boolean)">
            <summary>
            Disposes of the object when it is explicitly disposed or garbage-collected.
            This removes the object from its parent directory.
            </summary>
            <param name="isDisposing">True if the object is being explicitly disposed.
            False if it is being garbage-collected.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.UpdateVariablesOnController">
            <summary>
            Update the variables on the controller.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.InitializeVariablesFromLoad">
            <summary>
            Initializes the variables on a controller by loading from the PC. 
            For strings, we will load from a variable file to preserve control 
            characters. For others, we will use a V+ program
            that will execute as part of the command server routine.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.InitializeVariablesFromProgram(Ace.Adept.Server.Controls.VPlusGlobalVariable[],System.Int32,System.Int32)">
            <summary>
            Initializes the variables on a controller using a V+ program
            that will execute as part of the command server routine.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.InitializeVariablesByLoading(Ace.Adept.Server.Controls.VPlusGlobalVariable[])">
            <summary>
            Initializes the variables on a controller by loading the variables from
            a file if they are undefined.
            </summary>
            <param name="vars">The variables to initialize</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.WriteVariablesIntoMemory">
            <summary>
            Write the variables individually into V+ memory. 
            This is typically used for MicroV+ only.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.WriteVariablesIntoMemory(Ace.Adept.Server.Controls.VPlusGlobalVariable[])">
            <summary>
            Write the variables individually into V+ memory. 
            This is typically used for MicroV+ only.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.IsVariableDefined(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Determines whether the specified variable is defined or not.
            </summary>
            <param name="variable">The specified variable.</param>
            <returns>
            	<c>true</c> if the variable is defined; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.UpdateVariableOnController(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Updates the variable on controller to the initial value.
            </summary>
            <param name="variable">The variable.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.UpdateVariableOnController(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.String)">
            <summary>
            Updates the variable on controller.
            </summary>
            <param name="variable">The variable.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.UpdateVariableOnController(Ace.Adept.Server.Controls.IVPlusGlobalVariable,Ace.Core.Server.Transform3D)">
            <summary>
            Updates the variable on controller.
            </summary>
            <param name="variable">The variable.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.UpdateVariableOnController(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Double[])">
            <summary>
            Updates the variable on controller.
            </summary>
            <param name="variable">The variable.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.UpdateVariableOnController(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Single)">
            <summary>
            Updates the variable on controller.
            </summary>
            <param name="variable">The variable.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.RemoveVariableOnController(Ace.Adept.Server.Controls.VPlusGlobalVariableType,System.String)">
            <summary>
            Remove the variable on controller.
            </summary>
            <param name="variableType">Type of the variable.</param>
            <param name="variableName">Name of the variable.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.GetVariableByName(System.String)">
            <summary>
            Gets the variable by name.
            </summary>
            <param name="variableName">Name of the variable.</param>
            <returns>The variable or null, if not defined.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.AddVariable(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Adds the variable to the collection.
            </summary>
            <param name="variable">The variable.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.AddVariable(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Boolean)">
            <summary>
            Adds the variable to the collection.
            </summary>
            <param name="variable">The variable.</param>
            <param name="checkController">if set to <c>true</c> the controller is checked to see if the variable exists.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.AddVariableDirect(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Adds the variable to the collection directly without type checking or generating any events.
            </summary>
            <param name="variable">The variable.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.AddVariable(System.String,System.Single)">
            <summary>
            Adds a real variable to the collection.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="initialValue">The initial value.</param>
            <returns>The created variable</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.AddVariable(System.String,System.String)">
            <summary>
            Adds a string variable to the collection.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="initialValue">The initial value.</param>
            <returns>The created variable</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.AddVariable(System.String,Ace.Core.Server.Transform3D)">
            <summary>
            Adds a location variable to the collection.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="initialValue">The initial value.</param>
            <returns>The created variable</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.AddVariable(System.String,System.Double[])">
            <summary>
            Adds a location variable to the collection.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="initialValue">The initial value.</param>
            <returns>The created variable</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.RemoveVariable(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Boolean)">
            <summary>
            Removes the variable from the collection.
            </summary>
            <param name="variable">The variable.</param>
            <param name="removeFromMemory">if set to <c>true</c> the variable will be removed from V+ memory.</param>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.RemoveVariables(Ace.Adept.Server.Controls.IVPlusGlobalVariable[],System.Boolean)">
            <summary>
            Removes the variables from the collection.
            </summary>
            <param name="variables">The variables to remove.</param>
            <param name="removeFromMemory">if set to <c>true</c> the variables will be removed from V+ memory.</param>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.RemoveVariables(Ace.Adept.Server.Controls.IVPlusGlobalVariable[])">
            <summary>
            Removes the variables from the collection.
            </summary>
            <param name="variables">The variables to remove.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.RemoveVariable(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Removes the variable from the collection.
            </summary>
            <param name="variable">The variable.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.RenameVariable(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.String)">
            <summary>
            Renames the variable.
            </summary>
            <param name="variable">The variable.</param>
            <param name="newName">The new name.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.ChangeDescription(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.String)">
            <summary>
            Change the variable description.
            </summary>
            <param name="variable">The variable.</param>
            <param name="newDescription">The new description.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.ChangeInitialValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.String)">
            <summary>
            Change the variable initial value.
            </summary>
            <param name="variable">The variable.</param>
            <param name="newInitialValue">The new initial value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.ChangeInitialValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Double[])">
            <summary>
            Change the variable initial value.
            </summary>
            <param name="variable">The variable.</param>
            <param name="newInitialValue">The new initial value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.ChangeInitialValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable,Ace.Core.Server.Transform3D)">
            <summary>
            Change the variable initial value.
            </summary>
            <param name="variable">The variable.</param>
            <param name="newInitialValue">The new initial value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.ChangeInitialValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Single)">
            <summary>
            Change the variable initial value.
            </summary>
            <param name="variable">The variable.</param>
            <param name="newInitialValue">The new initial value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.UpdateInitialValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Updates the initial value with the value on the controller
            </summary>
            <param name="variable">The variable.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.ChangeRobot(Ace.Adept.Server.Controls.IVPlusGlobalVariable,Ace.Core.Server.Motion.IRobot)">
            <summary>
            Changes the robot value.
            </summary>
            <param name="variable">The variable.</param>
            <param name="robot">The robot.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.ChangeDisplayMode(Ace.Adept.Server.Controls.IVPlusGlobalVariable,Ace.Adept.Server.Controls.VPlusGlobalVariableDisplayMode)">
            <summary>
            Changes the display mode for the variable.
            </summary>
            <param name="variable">The variable.</param>
            <param name="displayMode">The display mode.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.ReadValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.String@)">
            <summary>
            Reads the current value for the variable.
            </summary>
            <param name="variable">The variable.</param>
            <param name="currentValue">The current value of the variable.</param>
            <returns>Were any error messages encountered. Null if no errors.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.ReadValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Single@)">
            <summary>
            Reads the current value for the variable.
            </summary>
            <param name="variable">The variable.</param>
            <param name="currentValue">The current value of the variable.</param>
            <returns>Were any error messages encountered. Null if no errors.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.ReadValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable,System.Double[]@)">
            <summary>
            Reads the current value for the variable.
            </summary>
            <param name="variable">The variable.</param>
            <param name="currentValue">The current value of the variable.</param>
            <returns>Were any error messages encountered. Null if no errors.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.ReadValue(Ace.Adept.Server.Controls.IVPlusGlobalVariable,Ace.Core.Server.Transform3D@)">
            <summary>
            Reads the current value for the variable.
            </summary>
            <param name="variable">The variable.</param>
            <param name="currentValue">The current value of the variable.</param>
            <returns>Were any error messages encountered. Null if no errors.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.GetVariables(Ace.Adept.Server.Controls.VPlusGlobalVariableType)">
            <summary>
            Gets the variables of the specified type.
            </summary>
            <param name="variableType">Type of the variable.</param>
            <returns>The variables matching the specified type.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.GetFileContents(Ace.Adept.Server.Controls.VPlusGlobalVariableType[])">
            <summary>
            Gets the file contents for the specified variables.
            </summary>
            <param name="variableTypes">The variable types.</param>
            <returns>String containing the contents of all variables</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.GetFileContents(Ace.Adept.Server.Controls.IVPlusGlobalVariable[])">
            <summary>
            Gets the file contents for the specified variables.
            </summary>
            <param name="variables">The variables.</param>
            <returns>
            String containing the contents of all variables
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.RemoveArray(System.String)">
            <summary>
            Remove the array variable
            </summary>
            <param name="arrayName">Name of the array.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.GetCategories">
            <summary>
            Gets the categories defined in the collection
            </summary>
            <returns>The categories</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.GetCategoryVariables(System.String)">
            <summary>
            Gets the variables associated with a specific category
            </summary>
            <param name="name">The name of the category.</param>
            <returns>The variables in the category</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.GetCategoriesForVariable(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Gets the categories associated with a variable.
            </summary>
            <param name="variable">The variable.</param>
            <returns>Array of categories the variable is associated with</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.SetCategoryVariables(System.String,Ace.Adept.Server.Controls.IVPlusGlobalVariable[])">
            <summary>
            Sets the variables associated with a specific category
            </summary>
            <param name="name">The name of the category.</param>
            <param name="variables">The variables in the category.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.RemoveCategory(System.String)">
            <summary>
            Remove the specified category
            </summary>
            <param name="name">The name of the category</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.GetCategorySaveFile(System.String)">
            <summary>
            Gets the file used to save category variables.
            </summary>
            <param name="categoryName">The name of the category.</param>
            <returns>The location for saving the category or null if no save location is defined</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.SetCategroySaveFile(System.String,System.String)">
            <summary>
            Sets the file location for category variables
            </summary>
            <param name="categoryName">The name of the category.</param>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.FindSimilarName(System.String)">
            <summary>
            Finds the potential name of a variable similar to the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The suggested new name</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.CheckVariableName(System.String)">
            <summary>
            Checks the name of the variable to see if it is valid
            </summary>
            <param name="name">The name to check.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariableCollection.CheckIsVariableNameValid(System.String)">
            <summary>
            Checks the name of the variable to see if it is valid
            </summary>
            <param name="name">The name to check.</param>
            <returns>True if the name is value</returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VPlusModule">
            <summary>
            Represents a V+ module on the controller
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModule.ObjectLink">
            <summary>
            Gets or sets the calibration used to convert from camera to robot coordinates.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModule.ModuleName">
            <summary>
            Gets or sets the name of the module.
            </summary>
            <value>The name of the module.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModule.Programs">
            <summary>
            Gets the programs in the file.
            </summary>
            <value>The programs.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModule.CustomSaveLocation">
            <summary>
            Gets or sets the custom save location for the module.
            </summary>
            <value>
            The custom save location.
            </value>
            <remarks>
            When a workspace is saved to the controller, this will overwrite the default file name for the module.
            </remarks>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModule.FileContents">
            <summary>
            Gets the contents of the V+ file.
            </summary>
            <value>The V+ file contents.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.#ctor(Ace.Adept.Server.Desktop.Connection.IVpLinkedObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusModule"/> class.
            </summary>
            <param name="linkedObject">The linked Object to which the module is assigned.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.programs_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the programs control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.Dispose(System.Boolean)">
            <summary>
            Disposes of the object when it is explicitly disposed or garbage-collected.
            This removes the object from its parent directory.
            </summary>
            <param name="isDisposing">True if the object is being explicitly disposed.
            False if it is being garbage-collected.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.ValidateObject">
            <summary>
            Validate references from this object to other objects in the system.
            This method uses the collection returned by AddReferences.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.CheckForDownload">
            <summary>
            Checks for download.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that 
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.IsGuidUnique(System.Guid)">
            <summary>
            Determines whether the identifier is unique.
            </summary>
            <param name="guid">The GUID.</param>
            <returns>
            	<c>true</c> if [is GUID unique] [the specified GUID]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.GetProgramStatus(System.String)">
            <summary>
            Gets the status for a given program.
            </summary>
            <param name="name">The name of the program.</param>
            <returns>The program status</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.DownloadProgramToController(Ace.Adept.Server.Controls.IVPlusModuleProgram)">
            <summary>
            Downloads the program to controller.
            </summary>
            <param name="vPlusProgram">The v plus program to download.</param>
            <exception cref="T:Ace.Core.Server.AceException"></exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.BuildProgramFile(Ace.Adept.Server.Controls.IVPlusModuleProgram)">
            <summary>
            Builds a file containing the program. This is used to download to V+.
            </summary>
            <param name="vPlusProgram">The v plus program.</param>
            <returns>The name of the file containing the program</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.RenameProgram(Ace.Adept.Server.Controls.IVPlusModuleProgram,System.String)">
            <summary>
            Renames the program.
            </summary>
            <param name="program">The program.</param>
            <param name="newName">The new program name.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.DoesProgramExist(System.String)">
            <summary>
            Does the program exist anywhere internal or external to the module. 
            </summary>
            <param name="newName">The new name.</param>
            <returns>Does the program exist within Ace</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.DeleteProgram(Ace.Adept.Server.Controls.IVPlusModuleProgram)">
            <summary>
            Deletes the program.
            </summary>
            <param name="program">The program.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.DeleteProgram(System.String)">
            <summary>
            Deletes the program.
            </summary>
            <param name="programName">Name of the program.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.DeletePrograms(System.String[])">
            <summary>
            Deletes the collection of programs from the module.
            </summary>
            <param name="programNames">The program names.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.RemoveProgramDirect(Ace.Adept.Server.Controls.IVPlusModuleProgram)">
            <summary>
            Remove a program from a module without deleting it from the controller
            </summary>
            <param name="program">The program.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.RemoveProgram(System.String)">
            <summary>
            Remove a program from the module, leaving the program in memory
            </summary>
            <param name="programName">Name of the program.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.DeleteModule">
            <summary>
            Deletes all programs in the module.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.GetSimilarProgramName(System.String)">
            <summary>
            Gets a name of a program that is unique, valid, and based on the specified name.
            </summary>
            <param name="programName">Name specified program name.</param>
            <returns>The similar program name</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.AddProgramDirect(Ace.Adept.Server.Controls.IVPlusModuleProgram)">
            <summary>
            Add a program to the module without downloading to the controller
            </summary>
            <param name="program">The program.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.AddProgram(Ace.Adept.Server.Controls.IVPlusModuleProgram)">
            <summary>
            Adds the program.
            </summary>
            <param name="program">The program.</param>
            <exception cref="T:System.ArgumentException">Program name is not valid;program</exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.Refresh">
            <summary>
            Refreshes the module from V+.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.AssignModule">
            <summary>
            Assigns the module.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModule.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VPlusModuleProgram">
            <summary>
            Represents a V+ Program
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Controls.VPlusModuleProgram.PropertyModified">
            <summary>
            An event raised when a property is modified. Note that not all properties will throw this event.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModuleProgram.ProgramName">
            <summary>
            Gets the name of the program
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModuleProgram.ProgramSignature">
            <summary>
            Gets the program signature
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModuleProgram.Description">
            <summary>
            Gets the description for the program
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModuleProgram.Parameters">
            <summary>
            Gets the parameters associated with the program
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModuleProgram.Bookmarks">
            <summary>
            Gets or sets the bookmarks associated with the program
            </summary>
            <value>
            The bookmarks.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModuleProgram.IsProtected">
            <summary>
            Gets or sets a value indicating whether this instance is protected.
            </summary>
            <value>
            <c>true</c> if this instance is protected; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.InvalidOperationException">The program is protected</exception>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModuleProgram.Lines">
            <summary>
            The V+ program lines 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModuleProgram.ProgramContents">
            <summary>
            Gets the contents of the V+ program as a string.
            </summary>
            <value>The V+ program contents.</value>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusModuleProgram"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusModuleProgram"/> class.
            </summary>
            <param name="name">The name of the program.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusModuleProgram" /> class.
            </summary>
            <param name="name">The name of the program.</param>
            <param name="isProtected">if set to <c>true</c> the program is considered protected.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusModuleProgram"/> class.
            </summary>
            <param name="newLines">The lines of the program.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.ChangeName(System.String)">
            <summary>
            Changes the internal representation of the program name.
            </summary>
            <param name="newName">The new name.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.OnPropertyModified(System.String)">
            <summary>
            Called when a property is modified.
            </summary>
            <param name="propertyName">Name of the modified property.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.UpdateLines(System.String[])">
            <summary>
            Updates the lines.
            </summary>
            <param name="newLines">The new lines.</param>
            <returns>Have the program lines changed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.ConvertTabsToSpaces(System.String)">
            <summary>
            Converts the tabs in a line to spaces.
            </summary>
            <param name="line">The line.</param>
            <returns>The converted line</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.FindDescriptionFor(System.String[])">
            <summary>
            Finds the description for the specifed item in the program header
            </summary>
            <param name="names">The names of the items to search for.</param>
            <returns>The description of the first item matched or null if none is found</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.op_Equality(Ace.Adept.Server.Controls.VPlusModuleProgram,Ace.Adept.Server.Controls.VPlusModuleProgram)">
            <summary>
            Returns true the components of two programs are identical.
            </summary>
            <param name="a">the first program.</param>
            <param name="b">The second program.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.op_Inequality(Ace.Adept.Server.Controls.VPlusModuleProgram,Ace.Adept.Server.Controls.VPlusModuleProgram)">
            <summary>
            Returns true the components of two transforms are NOT identical.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.Equals(System.Object)">
            <summary>
            Return true if the other object is the same as this object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.GetHashCode">
            <summary>
            Return a hash code for this transform.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgram.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VPlusGlobalVariable">
            <summary>
            Represents a V+ variable
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariable.Identifier">
            <summary>
            Gets the unique identifier associated with the variable
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariable.Name">
            <summary>
            Gets the name of the variable
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariable.IsArray">
            <summary>
            Gets a value indicating if the variable represents an array.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariable.ArrayBaseName">
            <summary>
            Gets the name of the array the variable belongs to.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariable.VariableType">
            <summary>
            Gets the type of V+ variable
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariable.Description">
            <summary>
            Gets or sets the description of the variable
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariable.InitialStringValue">
            <summary>
            Gets the initial value for the variable if it is a string type
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariable.InitialRealValue">
            <summary>
            Gets the initial value for the variable if it is a real type
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariable.InitialTransformValue">
            <summary>
            Gets the initial value for the variable if it is a transform type
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariable.InitialPrecisionPointValue">
            <summary>
            Gets the initial value for the variable if it is a precision point type
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariable.InitialValueString">
            <summary>
            Gets the initial value for display purposes.
            </summary>
            <value>The initial display string.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariable.Robot">
            <summary>
            Gets the robot to which the variable is relative to. Used only for a location variable.
            </summary>
            <value>The robot.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusGlobalVariable.DisplayMode">
            <summary>
            Gets the display mode for locations/precision points
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusGlobalVariable"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.#ctor(System.String,Ace.Adept.Server.Controls.VPlusGlobalVariableType)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusGlobalVariable"/> class.
            </summary>
            <param name="variableName">The name of the variable.</param>
            <param name="vplusVariableType">Type of the vplus variable.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.SetInitialValue">
            <summary>
            Sets the initial value for the variable.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.ValidateValue(Ace.Adept.Server.Controls.VPlusGlobalVariableType,System.String)">
            <summary>
            Validates the value given the type.
            </summary>
            <param name="vplusVariableType">Type of the vplus variable.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.ChangeName(System.String)">
            <summary>
            Changes the name of the variable.
            </summary>
            <param name="newName">The new name.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.ChangeIdentifier(System.Guid)">
            <summary>
            Changes the identifier of the variable.
            </summary>
            <param name="newIdentifier">The new identifier.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.ChangeDescription(System.String)">
            <summary>
            Changes the description of the variable.
            </summary>
            <param name="newDescription">The new description.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.ChangeInitialValue(System.String)">
            <summary>
            Updates the initial string value.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.ChangeInitialValue(System.Single)">
            <summary>
            Updates the initial real value.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.ChangeInitialValue(Ace.Core.Server.Transform3D)">
            <summary>
            Updates the initial transform value.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.ChangeInitialValue(System.Double[])">
            <summary>
            Updates the initial precision point value.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.ChangeRobot(Ace.Core.Server.Motion.IRobot)">
            <summary>
            Updates the robot value.
            </summary>
            <param name="newRobot">The new value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.ChangeRobot(System.String)">
            <summary>
            Updates the robot value.
            </summary>
            <param name="robotName">Name of the robot.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.ChangeDisplayMode(Ace.Adept.Server.Controls.VPlusGlobalVariableDisplayMode)">
            <summary>
            Updates the display mode.
            </summary>
            <param name="mode">The display mode.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that 
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusGlobalVariable.CompareTo(Ace.Adept.Server.Controls.IVPlusGlobalVariable)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the other parameter.Zero This object is equal to other. Greater than zero This object is greater than other.
            </returns>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VPlusModuleProgramCollection">
            <summary>
            A collection of V+ program objects
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.propertyModified">
            <summary>
            Event indicating a property has been modified
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.PropertyModified">
            <summary>
            An event raised when a property is modified. Note that not all properties will throw this event.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.list">
            <summary>
            The list of part processes associated with the collection
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Ace.Adept.Server.Controls.VPlusModuleProgram"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Ace.Adept.Server.Controls.VPlusModuleProgram"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.ProgramNames">
            <summary>
            Returns a list of all program names.
            </summary>
            <returns>The list of program names</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusModuleProgramCollection"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.OnPropertyModified(System.String)">
            <summary>
            Throw the collection modified event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.item_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the item control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.Add(Ace.Adept.Server.Controls.IVPlusModuleProgram)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.Remove(Ace.Adept.Server.Controls.IVPlusModuleProgram)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false. This method also returns false if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.Remove(Ace.Adept.Server.Controls.IVPlusModuleProgram,System.Boolean)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <param name="throwEvent">if set to <c>true</c> an event is thrown when the item is removed.</param>
            <returns>
            true if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false. This method also returns false if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.Contains(Ace.Adept.Server.Controls.IVPlusModuleProgram)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.CopyTo(Ace.Adept.Server.Controls.IVPlusModuleProgram[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or-arrayIndex is equal to or greater than the length of array.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"></see> is greater than the available space from arrayIndex to the end of the destination array.-or-Type T cannot be cast automatically to the type of the destination array.</exception>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.ToArray">
            <summary>
            Returns the list of items in array format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusModuleProgramCollection.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.DefaultAdeptControllerImpl.GetControllerEncodersNums">
            <summary>
            Gets the index of the encoders hosted by the controller (the others are hosted on other devices like smi6)
            </summary>
            <returns>list containing the controller hosted encoder numbers</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.DefaultAdeptControllerImpl.GetProgramInformation(System.String,System.Int32)">
            <summary>
            Gets the information about a specific program or variable.
            </summary>
            <param name="name">The name of the program or variable.</param>
            <param name="mode">The mode of operation from 0-9.</param>
            <returns>The details of the program</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.DefaultAdeptControllerImpl.UpdateFlash(System.String,System.String)">
            <summary>
            Updates the FPGA flash
            </summary>
            <param name="device">The device.</param>
            <param name="path">The file path.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.NativeMethods.GetLastError">
            <summary>
            This seems to work better than Marshal.GetLastWin32Error(), by giving a better code. Please verify
            that GetLastWin32Error() works well if you intend to use it instead.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.NvramData">
            <summary>
            A class representing the contents of the controller NVRAM.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.NvramData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.NvramData"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.NvramData.#ctor(Ace.Adept.Server.Controls.IAdeptController)">
            <summary>
            Creates NVRAM data structure for a CX controller.
            </summary>
            <param name="controller"></param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.NvramData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.NvramData.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.NvramData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.NvramData.Save">
            <summary>
            Saves NVRAM data structure to the CX controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.NvramData.Address">
            <summary>
            Gets or sets the IP address of the controller after the next system boot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.NvramData.SubnetMask">
            <summary>
            Gets or sets the subnet mask of the controller after the next system boot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.NvramData.AutoStart">
            <summary>
            Gets or sets a flag indicating whether to run AUTO.V2 after boot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.NvramData.UserInterface">
            <summary>
            Gets or sets the user interface selection.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VPlusBoot">
            <summary>
            V+ boot file description
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusBoot.Encode(System.IO.TextWriter)">
            <summary>
            Writes out the boot file (ADEPTSYS.ADM). 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusBoot.DeviceModuleFileCount">
            <summary>
            Gets the number of valid device module files (excluding the EOM file).
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusBoot.VPlusBootModule.#ctor(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Creates a new device module.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VPlusConfig">
            <summary>
            V+ system configuration file.
            </summary>
            <remarks>
            See the document entitled "Instructions for Adept Utility Programs" for details on these items. As a short summary:
            <list type="bullet">
                <item><c>HEADER</c>: File header. Do not edit statements in this section.</item>
                <item><c>VPLUS</c>: Processor descriptions. Do not edit statements in this section.</item>
                <item><c>DIGITAL_INPUT</c>: Digital input definitions.
                    <list type="bullet">
                        <item><c>SIGNAL 1033 = "/INPUT_BLOCK 16 /INPUT_BYTE 1 /IO_OPTIONAL YES"</c>. Defines first input signal (1001-1505) in a block of signals.
                            <list type="bullet">
                                <item>INPUT_BLOCK: Input block number, from 0 to 31. Must match FireWire configuration.</item>
                                <item>INPUT_BYTE: Byte offset within the input block, from 1 to 4. Must match FireWire configuration.</item>
                                <item>IO_OPTIONAL: Flag indicating whether to allow power to enable if I/O hardware not found on network.</item>
                            </list>
                        </item>
                        <item><c>VIS_TRIGGER 1 = "/SIGNAL NONE"</c>. Defines a trigger (1 or 2) used to initiate a vision image capture.
                            <list type="bullet">
                                <item>SIGNAL: Input signal to latch. One of: NONE, 1001, 1002, 1003, 1004.</item>
                            </list>
                        </item>
                    </list>
                </item>
                <item><c>DIGITAL_OUTPUT</c>: Digital output definitions.
                    <list type="bullet">
                        <item><c>SIGNAL 33 = "/OUTPUT_BLOCK 16 /OUTPUT_BYTE 1 /IO_OPTIONAL YES"</c>. Defines the first signal (1-505) in a block of outputs.
                            <list type="bullet">
                                <item>OUTPUT_BLOCK: Output block number, from 0 to 31. Must match FireWire configuration.</item>
                                <item>OUTPUT_BYTE: Byte offset within the output block, from 1 to 4. Must match FireWire configuration.</item>
                                <item>IO_OPTIONAL: Flag indicating whether to allow power to enable if I/O hardware not found on network.</item>
                            </list>
                        </item>
                    </list>
                </item>
                <item><c>DEVICENET</c>: DeviceNet configuration. See Adept DeviceNet documentation for details.
                    <list type="bullet">
                        <item><c>LOCAL = "/MACID n /BAUD n"</c>.</item>
                        <item><c>MACID n = "/INPUT n /OUTPUT n /VENDOR_ID n /DEVICE_TYPE n /PRODUCT_CODE n /DISABLE_POWER NO|YES"</c>.</item>
                        <item><c>MAPPING n = "/MACID n /BYTE n /BIT n /BIT_LENGTH n /SIGNAL n"</c>.</item>
                    </list>
                </item>
                <item><c>NETWORK</c>: Network configuration.
                    <list type="bullet">
                        <item><c>MOUNT 1 = "/MOUNT 'XC' /NODE 'ASERVER' /PATH 'C:/ADEPT/DISKS/DISK_C'"</c>. Defines a NFS mount.
                            <list type="bullet">
                                <item>MOUNT: Name by which the NFS server will be accessed from V+.</item>
                                <item>NODE: Server address, either a host name from a NODE statement or a dot-separated IP address (e.g., '192.168.1.101').</item>
                                <item>PATH: Path on the NFS server of the mount's root directory.</item>
                            </list>
                        </item>
                        <item><c>NODE 1 = "/NODE 'ASERVER' /ADDRESS 0 0 0 0"</c>. Defines an association between host name and IP address.
                            <list type="bullet">
                                <item>NODE: Host name, as specified in the NODE clause of a MOUNT statement.</item>
                                <item>ADDRESS: Space-separated host IP address (e.g., '192 168 1 101').</item>
                            </list>
                        </item>
                        <item><c>LOCAL_ID = "/MACHINE 'CELL1' /UID 200 /GID 200"</c>. Used for NFS servers that require authentication. If this statement is omitted,
                            null authentication is used.
                            <list type="bullet">
                                <item>MACHINE: Machine identification for Unix-style authentication.</item>
                                <item>UID: User ID for NFS server.</item>
                                <item>GID: Group ID for NFS server.</item>
                            </list>
                        </item>
                        <item><c>ROUTE_DEFAULT = "/ADDRESS 192 9 200 101"</c>. Specifies default address for any packet with an unknown destination. If all remote networks
                            are accessible through a single gateway, this statement is preferred; otherwise, use ROUTE_GATEWAY.</item>
                        <item><c>ROUTE_GATEWAY 1 = "/ADDRESS 192 9 199 0 /SUBNET 255 255 255 0 /GATEWAY 192 9 200 100"</c>. Routes messages to "ADDRESS" through the "GATEWAY" router.
                            <list type="bullet">
                                <item>ADDRESS: Address of messages to route through the gateway (192.9.199.xxx in this example).</item>
                                <item>SUBNET: Subnet mask specifying which bits of ADDRESS must be matched to be routed (the high 3 bytes in this example).</item>
                                <item>GATEWAY: Address of router to which the messages should be sent for routing to the desired address.</item>
                            </list>
                        </item>
                    </list>
                </item>
                <item><c>ROBOT</c>: Robot and belt configuration.
                    <list type="bullet">
                        <item><c>BELT 1 = "/POS_LATCH 1002 N1002 /LATCH_BUFFER 1"</c>.
                            <list type="bullet">
                                <item>POS_LATCH: Space-separated list of inputs used to latch robot position (NONE, 1, 2, 1001, 1002, 1003, 1004, N1001, N1002, N1003, or N1004).</item>
                                <item>LATCH_BUFFER: Latch-buffer depth, allowing faster triggering.</item>
                            </list>
                        </item>
                        <item><c>ROBOT 1 = "/MODULE -1 /OUTPUT_BLOCK 1 /OUTPUT_BYTE 2 /IO_OPTIONAL YES /POS_LATCH 1001 /LATCH_BUFFER 1"</c>.
                            <list type="bullet">
                                <item>MODULE: Kinematic module ID number, or -1 for any Adept robot.</item>
                                <item>OUTPUT_BLOCK: Output block ID to be used for the 3001 - 3008 output signals for this robot, from 0 to 31.</item>
                                <item>OUTPUT_BYTE: Byte offset within the output block, from 1 to 4.</item>
                                <item>IO_OPTIONAL: Flag indicating whether to allow power to enable if I/O hardware not found on network.</item>
                                <item>POS_LATCH: Space-separated list of inputs used to latch robot position (NONE, 1, 2, 1001, 1002, 1003, 1004, N1001, N1002, N1003, or N1004).</item>
                                <item>LATCH_BUFFER: Latch-buffer depth, allowing faster triggering.</item>
                            </list>
                        </item>
                    </list>
                </item>
                <item><c>SERIAL</c>: Serial port configuration.
                    <list type="bullet">
                        <item><c>GLOBAL_PORT 1 = "/DRIVER SERIAL /SPEED 9600 /BYTE_LENGTH 8 /PARITY NONE /STOP_BITS 1 /FLOW NONE /FLUSH OFF /DTR ON /MULTIDROP OFF /BUFFER_SIZE 200"</c>
                            "Global" serial port configuration (Top two ports on a CX controller, and the only ports on a CS controller).
                            <list type="bullet">
                                <item>DRIVER: One of SERIAL, KERMIT, or DDCMP.</item>
                                <item>SPEED: One of 110, 300, 600, 1200, 2400, 4800, 7200, 9600, 19200, or 38400.</item>
                                <item>BYTE_LNEGTH: Either 7 or 8.</item>
                                <item>PARITY: One of NONE, EVEN, or ODD.</item>
                                <item>STOP_BITS: Either 1 or 2.</item>
                                <item>FLOW: One of NONE, XON_XOFF, or MODEM.</item>
                                <item>FLUSH: Either OFF or ON.</item>
                                <item>DTR: Either OFF or ON.</item>
                                <item>MULTIDROP: Either OFF or ON.</item>
                                <item>BUFFER_SIZE: Serial buffer size in bytes, from 100 to 25500.</item>
                            </list>
                        </item>
                        <item><c>LOCAL_PORT 1 PROCESSOR 1 = "/DRIVER SERIAL /SPEED 9600 /BYTE_LENGTH 8 /PARITY NONE /STOP_BITS 1 /FLOW NONE /FLUSH OFF /DTR ON /MULTIDROP OFF /BUFFER_SIZE 200"</c>
                            "Local" serial port configuration (Bottom two ports on a CX controller; not present on a CS controller). Configuration is the same as GLOBAL_PORT.
                        </item>
                    </list>
                </item>
                <item><c>SYSTEM</c>: System configuration.
                    <list type="bullet">
                        <item><c>DEFAULT_DISK = "D:"</c>: Default disk to use at system startup.</item>
                        <item><c>DEFAULT_SPEED = "50"</c>: Default monitor speed at system startup.</item>
                        <item><c>GRAPHICS = "/MAX_WINDOWS 80"</c>: Maximum number of windows posted to AdeptWindows.</item>
                        <item><c>POWER_TIMEOUT = "10"</c>: How long V+ waits (sec), when enabling robot power, for you to press the Robot Power button.
            				Starting in V+ 16.3, a value of 0 disables waiting for the power button.</item>
                        <item><c>STARTUP_MESSAGE = "any text"</c>: Message displayed at system startup and by ID command.</item>
                        <item><c>TRAJ_RATE = "62.5HZ"</c>: Trajectory rate. One of "62.5HZ", "125HZ", "250HZ".</item>
                        <item><c>POWERON_SPECIAL = "OFF"</c>: Optional special power-on handling. One of "ON", "OFF". V+ 16.3 and above only.</item>
                        <item><c>FIRMWARE_OPTION = "0"</c>: Optional special firmware configuration. Between 0 and 255. V+ 16.3 and above only.</item>
                    </list>
                </item>
                <item><c>VISION</c>: Vision configuration.
                    <list type="bullet">
                        <item><c>PROCESSOR 1 = "/ID 1 /FRAME_SIZE 640X480 /TOTAL_KB 4096 /AOI_KB 6 /BLOB_KB 28 /BOUND_KB 4 /LUT_KB 1 /OBJECT_KB 77 /RUN_LENGTH_KB 125 /UNMATCHED_KB 30 /VTRANS_KB 1 /NUM_FRAMES 2"</c>
                            <list type="bullet">
                                <item>ID: Vision system ID (should be 1).</item>
                                <item>FRAME_SIZE: Size of the virtual frame buffers into which the physical frame store is divided.</item>
                                <item>TOTAL_KB: System memory that should be reserved for vision processes.</item>
                                <item>AOI_KB: Memory allocation for area-of-interest definitions.</item>
                                <item>BLOB_KB: Memory allocation for blobs (bounded regions).</item>
                                <item>BOUND_KB: Memory allocation for performing boundary analysis.</item>
                                <item>LUT_KB: Memory allocation for vision lookup tables.</item>
                                <item>OBJECT_KB: Memory allocation for object data structures.</item>
                                <item>RUN_LENGTH_KB: Memory allocation for run-length encoding.</item>
                                <item>UNMATCHED_KB: Memory allocation for unmatched objects.</item>
                                <item>VTRANS_KB: Memory allocation for vision transforms.</item>
                                <item>NUM_FRAMES: Number of frame stores reserved in memory.</item>
                            </list>
                        </item>
                    </list>
                </item>item>
                <item><c>TASKS</c>: Task configuration.
                    <list type="bullet">
                        <item><c>USER 0 PROCESSOR 1 = "/PRIORITY 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"</c>: Task prioritization.
                            <list type="bullet">
                                <item>PRIORITY: Task priority for each millisecond time slice in the 16-millisecond V+ cycle, from -1 to 64. -1 means "don't run in this slice". 64 means "run at all costs".</item>
                            </list>
                        </item>
                    </list>
                </item>
            </list>
            </remarks>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusConfig.#ctor(System.String)">
            <summary>
            Loads V+ configuration from the specified PC file path.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusConfig.#ctor(Ace.Adept.Server.Controls.IAdeptController)">
            <summary>
            Loads V+ configuration from the given controller.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusConfig.SaveToController(Ace.Adept.Server.Controls.IAdeptController)">
            <summary>
            Saves the current configuration to the specified controller.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusConfig.ToString">
            <summary>
            Returns a string version of the XML data.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.VPlusConfig.originalFileText">
            <summary>
            Original configuration file text without any changes
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusConfig.OriginalFileText">
            <summary>
            Original configuration file text without any changes
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.VPlusConfig.vPlusControllerText">
            <summary>
            VPlus Controller text to be retrieved and to be saved
            It is used by the new Controller Configuration
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusConfig.VPlusControllerText">
            <summary>
            VPlus Controller text to be retrieved and to be saved
            It is used by the new Controller Configuration
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.VPlusConfig.configFormatText">
            <summary>
            The configuration format file
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusConfig.ConfigFormatText">
            <summary>
            The configuration format file
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.VPlusConfig.dataFormatText">
            <summary>
            The data format file
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusConfig.DataFormatText">
            <summary>
            The data format file
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusConfig.Version">
            <summary>
            Gets the V+ version number as a float.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VPlusFileSystem">
            <summary>
            V+ file system functions.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusFileSystem.ConfigFile">
            <summary>
            The configuration file for the file system
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusFileSystem.SystemDir">
            <summary>
            Gets the V+ system directory.
            </summary>
            <value>The system directory.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusFileSystem.SpecDir">
            <summary>
            Gets the V+ spec directory.
            </summary>
            <value>The spec directory.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusFileSystem.SystemFile">
            <summary>
            Gets the V+ system file.
            </summary>
            <value>The system file.</value>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusFileSystem.ControllerConfigurationFilePath">
            <summary>
            Configuration file path at the controller
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusFileSystem.DskFile">
            <summary>
            Gets the DSK file.
            </summary>
            <value>The DSK file.</value>
        </member>
        <member name="F:Ace.Adept.Server.Controls.VPlusFileSystem.SystemDirs">
            <summary>
            The Adept controller system directories
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Controls.VPlusFileSystem.BootFiles">
            <summary>
            The files used for booting V+
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystem.#ctor(Ace.Adept.Server.Controls.AdeptController)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Controls.VPlusFileSystem"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystem.InitializeFileCache">
            <summary>
            Initializes the file cache associated with the controller
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystem.BackupVPlus(System.String,System.String,System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Backs up V+ to the specified directory on the PC. Returns an array of spec files that were saved.
            </summary>
            <param name="vPlusDevice">V+ device (such as "DISK").</param>
            <param name="vPlusDisk">V+ disk (such as "D:).</param>
            <param name="pcDirPath">The PC backup directory for the old version of V+.</param>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystem.RestoreVPlus(System.String,System.String,System.String,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Restores V+ from the specified directory.
            </summary>
            <param name="distributionPath">Directory in which the V+ distribution is found.</param>
            <param name="vPlusDevice">Device, such as "DISK"</param>
            <param name="vPlusDisk">Disk target, such as "D:".</param>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystem.VerifyVersionUpgrade(System.String,System.String@,System.String@)">
            <summary>
            Check to see if the V+ version being installed from a specified directory
            represents a version upgrade. Returns true if it is OK to upgrade (the version number
            is either the same as the current version). If a false is returned, the user should be
            asked if it is ok to upgrade
            </summary>
            <param name="distributionDirectory">The distribution directory.</param>
            <param name="oldVersion">The old V+ version detected.</param>
            <param name="newVersion">The new V+ version detected.</param>
            <returns>Is the upgrade allowed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystem.UpgradeVPlus(System.String,System.String,System.String,System.Boolean,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Upgrades V+ from a PC directory.
            </summary>
            <param name="vPlusDevice">V+ device (such as "DISK").</param>
            <param name="vPlusDisk">V+ disk (such as "D:).</param>
            <param name="pcVPlusDirectory">The PC directory containing the new version of V+.</param>
            <param name="upgradeFirmware">true to upgrade system FPGA's and servo code; false to upgrade V+ only.</param>
            <param name="progressHandler">An optional event handler that will receive progress events. If null, no event-reporting is performed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusFileSystem.CheckDriveSpace(System.String,System.String,System.String)">
            <summary>
            Checks the device for sufficient space to install V+.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Controls.VPlusSystem">
            <summary>
            A representation of a V+ system, typically used for upgrading or modifying configuration.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Controls.VPlusSystem.FindDeviceModulesInFile(System.String,System.Int32,System.Collections.Generic.ICollection{Ace.Adept.Server.Controls.IVPlusSystemDeviceModule})">
            <summary>
            Scans for device modules in the specified file, starting at the specified file offset.
            This works both for system disks and device module files. The EOM device module file
            returns an array of 0 length. Adds the modules to the input collection.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Controls.VPlusSystem.VPlusSystemDeviceModule.IsEncoder">
            <summary>
            Encoder modules are treated specially. For example, they shouldn't be selectable as a robot.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration">
            <summary>
            Represents a configuration of items included in a recipe.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration.SourceIODrivenEndEffector">
            <summary>
            Gets the process manager associated with the configuration
            </summary>
            <value>
            The process manager .
            </value>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration.#ctor(Ace.Adept.Server.Device.IIODrivenEndEffector)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration" /> class.
            </summary>
            <param name="ioDrivenEndEffector">The process manager.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration.CreateRecipeComponent">
            <summary>
            Creates a new recipe component based on the current configuration
            </summary>
            <returns>The recipe component</returns>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration.ConvertRecipeComponent(System.Boolean,Ace.Core.Server.Recipes.RecipeComponentBase)">
            <summary>
            Converts the recipe component based on the current recipe configuration settings.
            </summary>
            <param name="isActive">if set to <c>true</c> this component is from the active recipe.</param>
            <param name="recipeComponent">The recipe component to convert.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration.Apply(Ace.Core.Server.Recipes.RecipeComponentBase)">
            <summary>
            Applies the specified recipe component to the source.
            </summary>
            <param name="recipeComponent">The recipe component.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration.OnBeforeRecipeChanged(Ace.Core.Server.Recipes.IRecipe)">
            <summary>
            Called immediately before a recipe change will occur.
            </summary>
            <param name="recipe">The recipe.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration.OnAfterRecipeChanged(Ace.Core.Server.Recipes.IRecipe)">
            <summary>
            Called immediately after a recipe change has occured.
            </summary>
            <param name="recipe">The recipe.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeConfiguration.SourceIODrivenEndEffector_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the ProcessManager control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent">
            <summary>
            Represents an instance of data associated with a recipe / recipe component.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent.IODrivenEndEffect">
            <summary>
            Gets the IODrivenEndEffector
            </summary>
            <value>
            The IODrivenEndEffector.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent.ApplyOrder">
            <summary>
            The order when the recipe apply the component
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent.#ctor(Ace.Adept.Server.Device.IIODrivenEndEffector)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent" /> class.
            </summary>
            <param name="ioDrivenEndEffector">The ioDrivenEndEffector.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent.Initialize">
            <summary>
            This method should be called after the workspace is fully loaded and ready to operate.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent.Apply">
            <summary>
            Applies the recipe information to the source
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent.CreateEditCopy">
            <summary>
            Creates a copy of the component for editing.
            </summary>
            <returns>A copy of the current object used only for editing</returns>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent.ApplyEditCopy(Ace.Core.Server.Recipes.RecipeComponentBase,System.Boolean)">
            <summary>
            Applies the edit copy to the component.
            </summary>
            <param name="component">The component.</param>
            <param name="isSelected">if set to <c>true</c> the recipe associated with the component is the active/selected recipe.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorRecipeComponent.IODrivenEndEffector_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the ioDrivenEndEffector control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Adept.Server.Device.IODrivenEndEffector">
            <summary>
            A simple end-effector using default Adept robot signals.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.Robot">
            <summary>
            Gets the robot to which this end-effector is attached, or null if not attached to a robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.Parent">
            <summary>
            Ensures that the tool offset is set on the robot when this
            tool is mounted to a robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.TipSelectionProgram">
            <summary>
            Gets or sets the name of a program to call when a tip is selected
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.TipSelectionTask">
            <summary>
            Gets or sets the default V+ task used for selecting the gripper tip
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.UseTipSelection">
            <summary>
            Gets or sets if the tip selection program used
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.State">
            <summary>
            Grip or release an object using the selected tip. The value is true when the end-effector
            is gripping an object.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.MaxGripTime">
            <summary>
            Gets or sets the maximum time allowed for the grip to be verified, in seconds.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.ToolOffset">
            <summary>
            Gets or sets the tool offset of the selected tip, by appending the difference between
            the current tool offset and the desired one to the tip offset.
            </summary>
            <summary>
            Gets or sets the tool offset of this end-effector. By default, set does nothing.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.TipCenterline">
            <summary>
            The centerline of the end-effector tips
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.ExposableItems">
            <summary>
            Get the exposable data items
            </summary>
            <value></value>
            <returns>The list of exposable items</returns>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.TipRadius">
            <summary>
            Gets or sets the tip radius used to draw the tip in the virtual display.
            </summary>
            <value>
            The tip radius.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.Payload">
            <summary>
            Gets or sets the payload of the gripper
            </summary>
            <value>
            The payload.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.OffsetFromParent">
            <summary>
            Set the offset of the end-effector from its parent (typically a EndEffector holder,
            robot, or another end-effector. If held by a robot, informs the robot of the
            EndEffector offset change.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.SelectedIndex">
            <summary>
            Get or set the current index into the array of parts.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.Count">
            <summary>
            Gets or sets the total number of parts that this end-effector can hold.
            Setting this value will clear any existing tip information.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.Part">
            <summary>
            Gets or sets the part held by this device. If the device holds multiple
            parts, this returns the selected part. It does NOT remove the part from
            this device.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.OffsetToTip">
            <summary>
            Gets or sets the offset from the mounting point of the end-effector to its tip.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.EndEffectorTips">
            <summary>
            Gets a collection of end-effector tips used to hold parts.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffector.CollisionProgram">
            <summary>
            Gets or sets the program that is called when a collision is detected
            </summary>
            <value>
            The collision program.
            </value>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.ExecuteTipSelectionProgram(System.Int32)">
            <summary>
            Executes the tip selection program.
            </summary>
            <param name="selectedIndex">The index to select.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.CreateEndEffector">
            <summary>
            Creates an I/O-driven end-effector tip.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.ExtendTip(System.Int32)">
            <summary>
            Extends the specified tip.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.RetractTip(System.Int32)">
            <summary>
            Retract the specified tip
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.SelectCenterLine">
            <summary>
            Selects the center line of the gripper.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.Clear">
            <summary>
            Clear the end-effector of parts.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.UpdateToolOffset">
            <summary>
            Updates the tool offset.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.UpdateRobotTransform">
            <summary>
            Updates the robot transform.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.WaitGrip(System.Boolean)">
            <summary>
            Indicates whether the gripper state is verified to be set properly, as
            indicated by whether IsPartPresent returns the desired state within
            the max grip time.
            </summary>
            <param name="desiredState">Desired part-present state, true if part should be present.</param>
            <returns>true if the actual part-present state matches the desired one.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.TransferStateChange(System.Boolean,Ace.Core.Server.Motion.TransferState)">
            <summary>
            Called by the pick-place strategy to indicate a change change during
            pick-place operations. By default, sets the grip state to be "true"
            at completion of a pick move, and "false" at the completion of a place
            move. Override this method to change the logic.
            </summary>
            <param name="pick">True during pick.</param>
            <param name="state">Transfer state</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that 
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.Initialize">
            <summary>
            Initializes the grip state to true if a part is held; false otherwise.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.AbstractEndEffector_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the AbstractEndEffector control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.dataItems_ExposableItemChanged(System.Object,Ace.Core.Server.DataItems.ExposableDataItemChangedEventArgs)">
            <summary>
            Handles the ExposableItemChanged event of the dataItems control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.DataItems.ExposableDataItemChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.Dispose(System.Boolean)">
            <summary>
            Disposes of this object. Ensures that each end-effector tip is disposed.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.DisposePart(System.Int32)">
            <summary>
            Dispose of the current part in the end-effector.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.AddEndEffectorTip(Ace.Core.Server.Device.IEndEffectorTip)">
            <summary>
            Adds the end-effector tip.
            </summary>
            <param name="tip">The tip to add.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.AddEndEffectorTip(Ace.Core.Server.Device.IEndEffectorTip,System.Boolean)">
            <summary>
            Adds the end-effector tip.
            </summary>
            <param name="tip">The tip to add.</param>
            <param name="isRecipe">Is the tip being created as part of a recipe.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.CreateTipName(System.Boolean)">
            <summary>
            Create Tip Name.
            </summary>				
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.DeleteEndEffectorTip(Ace.Core.Server.Device.IEndEffectorTip)">
            <summary>
            Deletes the end-effector tip.
            </summary>
            <param name="tip">The tip to remove.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.DeleteEndEffectorTip(Ace.Core.Server.Device.IEndEffectorTip,System.Boolean,System.Boolean)">
            <summary>
            Deletes the end-effector tip.
            </summary>
            <param name="tip">The tip to remove.</param>
            <param name="allowDeleteLastTip">allow deleting last tip or not.</param>
            <param name="raiseTipCountEvent">raise tip count event.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.CreateRecipeConfiguration">
            <summary>
            Creates and returns a new recipe configuration.
            </summary>
            <value>
            The recipe configuration.
            </value>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.Apply(Ace.Adept.Server.Device.IIODrivenEndEffector)">
            <summary>
            Applies the parameters to the current io driven end effector
            </summary>
            <param name="iioDrivenEndEffector">The io driven end effector.</param>		
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffector.NotifyCollision">
            <summary>
            Called to notify that a collision has occured
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Device.IODrivenEndEffectorTip">
            <summary>
            An end-effector tip driven by arbitrary digital signals.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Device.IODrivenEndEffectorTip.GripCommandState">
            <summary>
            The current gripper commanded state
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Device.IODrivenEndEffectorTip.GripCommandState.Unknown">
            <summary>
            The gripper has not been commanded to an On/off state, so we do not know if it is On/Off
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Device.IODrivenEndEffectorTip.GripCommandState.On">
            <summary>
            The gripper has been commanded on
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Device.IODrivenEndEffectorTip.GripCommandState.Off">
            <summary>
            The gripper has been commanded off
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Device.IODrivenEndEffectorTip.MaximumNumberOfIOPoints">
            <summary>
            The maximum number of IO points
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorTip.GetMaximumNumberOfIOPoints">
            <summary>
            The maximum number of IO points
            It has been added to support the interface because
            a constant value can not be added to an interface
            </summary>
            <returns>The maximum number of IO points</returns>
        </member>
        <member name="F:Ace.Adept.Server.Device.IODrivenEndEffectorTip.CurrentVersion">
            <summary>
            The current version of the object
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Device.IODrivenEndEffectorTip.tipName">
            <summary>
            The tip name to display on UI
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Device.IODrivenEndEffectorTip.propertyModified">
            <summary>
            An event raised when the object is modified.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Device.IODrivenEndEffectorTip.PropertyModified">
            <summary>
            An event raised when the object is modified.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.RobotNumber">
            <summary>
            Gets the robot number associated with the selected robot. If this is an iCobra, 1 will be returned
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.ObjectLink">
            <summary>
            Gets the controller associated with the gripper tip.
            </summary>
            <value>The controller.</value>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorTip.#ctor">
            <summary>
            Default constructor. Creates a tip with no associated digital signals.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorTip.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorTip.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.IsPartPresent">
            <summary>
            Gets a flag indicating whether a part is present on the end-effector. If a grip input
            sensor is specified, returns the sensor's value; otherwise returns the commanded grip state.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.GripState">
            <summary>
            Gets or sets the grip state of this end-effector tip.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.TipOffset">
            <summary>
            Gets or sets the tip offset from the end-effector base to this end-effector tip.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.Parent">
            <summary>
            Gets the end-effector associated with this tip.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.HeldObject">
            <summary>
            Gets or sets the object held by this end-effector tip.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.OpenOutputSignals">
            <summary>
            Output signal turned on to open the gripper
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.OpenOutputStatus">
            <summary>
            Gets or sets a value indicating whether the open output signals are on or off.
            </summary>
            <value><c>true</c> if all the output signals are on; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.CloseOutputSignals">
            <summary>
            Output signal turned on to close the gripper
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.ClosedOutputStatus">
            <summary>
            Gets or sets a value indicating whether the closed output signals are on or off.
            </summary>
            <value><c>true</c> if all the output signals are on; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.ReleaseOutputSignals">
            <summary>
            Output signal turned on to release the contents of the gripper
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.ReleaseOutputStatus">
            <summary>
            Gets or sets a value indicating whether the release output signals are on or off.
            </summary>
            <value><c>true</c> if all the output signals are on; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.OpenedInputSignals">
            <summary>
            Input signal used to indicate the gripper is open
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.OpenInputStatus">
            <summary>
            Gets a value indicating whether the open input signals are on or off.
            </summary>
            <value><c>true</c> if all the input signals are on; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.ClosedInputSignals">
            <summary>
            Input signal used to indicate the gripper is closed
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.ClosedInputStatus">
            <summary>
            Gets a value indicating whether the closed input signals are on or off.
            </summary>
            <value><c>true</c> if all the input signals are on; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.GripDwellTime">
            <summary>
            Gets or sets the minimum time to wait to grip the part, in seconds. Typically
            used to allow time for the gripper to open or close.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.ReleaseDwellTime">
            <summary>
            Gets or sets the minimum time to wait to release the part, in seconds. Typically
            used to allow time for the gripper to open or close.
            </summary>		
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.ExtendRetractDwellTime">
            <summary>
            Gets or sets the minimum time to wait to extend or retract the gripper, in seconds. 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.ExtendOutputSignals">
            <summary>
            Output signal to extend the gripper tip
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.ExtendOutputStatus">
            <summary>
            Gets or sets a value indicating whether the extend output signals are on or off.
            </summary>
            <value><c>true</c> if all the output signals are on; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.RetractOutputSignals">
            <summary>
            Output signal to extend the gripper tip
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.RetractOutputStatus">
            <summary>
            Gets or sets a value indicating whether the retract output signals are on or off.
            </summary>
            <value><c>true</c> if all the output signals are on; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.ExtendInputSignals">
            <summary>
            Input signal indicating the gripper tip is extended
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.ExtendInputStatus">
            <summary>
            Gets a value indicating whether the extend input signals are on or off.
            </summary>
            <value><c>true</c> if all the input signals are on; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.RetractInputSignals">
            <summary>
            Input signal indicating the gripper tip is retracted
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.RetractInputStatus">
            <summary>
            Gets a value indicating whether the retract input signals are on or off.
            </summary>
            <value><c>true</c> if all the input signals are on; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.PartPresentInputSignals">
            <summary>
            Input signals indicating a part is present on the gripper
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.PartPresentInputStatus">
            <summary>
            Gets a value indicating whether the part present input signals are on or off.
            </summary>
            <value><c>true</c> if all the input signals are on; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorTip.AreSame(System.Collections.Generic.List{System.Int32},System.Int32[])">
            <summary>
            Checks to see if the lists contain the same information.
            </summary>
            <param name="list">The existing list.</param>
            <param name="newValues">The new values to check against.</param>
            <returns>Do the lists contain the same information</returns>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorTip.CheckIOSignals(System.Int32[])">
            <summary>
            Checks the status of the IO signals.
            </summary>
            <param name="ioList">The io list.</param>
            <returns>If all are on, then the result it true</returns>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorTip.SetIOSignals(System.Boolean,System.Int32[])">
            <summary>
            Sets the status of the IO signals.
            </summary>
            <param name="state">if set to <c>true</c> the IO are turned on.</param>
            <param name="ioList">The io list.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorTip.CheckCommandedGripState">
            <summary>
            Checks the current state of the gripper command flag.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorTip.OnPropertyModified(System.String)">
            <summary>
            Trigger the modified event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorTip.AddReferences(Ace.Core.Server.ReferenceCollection)">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that 
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorTip.Initialize(Ace.Core.Server.Device.IAbstractEndEffector,System.Int32)">
            <summary>
            Initializes this end-effector tip.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorTip.DisposePart">
            <summary>
            Dispose of the current part in the end-effector.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Device.IODrivenEndEffectorTip.TipName">
            <summary>
            Tip name to display on UI
            </summary>		
        </member>
        <member name="T:Ace.Adept.Server.Device.IODrivenEndEffectorVPPropertyMapper">
            <summary>
            A property mapper for the IO driven end-effector.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorVPPropertyMapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Device.IODrivenEndEffectorVPPropertyMapper"/> class.
            </summary>
            <param name="obj">The object being mapped.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorVPPropertyMapper.Serialize(System.String,Ace.Communication.VPlusServer.ITcpConnectionMessageSupport)">
            <summary>
            Serializes the object to the specified controller.
            </summary>
            <param name="key">The key under which the data is written.</param>
            <param name="connection">The controller.</param>
        </member>
        <member name="M:Ace.Adept.Server.Device.IODrivenEndEffectorVPPropertyMapper.WriteArray(Ace.Adept.Server.Controls.AdeptMessage,System.Int32,System.Int32[])">
            <summary>
            Writes the array of data to the message
            </summary>
            <param name="msg">The message to write into.</param>
            <param name="count">The number of items to write.</param>
            <param name="items">The array of items to write.</param>
            <remarks>
            The V+ code assumes the arrays are of fixed size. So, pad 0 at the end
            if any array items are not defined.
            </remarks>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.AdeptControllerStringDataItem">
            <summary>
            Base class for all string DataItems exposed by an AdeptController. 
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.AdeptControllerStringDataItem.controller">
            <summary>
            Handle to the owner of the data item
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerStringDataItem.Controller">
            <summary>
            Gets or sets the handle to the owner of the data item
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerStringDataItem.TagPath">
            <summary>
            Gets the full path, including the tag name, used to identify the data item.
            This must be unique for each item in the whole workspace.
            </summary>
            <value>The tag path.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerStringDataItem.AssociatedController">
            <summary>
            Gets the name of a controller associated with the data item.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerStringDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.AdeptControllerStringDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerStringDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerStringDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerStringDataItem.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerStringDataItem.controller_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the controller control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.AdeptControllerHostAddressDataItem">
            <summary>
            Represents an AdeptController exposing the host address as a data item. 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerHostAddressDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerHostAddressDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerHostAddressDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.AdeptControllerHostAddressDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerHostAddressDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerHostAddressDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerHostAddressDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerHostAddressDataItem.SetValue(System.String)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.AdeptControllerAddressDataItem">
            <summary>
            Represents an AdeptController exposing the TCP/IP address as a data item. 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerAddressDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerAddressDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerAddressDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.AdeptControllerAddressDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerAddressDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerAddressDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerAddressDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerAddressDataItem.SetValue(System.String)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.AdeptControllerVPlusVersionDataItem">
            <summary>
            Represents an AdeptController exposing the V+ version number. 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerVPlusVersionDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerVPlusVersionDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerVPlusVersionDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.AdeptControllerVPlusVersionDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerVPlusVersionDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerVPlusVersionDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerVPlusVersionDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerVPlusVersionDataItem.SetValue(System.String)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.AdeptControllerProgramTaskDataItem">
            <summary>
            Represents an AdeptController exposing the programs running on a specific V+ task
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerProgramTaskDataItem.TaskNumber">
            <summary>
            Gets or sets the task number to manage
            </summary>
            <value>
            The task number.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerProgramTaskDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerProgramTaskDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerProgramTaskDataItem.Category">
            <summary>
            Gets the category to which the data item belongs.
            </summary>
            <value>The category.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerProgramTaskDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.AdeptControllerProgramTaskDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerProgramTaskDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerProgramTaskDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerProgramTaskDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerProgramTaskDataItem.SetValue(System.String)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem">
            <summary>
            Represents the gripper time data data item. 
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.TimeCategory">
            <summary>
            The categories of timers being managed by the class
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.InitializeDataItems(Ace.Adept.Server.Device.IODrivenEndEffector)">
            <summary>
            Initializes the data items.
            </summary>
            <param name="endEffector">The end effector.</param>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.EndEffector">
            <summary>
            Gets or sets the end effector.
            </summary>
            <value>The end effector.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.TimeType">
            <summary>
            Gets or sets the tip state for the data item
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.TipIndex">
            <summary>
            Gets or sets the action the DataItem is associated with
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.TagPath">
            <summary>
            Gets the full path, including the tag name, used to identify the data item.
            This must be unique for each item in the whole workspace.
            </summary>
            <value>The tag path.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.AssociatedController">
            <summary>
            Gets the name of a controller associated with the data item.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.Category">
            <summary>
            Gets the category to which the data item belongs.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorTimeDataItem.SetValue(System.Double)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.VPlusGlobalLocationVariableDataItem">
            <summary>
            Represents a V+ location variable exposed as a DataItem 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalLocationVariableDataItem.Identifier">
            <summary>
            Gets or sets the identifier for the variable being exposed
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalLocationVariableDataItem.LinkedObject">
            <summary>
            Gets or sets the linked object associated/owning the variable
            </summary>
            <value>
            The linked object.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalLocationVariableDataItem.Category">
            <summary>
            Gets the category to which the data item belongs.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalLocationVariableDataItem.TagPath">
            <summary>
            Gets the full path, including the tag name, used to identify the data item.
            This must be unique for each item in the whole workspace.
            </summary>
            <value>The tag path.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalLocationVariableDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalLocationVariableDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>		
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalLocationVariableDataItem.AssociatedController">
            <summary>
            Gets the name of a controller associated with the data item.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalLocationVariableDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.VPlusGlobalLocationVariableDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalLocationVariableDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalLocationVariableDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalLocationVariableDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalLocationVariableDataItem.SetValue(System.String)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem">
            <summary>
            Represents an IO Gripper data item. 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.InitializeDataItems(Ace.Adept.Server.Device.IODrivenEndEffector)">
            <summary>
            Initializes the data items.
            </summary>
            <param name="endEffector">The end effector.</param>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.endEffector">
            <summary>
            The end effector associated with the data item
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.EndEffector">
            <summary>
            Gets or sets the end effector.
            </summary>
            <value>The end effector.</value>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.tipIndex">
            <summary>
            The index of the tip to operate with
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.TipIndex">
            <summary>
            Gets or sets the action the DataItem is associated with
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.TagPath">
            <summary>
            Gets the full path, including the tag name, used to identify the data item.
            This must be unique for each item in the whole workspace.
            </summary>
            <value>The tag path.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.AssociatedController">
            <summary>
            Gets the name of a controller associated with the data item.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.Category">
            <summary>
            Gets the category to which the data item belongs.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorOffsetDataItem.SetValue(System.String)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.AdeptControllerSignalBlockDataItem">
            <summary>
            Represents an AdeptController data item exposing a signal block. 
            </summary>
            <remarks>This class is no longer used. It should be removed at some point. It exists so
            that serialization will not fail for workspaces that were created when this was used.</remarks>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerSignalBlockDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerSignalBlockDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.AdeptControllerSignalBlockDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerSignalBlockDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerSignalBlockDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerSignalBlockDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerSignalBlockDataItem.SetValue(System.Double)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.AdeptControllerConnectionStatusDataItem">
            <summary>
            Represents an AdeptController exposing the connection status information as a data item. 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerConnectionStatusDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerConnectionStatusDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerConnectionStatusDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.AdeptControllerConnectionStatusDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerConnectionStatusDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerConnectionStatusDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerConnectionStatusDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerConnectionStatusDataItem.SetValue(System.Double)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.AdeptControllerPowerAndCalibrationDataItem">
            <summary>
            Represents an AdeptController power and calibration status data item. 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerPowerAndCalibrationDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerPowerAndCalibrationDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerPowerAndCalibrationDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.AdeptControllerPowerAndCalibrationDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerPowerAndCalibrationDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerPowerAndCalibrationDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerPowerAndCalibrationDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerPowerAndCalibrationDataItem.SetValue(System.Double)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.AdeptControllerNumericDataItem">
            <summary>
            Base class for all numeric DataItems exposed by an AdeptController. 
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.AdeptControllerNumericDataItem.controller">
            <summary>
            Handle to the owner of the data item
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerNumericDataItem.Controller">
            <summary>
            Gets or sets the handle to the owner of the data item
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerNumericDataItem.TagPath">
            <summary>
            Gets the full path, including the tag name, used to identify the data item.
            This must be unique for each item in the whole workspace.
            </summary>
            <value>The tag path.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerNumericDataItem.AssociatedController">
            <summary>
            Gets the name of a controller associated with the data item.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerNumericDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.AdeptControllerNumericDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerNumericDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerNumericDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerNumericDataItem.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerNumericDataItem.controller_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the controller control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.AdeptControllerMonitorSpeedDataItem">
            <summary>
            Represents an AdeptController exposing the monitor speed as a data item. 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerMonitorSpeedDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerMonitorSpeedDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerMonitorSpeedDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.AdeptControllerMonitorSpeedDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerMonitorSpeedDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerMonitorSpeedDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerMonitorSpeedDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerMonitorSpeedDataItem.SetValue(System.Double)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.AdeptControllerDataItemHelper">
            <summary>
            Helper class for all DataItems exposed by an AdeptController. 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerDataItemHelper.InitializeDataItems(Ace.Adept.Server.Controls.AdeptController)">
            <summary>
            Initializes the data items.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerDataItemHelper.UpdateVariableDataItems(Ace.Adept.Server.Desktop.Connection.IVpLinkedObject,Ace.Core.Server.DataItems.ExposableDataItemCollection)">
            <summary>
            Updates the V+ global variable data items.
            </summary>
            <param name="linkedObject">The linked object.</param>
            <param name="dataItems">The data items associated with the linked object.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerDataItemHelper.InitializeSignalDataItems(Ace.Adept.Server.Controls.AdeptController,System.Collections.Generic.List{Ace.Core.Server.DataItems.ExposableDataItem},System.Int32,System.Int32)">
            <summary>
            Initializes the signal data items.
            </summary>
            <param name="controller">The controller.</param>
            <param name="itemsToCheck">The items to check.</param>
            <param name="startSignal">The start signal.</param>
            <param name="endSignal">The end signal.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerDataItemHelper.InitializeVariableDataItems(Ace.Adept.Server.Desktop.Connection.IVpLinkedObject,Ace.Core.Server.DataItems.ExposableDataItemCollection,System.Collections.Generic.Dictionary{System.Guid,Ace.Core.Server.DataItems.ExposableDataItem})">
            <summary>
            Initializes the global variable data items.
            </summary>
            <param name="linkedObject">The linked object.</param>
            <param name="dataItems">The data items.</param>
            <param name="itemsToCheck">The items to check.</param>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.AdeptControllerSignalDataItem">
            <summary>
            Represents an AdeptController data item exposing a single signal. 
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.AdeptControllerSignalDataItem.signal">
            <summary>
            The signal number
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerSignalDataItem.Signal">
            <summary>
            Gets or sets the signal number
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerSignalDataItem.Category">
            <summary>
            Gets the category to which the data item belongs.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerSignalDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.AdeptControllerSignalDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerSignalDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.AdeptControllerSignalDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerSignalDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerSignalDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerSignalDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.AdeptControllerSignalDataItem.SetValue(System.Double)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.VPlusGlobalStringVariableDataItem">
            <summary>
            Represents a V+ string variable exposed as a DataItem 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalStringVariableDataItem.Identifier">
            <summary>
            Gets or sets the identifier for the variable being exposed
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalStringVariableDataItem.LinkedObject">
            <summary>
            Gets or sets the linked object associated/owning the variable
            </summary>
            <value>
            The linked object.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalStringVariableDataItem.Category">
            <summary>
            Gets the category to which the data item belongs.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalStringVariableDataItem.TagPath">
            <summary>
            Gets the full path, including the tag name, used to identify the data item.
            This must be unique for each item in the whole workspace.
            </summary>
            <value>The tag path.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalStringVariableDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalStringVariableDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>		
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalStringVariableDataItem.AssociatedController">
            <summary>
            Gets the name of a controller associated with the data item.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalStringVariableDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.VPlusGlobalStringVariableDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalStringVariableDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalStringVariableDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalStringVariableDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalStringVariableDataItem.SetValue(System.String)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.VPlusGlobalNumericVariableDataItem">
            <summary>
            Represents a V+ numeric variable exposed as a DataItem 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalNumericVariableDataItem.Identifier">
            <summary>
            Gets or sets the identifier for the variable being exposed
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalNumericVariableDataItem.LinkedObject">
            <summary>
            Gets or sets the linked object associated/owning the variable
            </summary>
            <value>
            The linked object.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalNumericVariableDataItem.Category">
            <summary>
            Gets the category to which the data item belongs.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalNumericVariableDataItem.TagPath">
            <summary>
            Gets the full path, including the tag name, used to identify the data item.
            This must be unique for each item in the whole workspace.
            </summary>
            <value>The tag path.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalNumericVariableDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalNumericVariableDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>		
        </member>
        <member name="P:Ace.Adept.Server.DataItems.VPlusGlobalNumericVariableDataItem.AssociatedController">
            <summary>
            Gets the name of a controller associated with the data item.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalNumericVariableDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.VPlusGlobalNumericVariableDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalNumericVariableDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalNumericVariableDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalNumericVariableDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.VPlusGlobalNumericVariableDataItem.SetValue(System.Double)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem">
            <summary>
            Represents an IO Gripper data item. 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.InitializeDataItems(Ace.Adept.Server.Device.IODrivenEndEffector)">
            <summary>
            Initializes the data items.
            </summary>
            <param name="endEffector">The end effector.</param>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.TipStates">
            <summary>
            The possible states to monitor for a given tip
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.TipStates.ExtendOutput">
            <summary>
            The status of the extend output signals
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.TipStates.ExtendInput">
            <summary>
            The status of the extend input signals
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.TipStates.CloseOutput">
            <summary>
            The status of the closed outputs
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.TipStates.CloseInputs">
            <summary>
            The status of the closed inputs
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.TipStates.ReleaseOutputs">
            <summary>
            The status of the release outputs
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.TipStates.OpenOutput">
            <summary>
            This enumeration value is no longer used. It is kept for compatibility.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.TipStates.OpenInputs">
            <summary>
            This enumeration value is no longer used. It is kept for compatibility.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.endEffector">
            <summary>
            The end effector associated with the data item
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.EndEffector">
            <summary>
            Gets or sets the end effector.
            </summary>
            <value>The end effector.</value>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.tipState">
            <summary>
            The action the DataItem is associated with
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.TipState">
            <summary>
            Gets or sets the tip state for the data item
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.tipIndex">
            <summary>
            The index of the tip to operate with
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.TipIndex">
            <summary>
            Gets or sets the action the DataItem is associated with
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.TagPath">
            <summary>
            Gets the full path, including the tag name, used to identify the data item.
            This must be unique for each item in the whole workspace.
            </summary>
            <value>The tag path.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.AssociatedController">
            <summary>
            Gets the name of a controller associated with the data item.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.Category">
            <summary>
            Gets the category to which the data item belongs.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.IODrivenEndEffectorSignalDataItem.SetValue(System.Double)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.DataItems.RobotLocationDataItem">
            <summary>
            Represents a V+ string variable exposed as a DataItem 
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.DataItems.RobotLocationDataItem.robot">
            <summary>
            Gets the robot.
            </summary>
            <value>The variable.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.RobotLocationDataItem.Robot">
            <summary>
            Gets or sets the handle to the owner of the data item
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.RobotLocationDataItem.Category">
            <summary>
            Gets the category to which the data item belongs.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.RobotLocationDataItem.TagPath">
            <summary>
            Gets the full path, including the tag name, used to identify the data item.
            This must be unique for each item in the whole workspace.
            </summary>
            <value>The tag path.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.RobotLocationDataItem.DisplayName">
            <summary>
            Gets or sets the name used for display purposes
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.RobotLocationDataItem.DisplayDescription">
            <summary>
            Gets the description used in the display.
            </summary>
            <value>The display description.</value>
        </member>
        <member name="P:Ace.Adept.Server.DataItems.RobotLocationDataItem.AssociatedController">
            <summary>
            Gets the name of a controller associated with the data item.
            </summary>
            <value>The associated controller.</value>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.RobotLocationDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.DataItems.RobotLocationDataItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.RobotLocationDataItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.RobotLocationDataItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.RobotLocationDataItem.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.RobotLocationDataItem.robot_PropertyModified(System.Object,Ace.Core.Server.Event.PropertyModifiedEventArgs)">
            <summary>
            Handles the PropertyModified event of the robot control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.PropertyModifiedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.RobotLocationDataItem.GetValue">
            <summary>
            Gets the current value of the data item.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:Ace.Adept.Server.DataItems.RobotLocationDataItem.SetValue(System.String)">
            <summary>
            Sets the value of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Was the value changed</returns>
        </member>
        <member name="T:Ace.Adept.Server.Desktop.Connection.JogManager">
            <summary>
            Utility class that manages the operations in jog mode
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.JogManager.ErrorDisplayHandler">
            <summary>
            Method used to display error information generated by the jog manager when jogging
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.JogManager.JogModeUpdated">
            <summary>
            Event thrown when the jogger had updated the jog status in jog mode.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.Mode">
            <summary>
            Gets or sets if the jogger is in incremental or continuous mode.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.Speed">
            <summary>
            Gets or sets the speed of the jog command
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.OldStyleJog">
            <summary>
            Gets or sets if old style of jogging is being used
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.NoJogSupport">
            <summary>
            Gets or sets if jogging supported
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.SelectedRobot">
            <summary>
            Gets or sets the selected robot 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.JogAxis">
            <summary>
            Gets or sets the axis being jogged
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.JogMode">
            <summary>
            Gets or sets the current jog mode
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.StartingLocation">
            <summary>
            Gets or sets the starting location  of the robot
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.DestinationLocation">
            <summary>
            Gets or sets the destination of the robot as a transformation.
            This is used when in incremental mode or jog to a variable location mode.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.DestinationPrecisionPoint">
            <summary>
            Gets or sets the destination of the robot in precision point coordinates.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.Joints">
            <summary>
            Gets or sets the current joint location
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.World">
            <summary>
            Gets or sets the world location of the robot
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.Jogging">
            <summary>
            Gets or sets if the robot is jogging
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.Variable">
            <summary>
            Gets or sets the variable associated with the move
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.IsPrecisionPointVariable">
            <summary>
            Gets if the destination variable is a precision point
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.JogManager.Tag">
            <summary>
            Gets or sets the object associated with the manager.
            </summary>
            <value>
            The tag.
            </value>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.JogManager.#ctor(Ace.Adept.Server.Desktop.Connection.VpLink)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Desktop.Connection.JogManager"/> class.
            </summary>
            <param name="clientLink">The communications link to issue the jog commands.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.JogManager.StartJog(System.Int32)">
            <summary>
            Starts the jog thread.
            </summary>
            <param name="pDirection">1 or -1 depending on which button
            was used.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.JogManager.StopJog">
            <summary>
            Stops the jog thread.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.JogManager.RenewWatchdog">
            <summary>
            Renews the watchdog. Must periodically been called to maintain the jog operation.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.JogManager.JogModeMain(System.Object)">
            <summary>
            Main program managing jog mode actions. Runs in the background
            </summary>
            <param name="parameter">The jog direction. 1 or -1 depending on which button
            was used.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.JogManager.JogDirect">
            <summary>
            Simple wrapper to avoid having to check which style to use
            everywhere. Note that some function use JogTo directly
            for modes that are not supported in old style anyway.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.JogManager.RestoreCompMode">
            <summary>
            Restores the control mode to "computer controlled"
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.JogManager.Jog(System.Int32,System.Double,System.Int32,System.String,System.Boolean)">
            <summary>
            Simple wrapper to avoid having to check which style to use
            everywhere. Note that some function use JogTo directly
            for modes that are not supported in old style anyway.
            </summary>
            <param name="pMode">See VpLink.JogTo and VpLink.Jog</param>
            <param name="pSpeed">See VpLink.JogTo and VpLink.Jog</param>
            <param name="pAxis">See VpLink.JogTo and VpLink.Jog</param>
            <param name="pVariable">See VpLink.JogTo and VpLink.Jog</param>
            <param name="updateEvent">if set to <c>true</c> the update event is thrown.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.JogManager.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Desktop.Connection.VpLink">
            <summary>
            Wrapper class around ActiveV to make it easier to use.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.AsynchronousError">
            <summary>
            Event fired when the ActiveV2.Communication object fires a
            OnAsynchError event.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.ProgramOutput">
            <summary>
            Event fired when the ActiveV2.Communication object fires a
            OnProgramOutput event.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.ProgramStatusChange">
            <summary>
            Event fired when the ActiveV2.Communication object fires a
            OnProgramStatusChange event.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.ReadPosted">
            <summary>
            Event fired when the ActiveV2.Communication object fires a
            OnReadPosted event.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.ComExceptionDetected">
            <summary>
            Event indicating a COM exception was detected
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.Closed">
            <summary>
            Event fired when the connection is closed.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.Closing">
            <summary>
            Event fired just before the connection is closed.
            Will only happen on a clean close, a close because of
            error will not fire this event.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.Opened">
            <summary>
            Event fired when the connection is successfully opened.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.Zeroed">
            <summary>
            Event fired when the Zero function is successfully executed.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.DirectoryCreated">
            <summary>
            Event fired when the FDirectoryC function is successfully
            executed. SourcePath and DestinationPath will both be the
            name of the new directory.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.DirectoryDeleted">
            <summary>
            Event fired when the FDirectoryD function is successfully
            executed. SourcePath and DestinationPath will both be the
            name of the delete directory.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.FileCopied">
            <summary>
            Event fired when the FCopy function is successfully executed.
            SourcePath will contain the path for the source file and
            DestinationPath the path for the destination file.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.FileRenamed">
            <summary>
            Event fired when the FRename function is successfully executed.
            SourcePath will contain the previous name of the file and
            DestinationPath the new name.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.FileDeleted">
            <summary>
            Event fired when the FDelete function is successfully executed.
            SourcePath and DestinationPath will both contain the name of
            the deleted file.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.FileCreated">
            <summary>
            Event fired when something creates a new file (e.g. the 
            Store* functions ). SourcePath and DestinationPath will both 
            contain the name of the new file.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.ProgramDeleted">
            <summary>
            Event fired when a program is deleted from memory.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.ProgramRenamed">
            <summary>
            Event fired when a program is renamed.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.ModuleAssigned">
            <summary>
            Event fired when a program is assigned to a module.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Desktop.Connection.VpLink.FatalCommunicationsErrorDetected">
            <summary>
            Event fired when a fatal communications error is detected.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.#ctor(Ace.Communication.Link.ActiveVLink)">
            <summary>
            Constructor. Basic setup.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.#ctor(Ace.Communication.Link.ActiveVLink,System.Boolean)">
            <summary>
            Constructor. Basic setup.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Dispose(System.Boolean)">
            <summary>
            Destructor.
            </summary>
            <param name="disposing">True if called by Dispose.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Initialize(System.Boolean)">
            <summary>
            Initializing the VpLink object
            </summary>
            <param name="pingWhenOpenComm">if set to <c>true</c> the connection should ping when we open the connection.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.HandleStatus(System.Int32)">
            <summary>
            Internal utility function to throw an exception in case of 
            error status return.
            </summary>
            <param name="pStatus">The status to verify</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.HandleStatus(System.Int32,System.Int32)">
            <summary>
            Internal utility function to throw an exception in case of
            error status return.
            </summary>
            <param name="pStatus">The status to verify</param>
            <param name="vCode">The variable portion of the error code.</param>
            <exception cref="T:Ace.Communication.Link.VPException"></exception>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnAsynchError(System.Object,Ace.Communication.Link.AsynchronousEventArgs)">
            <summary>
            Internal event-handler for the ActiveV2.Communication object
            OnAsynchError event. We re-direct to out equivalent event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.AsynchronousEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnProgramOutput(System.Object,Ace.Communication.Link.AsynchronousEventArgs)">
            <summary>
            Internal event-handler for the ActiveV2.Communication object
            OnProgramOutput event. We re-direct to our equivalent event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.AsynchronousEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnProgramStatusChange(System.Object,Ace.Communication.Link.AsynchronousEventArgs)">
            <summary>
            Internal event-handler for the ActiveV2.Communication object
            OnProgramStatusChange event. We re-direct to our equivalent event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.AsynchronousEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnReadPosted(System.Object,Ace.Communication.Link.AsynchronousEventArgs)">
            <summary>
            Internal event-handler for the ActiveV2.Communication object
            OnReadPosted event. We re-direct to our equivalent event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.AsynchronousEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnLogMessage(System.Object,Ace.Communication.Link.LogMessageEventArgs)">
            <summary>
            Called when a message is logged.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.LogMessageEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnCOMException(System.Int32)">
            <summary>
            Report that a COM exception has been detected.
            </summary>
            <param name="code">The exception code.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnClosed(System.Object,System.EventArgs)">
            <summary>
            Internal function to call to fire the Closed event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnClosing(System.Object,System.EventArgs)">
            <summary>
            Internal function to call to fire the Closing event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnOpened(System.Object,System.EventArgs)">
            <summary>
            Internal function to call to fire the Opened event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnZeroed(System.Object,System.EventArgs)">
            <summary>
            Internal function to call to fire the Zeroed event.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnDirectoryCreated(System.Object,Ace.Communication.Link.FileEventArgs)">
            <summary>
            Internal function to call to fire the DirectoryCreated event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.FileEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnDirectoryDeleted(System.Object,Ace.Communication.Link.FileEventArgs)">
            <summary>
            Internal function to call to fire the DirectoryDeleted event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.FileEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnFileCopied(System.Object,Ace.Communication.Link.FileEventArgs)">
            <summary>
            Internal function to call to fire the FileCopied event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.FileEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnFileRenamed(System.Object,Ace.Communication.Link.FileEventArgs)">
            <summary>
            Internal function to call to fire the FileRenamed event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.FileEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnFileDeleted(System.Object,Ace.Communication.Link.FileEventArgs)">
            <summary>
            Internal function to call to fire the FileDeleted event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.FileEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnFileCreated(System.Object,Ace.Communication.Link.FileEventArgs)">
            <summary>
            Internal function to call to fire the FileCreated event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.FileEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnProgramDeleted(System.Object,Ace.Communication.Link.ProgramEventArgs)">
            <summary>
            Called when a program is deleted.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.ProgramEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnProgramRenamed(System.Object,Ace.Communication.Link.ProgramEventArgs)">
            <summary>
            Called when a program is renamed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.ProgramEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnProgramRenamed(System.String,System.String)">
            <summary>
            Called when a program is renamed.
            </summary>
            <param name="pOldName">The old name of the program.</param>
            <param name="pNewName">The new name of the program.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnModuleAssigned(System.Object,Ace.Communication.Link.ModuleAssignmentEventArgs)">
            <summary>
            Called when a program is assigned to a module.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.ModuleAssignmentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OnComExceptionDetected(System.Object,Ace.Communication.Link.COMExceptionEventArgs)">
            <summary>
            Called when a communication exception is detected
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Ace.Communication.Link.COMExceptionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.StringsSupported">
            <summary>
            Are string variables supported by the connected system?
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.LocationsSupported">
            <summary>
            Are location variables supported by the connected system?
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.ParametersSupported">
            <summary>
            Are program parameters supported by the connected system?
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.FileSizeInKilobytes">
            <summary>
            If true, file sizes are reported in kilobytes (eV+).
            If false they are in blocks (V+).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.LongFileNamesSupported">
            <summary>
            Returns true for eV+, false for others (V+,MicroV+).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.ESeriesSupport">
            <summary>
            Gets a value indicating whether the version of V+ supports eSeries robots
            </summary>
            <value>
              <c>true</c> if V+ supports eSeries robots; otherwise, <c>false</c>.
            </value>
            <remarks>
            Support was added in eV+ 2.2 A9 
            </remarks>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.IsOnline">
            <summary>
            Returns the connection status.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.NumberOfRobots">
            <summary>
            Returns the number of robots configured on the controller
            or 0 if not connected.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Abort(System.Int32)">
            <summary>
            Wrapper for Programs.Abort
            </summary>
            <param name="task">Number of task to abort</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Calibrate">
            <summary>
            Interface to the Calibrate command.
            </summary>
            <returns>Failure/Success return code.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ChangeLine(System.Int32,System.String@)">
            <summary>
            Wrapper around Editor.ChangeLine to modify the text for a program line.
            </summary>
            <param name="lineNumber">Number of line to change.</param>
            <param name="lineText">New text for this line.</param>
            <returns>Status of the operation</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ChangeLine(System.String,System.Int32,System.String@)">
            <summary>
            Wrapper around Editor.ChangeLine to modify the text for a program line.
            </summary>
            <param name="programName">Name of the program.</param>
            <param name="lineNumber">Number of line to change.</param>
            <param name="lineText">New text for this line.</param>
            <returns>Status of the operation</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.CheckProgram">
            <summary>
            Wrapper around Editor.CheckProgram. Verify the syntax for the
            currently edited program (edition stated with Edit).
            </summary>
            <returns>Status code.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ClearBreakpoint(System.String,System.Int32)">
            <summary>
            Wrapper around Programs.ClearBreakpoint to clear a breakpoint.
            </summary>
            <param name="programName">Name of program where to clear the
            breakpoint.</param>
            <param name="lineNumber">Line number where to clear the bp,
            if 0, all breakpoints will be cleared.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Close">
            <summary>
            Close the communication link.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ConnectionAddress">
            <summary>
            Return the IP address of the controller as a string. Only valid
            for Ethernet type connections.
            </summary>
            <returns>The IP address as a standard xxx.xxx.xxx.xxx string.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.DeleteL(System.String,System.Int32,System.String)">
            <summary>
            Delete one or more location variable(s). Not directly available 
            in ActiveV so use SendString.
            </summary>
            <param name="variableName">Name of the variable to delete,
            see V+/MicroV+ doc for name syntax.</param>
            <param name="task">Task number for context or -1 if no
            specific task.</param>
            <param name="program">Program name for context or empty
            string for no context.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.DeleteLine(System.Int32,System.Int32)">
            <summary>
            Wrapper for Editor.DeleteLine to remove a line in a program.
            </summary>
            <param name="lineNumber">Index of line to remove.</param>
            <param name="lineCount">Number of lines to remove.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.DeleteLine(System.String,System.Int32,System.Int32)">
            <summary>
            Wrapper for Editor.DeleteLine to remove a line in a program.
            </summary>
            <param name="programName">Name of the program.</param>
            <param name="lineNumber">Index of line to remove.</param>
            <param name="lineCount">Number of lines to remove.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.DeleteM(System.String)">
            <summary>
            Wrapper around Programs.Deletem to delete a module.
            </summary>
            <param name="moduleName">Name of module to delete.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.DeleteP(System.String)">
            <summary>
            Wrapper around Programs.Deletep. Deletes a program.
            No error if program does not exist.
            </summary>
            <param name="programName">Name of program</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.DeleteP(System.String,System.Boolean)">
            <summary>
            Wrapper around Programs.Deletep. Deletes a program.
            No error if program does not exist.
            </summary>
            <param name="programName">Name of program</param>
            <param name="reportProgramDeleted">if set to <c>true</c> an event is thrown to report the program has been deleted.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.DeleteR(System.String,System.Int32,System.String)">
            <summary>
            Delete one or more real variable(s). Not directly available 
            in ActiveV so use SendString.
            </summary>
            <param name="variableName">Name of the variable to delete,
            see V+/MicroV+ doc for name syntax.</param>
            <param name="task">Task number for context or -1 if no
            specific task.</param>
            <param name="program">Program name for context or empty
            string for no context.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.DeleteS(System.String,System.Int32,System.String)">
            <summary>
            Delete one or more string variable(s). Not directly available 
            in ActiveV so use SendString.
            </summary>
            <param name="variableName">Name of the variable to delete,
            see V+/MicroV+ doc for name syntax.</param>
            <param name="task">Task number for context or -1 if no
            specific task.</param>
            <param name="program">Program name for context or empty
            string for no context.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Directory(System.String)">
            <summary>
            Wrapper around Programs.Directory to get a list of programs.
            </summary>
            <param name="filter">Filter with * as the wildcard. Can be an
            empty string to get all programs.</param>
            <returns>List of program infos.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Edit(System.String)">
            <summary>
            Wrapper around Editor.Edit to start edition of a program.
            </summary>
            <param name="name">Name of program to edit.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.EraseBios(System.String)">
            <summary>
            Internal function. Not to be used in your programs.
            </summary>
            <param name="input">None of your business! :-)</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.EraseDisk">
            <summary>
            Internal function. Not to be used in your programs.
            </summary>
            <returns>None of your business! :-)</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Evaluate(System.String)">
            <summary>
            Simplified wrapper around Status.Evaluate (no task or program
            context, type of returned expression not provided).
            </summary>
            <param name="expression">Expression to evaluate</param>
            <returns>The string value returned. Can then be translated
            to an appropriate type depending on the expression type.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Evaluate(System.Int32,System.String,System.String)">
            <summary>
            Wrapper around Status.Evaluate.
            </summary>
            <param name="task">Task number for context, -1 if global</param>
            <param name="programName">Name of program for context, empty
            string for global.</param>
            <param name="expression">Expression to evaluate</param>
            <returns>A variable definition that gives the value of the
            expression and its data type.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Execute(System.String,System.Int32,System.Int32)">
            <summary>
            Execute a program on the controller. Wrapper for the 
            Programs.Execute function.
            </summary>
            <param name="programName">Full invocation line for program,
            including parenthesis and arguments.</param>
            <param name="task">Task number in which to run program</param>
            <param name="timeout">If higher than 0, will wait that maximum
            time for end of execution. If 0 or negative, does not wait. Value
            is in milliseconds.</param>
            <returns>The status</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.FCopy(System.String,System.String)">
            <summary>
            Wrapper around Files.FCopy, copies a file.
            </summary>
            <param name="sourceFile">Path for the source file.</param>
            <param name="destinationFile">Path for the destination file.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.FDelete(System.String)">
            <summary>
            Wrapper around Files.FDelete, deletes a file.
            </summary>
            <param name="fileName">Path for file to delete.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.FDirectory(System.String)">
            <summary>
            Wrapper around Files.FDirectory, returns the list of files
            and directory in a given path.
            </summary>
            <param name="path">Path to list</param>
            <returns>Array of information on files that match the path.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.FDirectoryC(System.String)">
            <summary>
            This is in this section even thought it is not a wrapper because 
            I intend to add it to ActiveV eventually. It creates a new
            directory.
            </summary>
            <param name="path">Name of new directory</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.FDirectoryD(System.String)">
            <summary>
            This is in this section even thought it is not a wrapper because 
            I intend to add it to ActiveV eventually. It deletes a directory.
            </summary>
            <param name="path">Name of directory to delete</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Free">
            <summary>
            Wrapper around Status.Free to get information about free memory.
            </summary>
            <returns>Free memory info.</returns> 
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.FRename(System.String,System.String)">
            <summary>
            Wrapper around Files.FRename to rename a file.
            </summary>
            <param name="oldName">Current name of file</param>
            <param name="newName">New name of file</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.FSet(System.String)">
            <summary>
            This is in this section even thought it is not a wrapper because 
            I intend to add it to ActiveV eventually. It just calls FSET.
            </summary>
            <param name="arguments">Arguments to pass to FSET. We must use this
            generic syntax because the syntax for FSET is variable depending
            on what we FSET.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.FSetProperties(System.String,System.String)">
            <summary>
            Wrapper around Files.FSetProperties, change the normal or
            system status of a file.
            </summary>
            <param name="fileName">Name of the file to modify.</param>
            <param name="property">New property to set. Use one of the
            FSP_* constants.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.GetErrorString(System.Int32)">
            <summary>
            Return the message associated with a given error code.
            </summary>
            <param name="code">The error code</param>
            <returns>The message</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.GetStringEx(System.Int32,System.Int32)">
            <summary>
            Wrapper around Communication.GetStringEx to get the output from
            the controller after having received an OnProgramOutput event.
            </summary>
            <param name="board">Board number.</param>
            <param name="channel">Channel number.</param>
            <returns>The controller output.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.InsertLine(System.Int32,System.String@)">
            <summary>
            Wrapper around Editor.InsertLine to insert a new line in a
            program.
            </summary>
            <param name="lineNumber">Number of line before which to insert.</param>
            <param name="lineText">Text for new line.</param>
            <returns>Status of the operation</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.InsertLine(System.String,System.Int32,System.String@)">
            <summary>
            Wrapper around Editor.InsertLine to insert a new line in a
            program.
            </summary>
            <param name="programName">Name of the program.</param>
            <param name="lineNumber">Number of line before which to insert.</param>
            <param name="lineText">Text for new line.</param>
            <returns>Status of the operation</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Install(System.String,System.Boolean)">
            <summary>
            This is in this section even thought it is not a wrapper because 
            I intend to add it to ActiveV eventually. It just calls INSTALL.
            </summary>
            <param name="password">Password for option to install/uninstall.</param>
            <param name="installing">If true install, false uninstall.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.IO(System.Int32)">
            <summary>
            Wrapper around Status.IO to know the state and validity of
            input and output signals.
            </summary>
            <param name="number">Specify which block to query. 0 is the output
            block. 1 is the input block. 2 is the soft signal block. 3 is the robot signal block.</param>
            <returns>Array of signal states.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.IsGetC">
            <summary>
            Wrapper around Communication.IsGetc to know if a Read is for
            a character only.
            </summary>
            <returns>True or false.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Jog(System.Int32,System.Int32,System.Int32,Ace.Core.Server.Transform3D@,Ace.Adept.Server.Desktop.PrecisionPoint@)">
            <summary>
            Wrapper for Misc.Jog, support of old style Jog command for older
            versions of V+.
            </summary>
            <param name="mode">Jogging mode, one of the JOG_MODE_* constants.</param>
            <param name="axis">Axis to jog.</param>
            <param name="speed">Speed at which to jog.</param>
            <param name="world">Returns the current world coordinates.</param>
            <param name="joints">Returns the current joints coordinates.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.JogTo(System.Int32,System.Int32,Ace.Core.Server.Transform3D@,Ace.Adept.Server.Desktop.PrecisionPoint@,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Wrapper for Misc.Jog2, jogs the robot.
            </summary>
            <param name="mode">Jogging mode, one of the JOG_MODE_* constants.</param>
            <param name="speed">Speed at which to jog.</param>
            <param name="world">Returns the current world coordinates.</param>
            <param name="joints">Returns the current joints coordinates.</param>
            <param name="robot">Number of robot to jog (for V+, for MicroV+
            should always be 1).</param>
            <param name="joint">Axis to jog. Doesn't matter in JogTo mode,
            in joint, number of joint, in world or tool, 1 is X, 2 is Y
            and so on.</param>
            <param name="task">Task for context for the destination variable.
            Only relevant in JOG_TO mode. Can be -1 for no specific task.</param>
            <param name="program">Program for context. Same comments as pTask</param>
            <param name="variable">Name of location variable to jog to in JOG_TO
            mode.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Kill(System.Int32)">
            <summary>
            Wrapper for Programs.Kill.
            </summary>
            <param name="task">Number of task to kill</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ListBreakpoints(System.String)">
            <summary>
            Wrapper around Programs.ListBreakpoints to get all line numbers
            where there is a breakpoint in a program.
            </summary>
            <param name="programName">Name of program to get the breakpoints
            for.</param>
            <returns>List of line numbers</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ListL(System.String,System.Int32,System.String)">
            <summary>
            Complete wrapper around ListL to retrieve the name
            and value of one location variables.
            </summary>
            <param name="name">Name of variable to read.</param>
            <param name="task">Task number for context, can be -1 for no
            specific task.</param>
            <param name="programName">Program name for context, can be
            empty string for no specific program.</param>
            <returns>The location variable as a Transform</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ListL(System.String)">
            <summary>
            Simple wrapper around ListL to get one value.
            </summary>
            <param name="name">Name of variable to read.</param>
            <returns>The location variable as a Transform</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ListP(System.String)">
            <summary>
            Wrapper around Programs.ListP to get the lines of a program.
            </summary>
            <param name="name">Name of program to list.</param>
            <returns>All the lines of the program.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ListP(System.String,System.Int32)">
            <summary>
            Wrapper around Programs.ListP to get the lines of a program.
            </summary>
            <param name="name">Name of program to list.</param>
            <param name="lineCount">The number of lines to extract.</param>
            <returns>The extracted lines of the program.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ListR(System.String,System.Int32,System.String,System.String[]@,System.Double[]@)">
            <summary>
            Complete wrapper around ListR to retrieve the name
            and value of one or more real variables.
            </summary>
            <param name="name">Name filter</param>
            <param name="task">Task number for context, can be -1 for no
            specific task.</param>
            <param name="programName">Program name for context, can be
            empty string for no specific program.</param>
            <param name="names">On output list of names of variables.</param>
            <param name="values">On output list of variable values.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ListR(System.String)">
            <summary>
            Simple wrapper around ListR to get one value at a time.
            </summary>
            <param name="name">Name of variable to retrieve. Can be name of
            a function also or expression, anything that returns a numerical
            result.</param>
            <returns>The value requested</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ListS(System.String,System.Int32,System.String,System.String[]@,System.String[]@)">
            <summary>
            Complete wrapper around ListS to retrieve the name
            and value of one or more string variables.
            </summary>
            <param name="name">Name filter</param>
            <param name="task">Task number for context, can be -1 for no
            specific task.</param>
            <param name="programName">Program name for context, can be
            empty string for no specific program.</param>
            <param name="names">On output list of names of variables.</param>
            <param name="values">On output list of variable values.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ListS(System.String)">
            <summary>
            Simple wrapper around ListS to get one value at a time.
            </summary>
            <param name="name">Name of variable to retrieve. Can be name of
            a function also or expression, anything that returns a string
            result.</param>
            <returns>The value requested</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Load(System.String)">
            <summary>
            Execute the V+ LOAD monitor command.
            </summary>
            <param name="fileName">Name of file to load.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.LVariables(System.String,System.Int32,System.String)">
            <summary>
            Wrapper around Status.Lvariables to get a list of location
            variable names.
            </summary>
            <param name="name">Name filter</param>
            <param name="task">Task number for context or -1 for
            no specific task.</param>
            <param name="programName">Program name for context or empty
            string for no specific program.</param>
            <returns>List of names</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.MDirectory(System.String)">
            <summary>
            Wrapper around Programs.MDirectory to get a list of modules
            or the list of programs in a module.
            </summary>
            <param name="name">Name of module. If a name is specified all
            programs in that module will be listed. If name is empty then
            all modules will be listed.</param>
            <returns>Array of infos of programs or modules.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Module(System.String,System.String)">
            <summary>
            Wrapper around Programs.Module to move a program into a specific module.
            </summary>
            <param name="moduleName">Name of module to move the program into.</param>
            <param name="programName">Name of program to move.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ModuleFile(System.String,System.String)">
            <summary>
            Wrapper around Programs.ModuleFile to associate a file name to a
            module.
            </summary>
            <param name="moduleName">Module name</param>
            <param name="fileName">File name to associate to given module.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.NfsMounts">
            <summary>
            Wrapper around Files.NFSMounts which lists the active NFS mounts.
            </summary>
            <returns>List of NFS mounts</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Open(System.String,System.Int32,System.String,System.Int32,System.String)">
            <summary>
            Try to connect to the controller using the given connection info.
            </summary>
            <param name="device">The name of the physical device to use to connect.  The recognized names are: UDP, TCP, and COM1 - COM16</param>
            <param name="unit">unit number of device, if necessary</param>
            <param name="name">name of V+ system to which to connect. This can be an IP address, for instance.</param>
            <param name="mode1">For serial communications this is flow control: 0=none, 1=XonXoff, 2=RTS/CTS, 3=Both. 
            For a TCP connection, this is a port offset added to the default ports.</param>
            <param name="mode2">For serial comm this is the serial line settings in format "BBBB,P,D,S" (baud rate, parity, data bits, stop bits) if empty, the default is "9600,N,8,1".</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Parameter(System.String)">
            <summary>
            Wrapper around Status.Parameter to get information about
            V+ PARAMETERs.
            </summary>
            <param name="name">Name of parameter to query or empty string
            for all parameters.</param>
            <returns>Array of parameter info.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Parameter(System.String,System.Single)">
            <summary>
            Wrapper around Misc.Parameter to change the value of a PARAMETER.
            </summary>
            <param name="name">Name of parameter to modify.</param>
            <param name="value">New value for parameter.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.PCopy(System.String,System.String)">
            <summary>
            Wrapper around Programs.PCopy to copy a program to another one.
            </summary>
            <param name="sourceName">Program to copy.</param>
            <param name="destinationName">Name to give to new program.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Prime(System.Int32,System.String)">
            <summary>
            Wrapper around Programs.Prime that will prepare a program in a
            given task.
            </summary>
            <param name="task">Number of task in which to prime the program.</param>
            <param name="programName">Name of program to prime.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Proceed(System.Int32)">
            <summary>
            Wrapper around Programs.Proceed to continue a program after
            an error.
            </summary>
            <param name="task">Number of task in which to proceed.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Rename(System.String,System.String)">
            <summary>
            Wrapper around Programs.Rename to change the name of a program.
            </summary>
            <param name="sourceName">Original name of program.</param>
            <param name="destinationName">New name of program.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.QueryReadRequest(System.Int32)">
            <summary>
            Wrapper for Communications.QueryReadRequest which tells us if a
            read request is pending on the controller.
            </summary>
            <param name="task">Task number to query.</param>
            <returns>True if a read is pending, false otherwise.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.RequestEvents(System.Int32)">
             <summary>
             Wrapper for the Communications.RequestEvents function to ask
             to receive or not asynchronous events.
             </summary>
             <param name="request">Requested level of event</param>
             <remarks>
             The value of 'request' is as follows: 
             2 if V+ is to send async output to us always
             1 if V+ is to send async output to us if no one
            		else has already requested events
            	0 if V+ is to stop sending async output to us
            </remarks>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Retry(System.Int32)">
            <summary>
            Wrapper around Programs.Retry to retry the last executed line.
            </summary>
            <param name="task">Number of task in which to retry.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SendString(System.String,System.String@)">
            <summary>
            Internal.
            </summary>
            <param name="command">N/A</param>
            <param name="result">N/A</param>
            <returns>N/A</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SendStringEx(System.Int32,System.Int32,System.String)">
            <summary>
            Wrapper around Communication.SendStringEx to send a string
            in response to a ReadPosted event.
            </summary>
            <param name="board">Board number.</param>
            <param name="task">Task number.</param>
            <param name="text">String to send.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SetBreakpoint(System.String,System.Int32)">
            <summary>
            Wrapper around Programs.SetBreakpoint to set a breakpoint
            in a program.
            </summary>
            <param name="programName">Name of program.</param>
            <param name="lineNumber">Number of line in program where
            to set the breakpoint.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SetL(System.String,Ace.Core.Server.Transform3D)">
            <summary>
            Wrapper around Misc.SetL.
            </summary>
            <param name="name">Name of variable to set.</param>
            <param name="value">Transform value to set.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SetL(System.String,System.Int32,System.String,Ace.Core.Server.Transform3D)">
            <summary>
            More general SetL to set variables that are not global.
            Not supported directly in ActiveV so use SendString.
            </summary>
            <param name="name">Name of variable to set.</param>
            <param name="task">Task number for context or -1 if no
            specific task.</param>
            <param name="program">Program name for context or empty
            string for no context.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SetPP(System.String,Ace.Adept.Server.Desktop.PrecisionPoint)">
            <summary>
            Wrapper around Misc.SetPP to set a precision point.
            </summary>
            <param name="name">Name of variable, should start with a #.</param>
            <param name="value">Joint values stored in a PrecisionPoint. You
            need only set as many values as there are motors.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SetPP(System.String,System.Int32,System.String,Ace.Adept.Server.Desktop.PrecisionPoint)">
            <summary>
            More general SetPP to set variables that are not global.
            Not supported directly in ActiveV so use SendString.
            </summary>
            <param name="name">Name of variable to set.</param>
            <param name="task">Task number for context or -1 if no
            specific task.</param>
            <param name="program">Program name for context or empty
            string for no context.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SetR(System.String,System.Double)">
            <summary>
            Wrapper for the MiscControl.SetR function. Sets the value
            of a real variable.
            </summary>
            <param name="name">Variable name</param>
            <param name="value">Value to set</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SetR(System.String,System.Int32,System.String,System.Double)">
            <summary>
            More general SetR to set variables that are not global.
            Not supported directly in ActiveV so use SendString.
            </summary>
            <param name="name">Name of variable to set.</param>
            <param name="task">Task number for context or -1 if no
            specific task.</param>
            <param name="program">Program name for context or empty
            string for no context.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SetS(System.String,System.String)">
            <summary>
            Wrapper around Misc.SetS function to set the value of a string
            variable.
            </summary>
            <param name="name">Name of the variable to set.</param>
            <param name="value">New value for the variable.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SetS(System.String,System.Int32,System.String,System.String)">
            <summary>
            More general SetS to set variables that are not global.
            Not supported directly in ActiveV so use SendString.
            </summary>
            <param name="name">Name of variable to set.</param>
            <param name="task">Task number for context or -1 if no
            specific task.</param>
            <param name="program">Program name for context or empty
            string for no context.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Signal(System.Int32,System.Boolean)">
            <summary>
            Wrapper around Misc.SignalOn and MiscSignalOff.
            </summary>
            <param name="number">Number of signal to change</param>
            <param name="state">New state</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Speed(System.Single)">
            <summary>
            Interface to the SPEED command.
            </summary>
            <param name="value">The new speed to set.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SStep(System.Int32)">
            <summary>
            Wrapper for Programs.SStep to single step (step over so does not
            go into a subroutine).
            </summary>
            <param name="task">Task number in which to single step.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.StackContent(System.Int32)">
            <summary>
            Wrapper around Status.StackContents to know the complete state
            of the stack for a given task.
            </summary>
            <param name="task">Number of task to query.</param>
            <returns>Task state.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Status">
            <summary>
            Wrapper around Status.Status to know the complete state of all
            active tasks.
            </summary>
            <returns>The statuses.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Store(System.String,System.String)">
            <summary>
            Wrapper around Programs.Store to store a program all its
            dependencies and variables to a file on the controller.
            </summary>
            <param name="programName">Name of program to save.</param>
            <param name="fileName">Name of file to save to.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.StoreL(System.String,System.String)">
            <summary>
            Execute the STOREL monitor command to store global location
            variables into a file.
            </summary>
            <param name="fileName">Name of the file to save to.</param>
            <param name="programName">If specified only variables used by the
            specified program and the programs it calls will be saves.
            If empty all variables will be saved.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.StoreM(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Wrapper around Programs.Storem to save a module to a file on the
            controller.
            </summary>
            <param name="moduleName">Name of module to save.</param>
            <param name="fileName">Name of file to save to.</param>
            <param name="storeReal">If true, real variables are stored in the file.</param>
            <param name="storeLocations">If true, location variables are stored.</param>
            <param name="storeStrings">If true, string variables are store. </param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.StoreP(System.String,System.String)">
            <summary>
            Wrapper around Programs.Storep to save a program and its dependencies
            to a file on the controller. Variables are not saved.
            </summary>
            <param name="programName">Name of program to save.</param>
            <param name="fileName">Name of file to save to.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.StoreR(System.String,System.String)">
            <summary>
            Execute the STORER monitor command to store global real
            variables into a file.
            </summary>
            <param name="fileName">Name of the file to save to.</param>
            <param name="programName">If specified only variables used by the
            specified program and the programs it calls will be saves.
            If empty all variables will be saved.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.StoreS(System.String,System.String)">
            <summary>
            Execute the STORES monitor command to store global string
            variables into a file.
            </summary>
            <param name="fileName">Name of the file to save to.</param>
            <param name="programName">If specified only variables used by the
            specified program and the programs it calls will be saves.
            If empty all variables will be saved.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Switch(System.String)">
            <summary>
            Wrapper around Status.Switch to get information about
            switches.
            </summary>
            <param name="name">Name of switch to query or empty
            string for all switches.</param>
            <returns>Information of matching switch(es).</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SwitchOff(System.String)">
            <summary>
            Wrapper around Misc.SwitchOff.
            </summary>
            <param name="name">Name of switch to turn off</param>
            <returns>Status</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SwitchOn(System.String)">
            <summary>
            Wrapper around Misc.SwitchOn.
            </summary>
            <param name="name">Name of switch to turn on</param>
            <returns>Status</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Where(System.Int32,Ace.Core.Server.Transform3D@,Ace.Adept.Server.Desktop.PrecisionPoint@)">
            <summary>
            Interface to the Where command. We convert the result to transforms.
            </summary>
            <param name="robotNumber">Number of robot for which the position
            is requested.</param>
            <param name="world">World coordinates will be written to this
            transform. Can be null if world not wanted.</param>
            <param name="joints">Joint coordinates will be written to this.
            Can be null if joints not wanted</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.XStep(System.Int32)">
            <summary>
            Wrapper around Programs.XStep to single step (step into subroutine).
            </summary>
            <param name="task">Task number in which to step.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.XStep2(System.Int32,System.Int32)">
            <summary>
            Wrapper around Programs.XStep2 to move execution to a specific line.
            </summary>
            <param name="task">Task number in which to step.</param>
            <param name="lineNumber">Line number to "jump" to.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Zero">
            <summary>
            Wrapper around Programs.ZERO to clear all programs and variables
            in memory.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.ConnectionString">
            <summary>
            Gets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.ConnectionIdentifier">
            <summary>
            Gets a string uniquely identifying the connection.
            </summary>
            <value>The connection identifier.</value>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.ConnectionType">
            <summary>
            Property that returns the current connection type.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.OSType">
            <summary>
            Property that returns the current OS type.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.Mode1">
            <summary>
            Gets the first mode setting associated with the connection
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.Mode2">
            <summary>
            Gets the second mode setting associated with the connection
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.CompatibilityVersionNumber">
            <summary>
            Gets the major V+ version number.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.VersionNumber">
            <summary>
            Major version number (e.g. 16 in 16.2 B4).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.RevisionNumber">
            <summary>
            Minor version number (e.g. 2 in 16.2 B4).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.EditNumber">
            <summary>
            Build number (e.g. B4 in 16.2 B4).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.VersionString">
            <summary>
            Full version string with all 3 components.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.NumericVersion">
            <summary>
            Version built as one number for comparisons.
            The formula is: VersionNumber*10000000 + Revision*10000
            EditLetter*100 + EditNumber.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ControllerPort">
            <summary>
            Return the Com port of the controller as a string. Only valid
            for Serial type connections.
            </summary>
            <returns>The Communication port as a standard COMX string.</returns>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.ControllerId">
            <summary>
            Compose a Id unique for each controller made up of the product
            type followed by the serial number.
            Typically used to save controller specific settings in the
            preference file.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.PingTimeout">
            <summary>
            Timeout used to wait for response on PING done before connection
            to check availability of controller for Ethernet connections.
            This is value is in milliseconds. If 0 or negative, no PING
            is performed.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Desktop.Connection.VpLink.TaskCount">
            <summary>
            Return the number of tasks on the system.
            </summary>
            <returns>The number or -1 if not connected</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ContainsAdeptSightKeyword(System.String)">
            <summary>
            AdeptSight keywords cannot be evaluated from ActiveV because it
            creates a deadlock condition. This function tries to evaluate if
            an expression contains a AdeptSight keyword returning results.
            </summary>
            <param name="expression">Expression to analyze.</param>
            <returns>True if contains AdeptSight keywords, false otherwise.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.DeleteL(System.String)">
            <summary>
            Easy variant of DeleteL for global variables.
            </summary>
            <param name="variableName">Name of variable(s) to delete.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.DeleteR(System.String)">
            <summary>
            Easy variant of DeleteR for global variables.
            </summary>
            <param name="variableName">Name of variable(s) to delete.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.DeleteS(System.String)">
            <summary>
            Easy variant of DeleteS for global variables.
            </summary>
            <param name="variableName">Name of variable(s) to delete.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Error(System.Int32,System.Int32)">
            <summary>
            Wrapper around ERROR V+ real-valued function to get 
            information about last error that occurred.
            </summary>
            <param name="source">Source of error (for example task number)</param>
            <param name="select">Select information returned see V+ doc.</param>
            <returns>Result of ERROR function.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.EvaluateL(System.String)">
            <summary>
            Specialized version of Evaluate that expects only Location
            type expression and will throw an error if expression is
            invalid or not of Location type.
            </summary>
            <param name="expression">Expression to evaluate.</param>
            <returns>The transform or null if invalid or not a
            location expression.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Frame(Ace.Core.Server.Transform3D,Ace.Core.Server.Transform3D,Ace.Core.Server.Transform3D)">
            <summary>
            Call to the FRAME transform function.
            </summary>
            <param name="origin">Origin of frame</param>
            <param name="pointX">Point that lies on the X axis</param>
            <param name="pointY">Point that lies in the X-Y plane,
            ideally on the Y axis.</param>
            <returns>The resulting transform.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.GetAsynchronousErrorString(System.Int32)">
            <summary>
            Return the complete error string for a asynchronous error.
            </summary>
            <param name="errorCode">Error code received from the event.</param>
            <returns>The message</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.GetCompleteErrorString(System.Int32,System.Int32)">
            <summary>
            Return a more complete error message including the variable part.
            </summary>
            <param name="code">Error code to get string for.</param>
            <param name="task">Task or select number for Error function.</param>
            <returns>The message.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.GetFileNames(System.String)">
            <summary>
            Wrapper around Files.FDirectory that returns only the file names.
            </summary>
            <param name="path">Path to list</param>
            <returns>Array of the all the names.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.IsInRange(System.Int32)">
            <summary>
            Return a bitmask indicating if the joints of the specified robot are INRANGE.
            </summary>
            <param name="robot">Number of robot.</param>
            <returns>Bitmask indicating which joints are not inrange.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.GetBase(System.Int32)">
            <summary>
            Return the current BASE transform for the specified robot.
            </summary>
            <param name="robot">Number of robot.</param>
            <returns>The base transform.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.GetTool(System.Int32)">
            <summary>
            Return the current tool transform for the specified robot.
            </summary>
            <param name="robot">Number of robot.</param>
            <returns>The tool transform.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Id(System.Int32,System.Int32)">
            <summary>
            Uses ListR to get access to the ID function.
            </summary>
            <param name="device">Device parameter for ID</param>
            <param name="component">Component parameter for ID</param>
            <returns>The requested information</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.IdCommand">
            <summary>
            Get the raw string returned by the ID monitor command.
            </summary>
            <returns>The ID string.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.IsValidFileName(System.String)">
            <summary>
            Verifies that a file name is valid for the current os.
            </summary>
            <param name="name">Name to validate</param>
            <returns>True if valid</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.IsValidFolderName(System.String)">
            <summary>
            Verifies that a folder name is valid for the current os.
            </summary>
            <param name="name">Name to validate</param>
            <returns>True if valid</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.JMove(Ace.Adept.Server.Desktop.PrecisionPoint)">
            <summary>
            Use the SendString command to do a JMOVE. Should be eventually
            improved because currently we cannot detect errors that prevent
            the move.
            </summary>
            <param name="joints">Joint values</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Move(Ace.Core.Server.Transform3D)">
            <summary>
            Use the SendString command to do a MOVE. Should be eventually
            improved because currently we cannot detect errors that prevent
            the move.
            </summary>
            <param name="location">The destination location</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Moves(Ace.Core.Server.Transform3D)">
            <summary>
            Use the SendString command to do a MOVE. Should be eventually
            improved because currently we cannot detect errors that prevent
            the move.
            </summary>
            <param name="location">The destination location</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ListPP(System.String,System.Int32,System.String)">
            <summary>
            Simple wrapper around Listl but for a value that we know
            is a precision point.
            </summary>
            <param name="name">Name of variable to read.</param>
            <param name="task">Optional task number for local variables (-1 for global).</param>
            <param name="program">Optional program name for local variables ("" for global).</param>
            <returns>The joint values as a PrecisionPoint.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ListPP(System.String)">
            <summary>
            Simple wrapper around ListPP to get a global value (added by RegisP).
            </summary>
            <param name="name">Name of variable to read.</param>
            <returns>The joint values as a PrecisionPoint.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.MountNfsDrive(System.String,System.String,System.String)">
            <summary>
            Perform the necessary FSET commands to mount an NFS drive.
            </summary>
            <param name="mountName">The name you want the new drive to have.</param>
            <param name="ipAddress">IP address of the NFS server.</param>
            <param name="directory">Path of directory to mount on server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Open(System.String)">
            <summary>
            Special simpler version of Open to connect via Ethernet.
            </summary>
            <param name="ipAddress">IP address to connect to.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OpenEthernet(System.String,System.Int32)">
            <summary>
            Special simpler version of Open to connect via Ethernet specifying a port offset
            </summary>
            <param name="ipAddress">IP address to connect to.</param>
            <param name="portOffset">This is a port offset added to the default ports.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.OpenEthernet(System.String,System.Int32,System.String)">
            <summary>
            Special simpler version of Open to connect via Ethernet specifying a port offset
            </summary>
            <param name="ipAddress">IP address to connect to.</param>
            <param name="portOffset">This is a port offset added to the default ports.</param>
            <param name="ipAddressLocalNIC">This is local NIC.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Open(System.String,System.Int32)">
            <summary>
            Special simpler version of Open to connect via serial port.
            </summary>
            <param name="port">Com Port device name (COM1,COM2,...)</param>
            <param name="speed">Baud rate</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.ResetServos">
            <summary>
            Use SendString to ask for a SRV.RESET. Eventually this command
            should be added directly to ActiveV.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.RobotCalibrated(System.Int32)">
            <summary>
            Simple wrapper function to know if a robot is calibrated.
            </summary>
            <param name="robotIndex">Index of robot to query (1-based).</param>
            <returns>True if calibrated, false otherwise.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SendProgram(System.String,System.String[])">
            <summary>
            Send a program to the controller.
            </summary>
            <param name="programName">Name of the program</param>
            <param name="lines">array of strings containing the lines
            of the program</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.SetTool(System.Int32,Ace.Core.Server.Transform3D)">
            <summary>
            Set the tool transform for the specified robot to the given value.
            </summary>
            <param name="robot">Robot number</param>
            <param name="value">New tool value.</param>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.State(System.Int32)">
            <summary>
            Uses ListR to get access to the STATE function.
            </summary>
            <param name="select">Select parameter of STATE</param>
            <returns>The requested state</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.Task(System.Int32,System.Int32)">
            <summary>
            Wrapper around the TASK real-valued function to get information
            about a task.
            </summary>
            <param name="taskNumber">Number of task to query.</param>
            <param name="select">Select which information to retrieve. See
            V+/MicroV+ documentation.</param>
            <returns>The result of the Task function.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.WhereJoint(System.Int32)">
            <summary>
            Interface to the Where command. We convert the result to a PrecisionPoint.
            </summary>
            <param name="robotNumber">Number of robot for which the position
            is requested.</param>
            <returns>Current joint values.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Desktop.Connection.VpLink.WhereWorld(System.Int32)">
            <summary>
            Interface to the Where command. We convert the result to a transform.
            </summary>
            <param name="robotNumber">Number of robot for which the position
            is requested.</param>
            <returns>Current world transform.</returns>
        </member>
        <member name="T:Ace.Adept.Server.Emulator.EmulatorInstance">
            <summary>
            A container object around an instance of an eV+ emulator.
            Mainly used to store informations related to this instance of the emulator.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorInstance.portOffsets">
            <summary>
            A list of port offsets
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorInstance.defaultNetworkPorts">
            <summary>
            A list of default network ports
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorInstance.process">
            <summary>
            The process of this emulator
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Emulator.EmulatorInstance.Process">
            <summary>
            Gets or sets the process.
            </summary>
            <value>The process.</value>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorInstance.portOffset">
            <summary>
            The port offset used to connect to this emulator
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Emulator.EmulatorInstance.PortOffset">
            <summary>
            Gets the port offset.
            </summary>
            <value>The port offset.</value>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorInstance.pathToRoot">
            <summary>
            The path to the root folder for this emulator
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Emulator.EmulatorInstance.PathToRoot">
            <summary>
            Gets the path to the root folder.
            </summary>
            <value>The port offset.</value>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorInstance.defaultNetworkPort">
            <summary>
            The default network port used to connect to this emulator
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Emulator.EmulatorInstance.DefaultNetworkPort">
            <summary>
            Gets the default network port.
            </summary>
            <value>The default network port.</value>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorInstance.runningEmulator">
            <summary>
            Indicates whether we are connected to a running emulator.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Emulator.EmulatorInstance.RunningEmulator">
            <summary>
            Gets a value indicating whether we are connected to a running emulator.
            </summary>
            <value><c>true</c> if [running emulator]; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorInstance.logFile">
            <summary>
            The log file.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Emulator.EmulatorInstance.LogFile">
            <summary>
            Gets the log file.
            </summary>
            <value>The log file.</value>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorInstance.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Emulator.EmulatorInstance"/> class.
            </summary>
            <param name="defaultNetworkPortBase">The default network port base.</param>
            <param name="logFile">The log file.</param>
            <param name="pathToRoot">The path to root.</param>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorInstance.#ctor(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Emulator.EmulatorInstance"/> class.
            </summary>
            <param name="defaultNetworkPortBase">The default network port base.</param>
            <param name="logFile">The log file.</param>
            <param name="pathToRoot">The path to root.</param>
            <param name="portOffset">The port offset.</param>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorInstance.Initialize(System.Int32,System.String)">
            <summary>
            Initializes this instance.
            </summary>
            <param name="defaultNetworkPortBase">The default network port base.</param>
            <param name="pathToRoot">The path to root.</param>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorInstance.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorInstance.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="deleteConfiguration"><c>true</c> to delete the configuration folder; <c>false</c> otherwise.</param>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorInstance.ChangePortOffset">
            <summary>
            Changes the port offset.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorInstance.DisablePorts(System.Int32,System.Int32)">
            <summary>
            Disables the ports. They will not be usable by emulators anymore.
            </summary>
            <param name="portOffset">The port offset.</param>
            <param name="defaultNetworkPort">The default network port.</param>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorInstance.GetPortOffset">
            <summary>
            Gets the port offset.
            Each emulator uses a range of ports. Reserving 20 for each is enough.
            We will start with a &gt;0 value and return the first unused value.
            Having a port offset &gt;0 ensure that the emulator will not be displayed
            in the ACE Connect dialog window.
            The port offset 0 is reserved to connect to already running emulators,
            mainly for eV+ debugging purpose.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorInstance.AssignPortOffset(System.Int32)">
            <summary>
            Assigns the port offset.
            </summary>
            <param name="portOffset">The port offset.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorInstance.RemovePortOffset(System.Int32)">
            <summary>
            Removes the port offset.
            </summary>
            <param name="portOffset">The port offset.</param>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorInstance.GetDefaultNetworkPort(System.Int32)">
            <summary>
            Gets the default network port.
            </summary>
            <param name="defaultNetworkPortBase">The default network port base.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorInstance.RemoveDefaultNetworkPort(System.Int32)">
            <summary>
            Removes the default network port.
            </summary>
            <param name="defaultNetworkPort">The default network port.</param>
        </member>
        <member name="T:Ace.Adept.Server.Emulator.EmulatorPlugin">
            <summary>
            The emulator server-side plugin. It will be responsible of starting, connecting to,
            monitoring and closing the emulator processes.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Emulator.EmulatorPlugin.EmulatorStartError">
            <summary>
            Occurs when an emulator cannot be started.
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Emulator.EmulatorPlugin.EmulatorStopError">
            <summary>
            Occurs when when an emulator suddenly stops.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorPlugin.aceServer">
            <summary>
            The server associated with the plugin
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorPlugin.backgroundThread">
            <summary>
            A background thread that will be monitoring the running emulators
            and report an error if one of them terminates.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorPlugin.backgroundThreadRun">
            <summary>
            Flag indicating if the background thread should run
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorPlugin.autoconf">
            <summary>
            "autoconf" string
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorPlugin.emulatorInstances">
            <summary>
            A list of emulator instances
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorPlugin.RetryCount">
            <summary>
            How many times we want to try to start the emulator.
            The ports that generate a failure will be recorded and not used anymore.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.BuildStopEventName(System.Diagnostics.Process)">
            <summary>
            Build a name for a system event to close an eV+ emulator that listen to it.
            This has to match exactly eV+ source code.
            </summary>
            <param name="process">eV+ emulator process</param>
            <returns>
            Name of system event to use to close emulator
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.StartEmulator(Ace.Adept.Server.Controls.IAdeptController,System.Int32)">
            <summary>
            Start an new emulator instance. This will wait for at least 1500ms for the emulator to
            initialize and check exit code in case some init issues are discovered.
            </summary>
            <param name="controller">The controller.</param>
            <param name="defaultNetworkPortBase">The default network port base.</param>
            <returns>The emulator instance.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.StartEmulator(Ace.Adept.Server.Controls.IAdeptController,System.Int32,System.String)">
            <summary>
            Start an new emulator instance. This will wait for at least 1500ms for the emulator to
            initialize and check exit code in case some init issues are discovered.
            </summary>
            <param name="controller">The controller.</param>
            <param name="defaultNetworkPortBase">The default network port base.</param>
            <param name="pathToRoot">The path to root.</param>
            <returns>The emulator instance.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.StopEmulator(Ace.Adept.Server.Emulator.EmulatorInstance)">
            <summary>
            Stop a running emulator using a system event.
            </summary>
            <param name="emulatorInstance">The emulator instance.</param>
        </member>
        <member name="P:Ace.Adept.Server.Emulator.EmulatorPlugin.Value">
            <summary>
            Implements the IPropertyHandler.Value to register the property with the AceServer
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Emulator.EmulatorPlugin.logFolder">
            <summary>
            The log folder. It will be created once each time the ACE server is started.
            It will contain the log files of the emulators.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.Initialize(Ace.Core.Server.IAceServer)">
            <summary>
            An interface implemented by server-side ACE plugins. Classes implementing
            this interface are automatically discovered at system startup, and the
            <c>Initialize()</c> method called. There are no guarantees as to which
            order plugins are initialized.
            </summary>
            <param name="server">The server associated with the plugin</param>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.ShutDown">
            <summary>
            Initiates a shuts-down operation on the plug-in
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.BackgroundThread">
            <summary>
            The background thread that monitors the running emulators
            and report errors if one terminates.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.UpdateEmulatorConfiguration(Ace.Core.Server.IAceServer,Ace.Adept.Server.Controls.IAdeptController,System.String,System.String,System.String,System.String)">
            <summary>
            Adds robot configuration to the default configuration data 
            and saves the new configuration file at the target path 
            </summary>
            <param name="ace">ACE server</param>
            <param name="node">Adept controller</param>
            <param name="defaultConfigFilePath">Default configuration file path</param>
            <param name="configFormatFilePath">Configuration format file path (conf.xsd)</param>
            <param name="dataFormatFilePath">Data format file path (data.xsd)</param>
            <param name="targetConfigFilePath">Target configuration file path</param>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.GetProductInfo(System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
            Get the product type and kinematic number from the product's data XML file
            </summary>
            <param name="specDataDirectory">Path to the spec data directory</param>
            <param name="productTypeName">Product type name</param>
            <param name="productTypeNumber">The product type ID number.</param>
            <param name="kinematicModel">The kinematic model ID number.</param>
            <returns>Is the robot considered valid</returns>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.ValidateAllRobotProductTypes(Ace.Core.Server.IAceServer,Ace.Adept.Server.Controls.IAdeptController,Ace.Adept.Server.Emulator.EVPlusRobotConfigurationItem[])">
            <summary>
            Check if all robots in the workspace belonging to the specified controller
            have valid product type definitions in the eV+ data.xsd file.
            </summary>
            <param name="ace">ACE server</param>
            <param name="node">Controller</param>
            <param name="robotIdAndProductNameList">Robot ID and product name listing</param>
            <returns>True, if all robots assigned to the controller have valid product type definitions</returns>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.DoesControllerHaveAtLeastOneRobot(Ace.Core.Server.IAceServer,Ace.Adept.Server.Controls.IAdeptController)">
            <summary>
            Scans to see if the selected controller has any robot assigned
            </summary>
            <param name="ace">Ace Server</param>
            <param name="node">Controller</param>
            <returns>True, if there is at least one robot assigned to the specified controller; False otherwise</returns>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.GetRobotProductTypeName(Ace.Adept.Server.Motion.IAdeptRobot,Ace.Adept.Server.Emulator.EVPlusRobotConfigurationItem[])">
            <summary>
            Get the robot product type name for the specified robot
            </summary>
            <param name="robot">Robot</param>
            <param name="robotIdAndProductNameList">Robot ID and product name listing</param>
            <returns>Product type name</returns>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.AddRobotToConfiguration(Ace.Adept.Server.Controls.Configuration.eVPlus.Format.ConfigurationFileFormatEvp,Ace.Adept.Server.Controls.Configuration.eVPlus.Data.ConfigurationSectionEvp,System.Int32,System.String,System.Int32,System.String,System.Int32,System.String)">
            <summary>
            Adds a robot to the configuration file.
            </summary>
            <param name="configurationFileFormatEvp">The configuration file format evp.</param>
            <param name="robotSectionEvp">The robot section evp.</param>
            <param name="robotNumber">The robot number.</param>
            <param name="productType">Type of the product.</param>
            <param name="primaryOptionWord">The option word associated with the robot.</param>
            <param name="primaryOptionWordNode">The name of the node used for the option word.</param>
            <param name="secondaryOptionWord">The secondary option word.</param>
            <param name="secondaryOptionWordNode">The secondary option word node.</param>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.ClearExistingRobotStatements(Ace.Adept.Server.Controls.Configuration.eVPlus.Data.ConfigurationSectionEvp)">
            <summary>
            Remove all robot statements in ROBOT_SECTION
            </summary>
            <param name="robotSection">Handle to the robot configuration section</param>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.GetDefaultIntegerValueString(Ace.Adept.Server.Controls.Configuration.eVPlus.Format.ConfigurationFileFormatEvp,System.String,System.String,System.String)">
            <summary>
            Get the default value for an integer value item
            </summary>
            <param name="configurationFileFormatEvp">Configuration file format</param>
            <param name="sectionTitle">Section title</param>
            <param name="statementTitle">Statement title</param>
            <param name="itemTitle">Item title</param>
            <returns>Default value string</returns>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.ReadTextFile(System.String)">
            <summary>
            Read a text file and return the content as a string
            </summary>
            <param name="textFilePath">Text file path to read</param>
            <returns>Text file content</returns>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.SaveUpdatedConfigDataToTargetFile(System.String,System.String)">
            <summary>
            Create the target file and save the file text
            </summary>
            <param name="targetConfigFilePath">Target configuration file path</param>
            <param name="fileTextToSave">File content text to save</param>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.ValidateEmulatorConfiguration(System.String,System.String,System.String)">
            <summary>
            Validate emulator configuration
            </summary>
            <param name="configFilePath">Configuration file path</param>
            <param name="configFormatFilePath">Configuration format file path (conf.xsd)</param>
            <param name="dataFormatFilePath">Data format file path (data.xsd)</param>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.ValidationEventHandler(System.Object,System.Xml.Schema.ValidationEventArgs)">
            <summary>
            Emulator configuration validation event handler
            </summary>
            <param name="sender">Sender of the event</param>
            <param name="args">Validation event arguments</param>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.GetSupportedRobots(Ace.Adept.Server.Controls.IAdeptController)">
            <summary>
            Scan product IDs and product names for the supported robots
            Use this if the controller already has the config format and data format information
            Do not use this for the emulators launched from ACE
            </summary>
            <param name="node">Controller</param>
            <returns>List of robot configuration items</returns>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.GetSupportedRobots(System.String,System.String,System.String)">
            <summary>
            Scan product IDs and product names for the supported robots
            Use this if the controller does not yet have the config format and data format information
            Use this for the emulators launched from ACE
            </summary>
            <param name="configFormat">Configuration format information string</param>
            <param name="dataFormat">Data format information string</param>
            <param name="specDataPath">Spec data path</param>
            <returns>Listing of supported robots</returns>
        </member>
        <member name="M:Ace.Adept.Server.Emulator.EmulatorPlugin.GetPlatformFiles(Ace.Adept.Server.Motion.IAdeptRobot)">
            <summary>
            Gets the list of platform files associated with the specified robot
            </summary>
            <param name="robot">The robot to extract the files for.</param>
            <returns>A dictionary containing the platform file names as the key and the associated decription</returns>
        </member>
        <member name="T:Ace.Adept.Server.Motion.HornetKinematicParameters">
            <summary>
            Hornet (Delta) robot kinematics class.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.HornetKinematicParameters.FrameZOffset">
            <summary>
            Gets or sets the frame to Z offset, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.HornetKinematicParameters.FrameThetaOffset">
            <summary>
            Gets or sets the frame to Theta offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.HornetKinematicParameters.ToolFlangeOffset">
            <summary>
            Gets or sets the distance from the tip plane to the tool flange surface, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.HornetKinematicParameters.InnerLinkLength">
            <summary>
            Gets or sets the length of the inner link, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.HornetKinematicParameters.OuterLinkLength">
            <summary>
            Gets or sets the length of the outer link, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.HornetKinematicParameters.BaseRadius">
            <summary>
            Gets or sets the distance from the robot centerline to the 'shoulder' joint axis, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.HornetKinematicParameters.TipRadius">
            <summary>
            Gets or sets the distance from the robot centerline to the 'wrist' joint axis, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.HornetKinematicParameters.BaseOffsetX">
            <summary>
            Gets or sets the base offset in X direction, in mm.
            </summary>		
        </member>
        <member name="P:Ace.Adept.Server.Motion.HornetKinematicParameters.BaseOffsetY">
            <summary>
            Gets or sets the base offset in Y direction, in mm.
            </summary>		
        </member>
        <member name="P:Ace.Adept.Server.Motion.HornetKinematicParameters.BaseOffsetZ">
            <summary>
            Gets or sets the base offset in Z direction, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.HornetKinematicParameters.BaseOffsetTheta">
            <summary>
            Gets or sets the base offset in Theta direction, in deg.
            </summary>		
        </member>
        <member name="T:Ace.Adept.Server.Motion.AbstractHornetRobot">
            <summary>
            Delta robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractHornetRobot.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractHornetRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractHornetRobot.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractHornetRobot.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractHornetRobot.KinematicParameters">
            <summary>
            Gets or sets the robot's kinematic parameters.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractHornetRobot.EnableBrakeReleaseInput">
            <summary>
            Gets or sets the robot brake release output control mode
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractHornetRobot.UpdateState(System.Boolean)">
            <summary>
            Ensures the kinematic parameters are read from the robot when communication is established.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractHornetRobot.ForwardKinematics(System.Int32,System.Double[])">
            <summary>
            Returns the offset from the robot base to the end of the specified joint. 
            By default, this assumes a serial mechanism.
            </summary>
            <param name="jointNumber">0-based joint number.</param>
            <param name="jointPos">Joint position array</param>
            <returns>Position of the end of the given joint.</returns>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractHornetRobot.JointOffsets">
            <summary>
            Gets an array of joint positions for this robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractHornetRobot.ZMountingOffset">
            <summary>
            Gets the Z mounting offset.
            </summary>
            <value>The Z mounting offset.</value>
        </member>
        <member name="T:Ace.Adept.Server.Motion.MotorBase">
            <summary>
            A class representing motor base in an Adept system.
            </summary>    
        </member>
        <member name="F:Ace.Adept.Server.Motion.MotorBase.availableOpcodes">
            <summary>
            A dictionary of available opcodes
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Motion.MotorBase.cachedEncoderType">
            <summary>
            Encoder type
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.MotorBase.#ctor">
            <summary>
            default Motor constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.MotorBase.ToString">
            <summary>
            Returns a string description of this motor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.MotorBase.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.Status">
            <summary>
            Gets a motor status object.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.IsAlive">
            <summary>
            True if communication to the motor is operational, false if not. In general,
            if no motor "gadget" is mapped to this motor on the Firewire, it will be disabled.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.MotorBase.MotorCommand(System.Boolean,System.Int32,System.Double[])">
            <summary>
            Send a low-level motor command to V+. Do not use this function unless you know what you're doing!
            </summary>
            <param name="robotTask">True to execute the command synchronously with robot motion; false otherwise.</param>
            <param name="opcode">Opcode to send. </param>
            <param name="toMotor">Array of data to send to servos.</param>
            <returns>Array of data returned by servos.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.MotorBase.GetOpcode(System.Int32)">
            <summary>
            Reads an opcode from the servos.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.MotorBase.GetSpecValue(System.Int32)">
            <summary>
            Reads an spec value from the servos.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.Position">
            <summary>
            Gets or sets the current motor position. The preferred way to set the position during
            calibration is to use the <c>AdjustPosition</c> command, since there is no gap in
            time between getting and setting position that can result in minor position errors.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.PositionError">
            <summary>
            Gets the current motor position error (commanded position - actual position), in counts.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.IndexDelta">
            <summary>
            Gets the distance between the last two index pulses, in counts.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.OutputLevel">
            <summary>
            Gets or sets the commanded motor output, from -32768 to 32767. Be careful
            setting the commanded output--can cause the motor to take off.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.Node">
            <summary>
            Gets the Firewire node to which this motor belongs.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.GadgetNumber">
            <summary>
            Gets the gadget number on the Firewire node to which this motor belongs.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.Robot">
            <summary>
            Gets the robot to which this motor belongs.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.MotorNumber">
            <summary>
            0-based index of the motor within the robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.MotorBase.GetUnlatchedErrors">
            <summary>
            return unlatched errors
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.MotorBase.GetStatusBits">
            <summary>
            return the status bits
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.MotorBase.GetLatchedErrors">
            <summary>
            return latched errors
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.EncoderAlarm">
            <summary>
            return encoder alarm
            </summary>
            <summary>
            Reads the encoder alarm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.EncoderCommunicationError">
            <summary>
            return encoder communication error
            </summary>
            <summary>
            Reads the encoder communications error status.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.IsSecondary">
            <summary>
            0-based index of the motor within the robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.IsYaskawa">
            <summary>
            Is Yaskawa encoder.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.IsTsa">
            <summary>
            Is Tsa encoder.
            </summary>
            <remarks>This encoder is also used by Nachi Robot</remarks>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorBase.IsMitsubishi">
            <summary>
            Is Mitsubishi encoder.
            </summary>
            <remarks>This encoder is also used by Hornet Robot</remarks>
        </member>
        <member name="M:Ace.Adept.Server.Motion.MotorBase.CheckServoData(Ace.Communication.ServoData)">
            <summary>
            Checks if the servo data exists and update the dictionary.
            The first time, the data will be accessed. Then, the dictionary will be used for efficiency.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.MotorBase.CheckServoSpecification(Ace.Adept.Server.Motion.ServoSpecification)">
            <summary>
            Checks if the servo specification exists and update the dictionary.
            The first time, the data will be accessed. Then, the dictionary will be used for efficiency.
            </summary>
            <param name="spec">The spec.</param>
            <returns></returns>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.i4Robot850">
            <summary>
            OAT i4 850-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.i4Robot850.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.i4Robot850.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.i4Robot750">
            <summary>
            OAT i4 750-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.i4Robot750.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.i4Robot750.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.i4Robot650">
            <summary>
            OAT i4 650-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.i4Robot650.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.i4Robot650.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Cobra650">
            <summary>
            Adept Cobra 650-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra650.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra650.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Cobra500">
            <summary>
            Adept Cobra 500-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra500.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra500.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Cobra450">
            <summary>
            Adept Cobra 450-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra450.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra450.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Hornet565Fixed">
            <summary>
            Adept Hornet 565 (delta style) robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Hornet565Fixed.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Hornet565Fixed.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Viper900">
            <summary>
            Adept Viper 900-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Viper900.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Viper900.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Viper700">
            <summary>
            Adept Viper 700-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Viper700.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Viper700.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Hornet565">
            <summary>
            Adept Hornet 565 (delta style) robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Hornet565.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Hornet565.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Viper1700D">
            <summary>
            AdeptViper 1700-mm reach, new revision, robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Viper1700D.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Viper1700D.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Cobra850">
            <summary>
            Adept Cobra 850-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra850.#ctor">
            <summary>
            Creates an Adept Cobra 850 robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra850.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.GenericGantryRobot">
            <summary>
            Generic five or six axis gantry robot robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.GenericGantryRobot.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.GenericGantryRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Quattro650">
            <summary>
            Quattro650 robot class.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robots.Quattro650.ZMountingOffset">
            <summary>
            Gets the Z mounting offset.
            </summary>
            <value>The Z mounting offset.</value>
            <remarks>The Quattro robots have their Z 0 position in line with the mounting surface. As such, the Quattro
            initial position needs to be raised by the maximum extent of the Z axis
            </remarks>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Quattro650.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Quattro650.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Quattro650.ForwardKinematics(System.Int32,System.Double[])">
            <summary>
            Returns the offset from the robot base to the end of the specified joint. 
            </summary>
            <param name="jointNumber">0-based joint number.</param>
            <param name="jointPos">Joint position array</param>
            <returns>Position of the end of the given joint.</returns>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Quattro800">
            <summary>
            Quattro800 robot class.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robots.Quattro800.ZMountingOffset">
            <summary>
            Gets the Z mounting offset.
            </summary>
            <value>The Z mounting offset.</value>
            <remarks>The Quattro robots have their Z 0 position in line with the mounting surface. As such, the Quattro
            initial position needs to be raised by the maximum extent of the Z axis
            </remarks>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Quattro800.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Quattro800.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Quattro800.ForwardKinematics(System.Int32,System.Double[])">
            <summary>
            Returns the offset from the robot base to the end of the specified joint. 
            </summary>
            <param name="jointNumber">0-based joint number.</param>
            <param name="jointPos">Joint position array</param>
            <returns>Position of the end of the given joint.</returns>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Viper1700">
            <summary>
            AdeptViper 1700-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Viper1700.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Viper1700.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.AdeptOne">
            <summary>
            AdeptOne robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.AdeptOne.#ctor">
            <summary>
            Creates an AdeptOne robot object.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.AdeptOne.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.AdeptSix300">
            <summary>
            AdeptSix 300-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.AdeptSix300.#ctor">
            <summary>
            Creates a class representing the AdeptSix 300 robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.AdeptSix300.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.AdeptSix600">
            <summary>
            AdeptSix 600-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.AdeptSix600.#ctor">
            <summary>
            Creates an AdeptSix 600 robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.AdeptSix600.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Cobra350">
            <summary>
            Adept Cobra 350-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra350.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra350.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Cobra600">
            <summary>
            Adept Cobra 600-mm reach robot class.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Motion.Robots.Cobra600.BreakawayEstopEnableBit">
            <summary>
            The bit defining the breakaway estop bit in word 1243
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra600.#ctor">
            <summary>
            Creates an Adept Cobra 600 robot object.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra600.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robots.Cobra600.BreakAwayEstopEnabled">
            <summary>
            Gets or sets the robot brake release output control mode
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Cobra800">
            <summary>
            Adept Cobra 800-mm reach robot class.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Motion.Robots.Cobra800.isInverted">
            <summary>
            Is the cobra800 an inverted cobra
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra800.#ctor">
            <summary>
            Creates an Adept Cobra 800 robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra800.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra800.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robots.Cobra800.BreakAwayEstopEnabled">
            <summary>
            Gets or sets the robot brake release output control mode
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robots.Cobra800.IsInverted">
            <summary>
            Gets a value indicating whether this instance is inverted.
            </summary>
            <value>
            	<c>true</c> if this instance is inverted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robots.Cobra800.ZMountingOffset">
            <summary>
            Gets the Z mounting offset.
            </summary>
            <value>The Z mounting offset.</value>
            <remarks>The inverted cobra robots have a Z axis that can extend below the mounting surface. As such, the inverted
            cobra initial position needs to be raised by the maximum extent of the Z axis
            </remarks>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Cobra800.OnOptionBitsUpdated">
            <summary>
            Called when the option bits for the robot have been updated.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.CoordinatedJointRobot">
            <summary>
            A coordinated-joint robot. Just a bunch of joints without any known
            kinematics, this type of robot is not capable of Cartesian motion.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.CoordinatedJointRobot.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.CoordinatedJointRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.CoordinatedJointRobot.Spin(System.Double)">
            <summary>
            Spin all the joints at the specified speed.
            </summary>
            <param name="speed">Speed (mm/sec or deg/sec) at which to move the joints.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.EnhancedLinearModuleRobot">
            <summary>
            Generic Cartesian robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.EnhancedLinearModuleRobot.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.EnhancedLinearModuleRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.EnhancedLinearModuleRobot.UpdateDescription">
            <summary>
            Forces the robot to update the description/name of the robot based on the current configuration of the robot.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.LinearModuleRobot">
            <summary>
            Generic Cartesian robot class.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robots.LinearModuleRobot.CachedPartNumbers">
            <summary>
            Gets the cached part numbers associated with each Axis
            </summary>
            <value>
            The axis part numbers.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robots.LinearModuleRobot.CachedMoterDirections">
            <summary>
            Gets the cached reverse calibration motor states.
            </summary>
            <value>
            The motor directions.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robots.LinearModuleRobot.CachedMoterPositionOffset">
            <summary>
            Gets the cached motor calibration position offsets
            </summary>
            <value>
            The offsets
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robots.LinearModuleRobot.CachedMoterStopToZero">
            <summary>
            Gets the cached motor stop to zero position offsets
            </summary>
            <value>
            The offsets
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robots.LinearModuleRobot.CachedModuleDescriptor">
            <summary>
            Gets or sets the cached module descriptor.
            </summary>
            <value>
            The cached module descriptor.
            </value>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.LinearModuleRobot.#ctor">
            <summary>
            Default constructor.
            </summary>e-
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.LinearModuleRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.LinearModuleRobot.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.LinearModuleRobot.UpdateDescription">
            <summary>
            Forces the robot to update the description/name of the robot based on the current configuration of the robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.LinearModuleRobot.UpdateState(System.Boolean)">
            <summary>
            Ensures the kinematic parameters are updated when communication is established.
            </summary>
            <param name="isAlive"></param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.LinearModuleRobot.UpdatePartNumbers">
            <summary>
            Reads the module part numbers from the hardware
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.LinearModuleRobot.UpdateModuleDescriptor">
            <summary>
            Updates the module descriptor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.LinearModuleRobot.InitializeCache">
            <summary>
            Initializes the cache part and module information
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.GenericDeltaRobot">
            <summary>
            Delta robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.GenericDeltaRobot.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.GenericDeltaRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.GenericEnhancedGantryRobot">
            <summary>
            Generic five or six axis gantry robot robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.GenericEnhancedGantryRobot.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.GenericEnhancedGantryRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.EnhancedXyztRobot">
            <summary>
            XYZ-Theta robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.EnhancedXyztRobot.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.EnhancedXyztRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.GenericScaraRobot">
            <summary>
            Generic SCARA robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.GenericScaraRobot.#ctor">
            <summary>
            Creates a generic (non-Adept) SCARA robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.GenericScaraRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.GenericSixAxisRobot">
            <summary>
            AdeptSix 300-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.GenericSixAxisRobot.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.GenericSixAxisRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Viper1300">
            <summary>
            AdeptViper 1300-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Viper1300.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Viper1300.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Viper650">
            <summary>
            Adept Viper 650-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Viper650.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Viper650.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.Viper850">
            <summary>
            AdeptViper 850-mm reach robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Viper850.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.Viper850.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.XyztRobot">
            <summary>
            Generic Cartesian robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.XyztRobot.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.XyztRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robots.XZStackerRobot">
            <summary>
            A XZ-Stacker robot, with an option for dual split axes.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.XZStackerRobot.#ctor">
            <summary>
            Default constructor, creating 3 joints "X", "Y", and "Z".
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.XZStackerRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robots.XZStackerRobot.GetRawJointOffset(System.Int32,System.Double)">
            <summary>
            Returns the offset from the base to the tip of the specified joint for a given joint position.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.SecondaryEncoder">
            <summary>
            A class representing secondary encoder in an Adept system.
            </summary>    
        </member>
        <member name="F:Ace.Adept.Server.Motion.SecondaryEncoder.MotorNodeName">
            <summary>
            The name of a motor node
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.SecondaryEncoder.#ctor">
            <summary>
            default Motor constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.SecondaryEncoder.GetGadgetNumberOfSecondaryEncoder(Ace.Communication.VPlusServer.Abstraction.Parameters.Firewire.ServoNode,System.Int32)">
            <summary>
            Get the gadget number of the secondary encoder
            The first time, the data will be accessed. Then, the dictionary will be used for efficiency.
            </summary>
            <param name="serNode">The servo node.</param>
            <param name="motorIndex">The motor number index 0 based.</param>
            <returns>gadget number</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.SecondaryEncoder.ToString">
            <summary>
            Returns a string description of this motor.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SecondaryEncoder.IsSecondary">
            <summary>
            Gets "true" if this motor is secondary
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.SecondaryEncoder.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.SecondaryEncoder.Initialize(Ace.Adept.Server.Motion.AdeptRobot,System.Int32)">
            <summary>
            Initialize this motor for use with the specified robot.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration">
            <summary>
            Safety configuration class for Teach Restrict
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.ReportStatusInHex">
            <summary>
            Report commissioning status in hex
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.LastReportedCommissioningStatus">
            <summary>
            Last reported commissioning status
            </summary>
            <remarks>Status reporting can be in Hex or Binary. Default is Hex.</remarks>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.MinResistorValue">
            <summary>
            Minimum resistor value
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.MaxResistorValue">
            <summary>
            Maximum resistor value
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsSupported">
            <summary>
            Is Teach Restrict safety option supported by this robot? 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsConfigured">
            <summary>
            Have the timing resistors been configured for this robot?
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsVerified">
            <summary>
            Have the timing resistors been verified for this robot?
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsPowerDisabledDueToOverspeed">
            <summary>
            Checks whether power was disabled due to an overspeed condition?
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.ConfiguredTimestamp">
            <summary>
            Gets the timestamp for the instant when the timing resistors were last configured
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsCommissioned">
            <summary>
            Is the robot commissioned for Teach Restrict?
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsOverspeed">
            <summary>
            Gets the overspeed state of the robot. True if overspeed is detected on either channel 
            (or both channels), false if overspeed is not detected.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsOverspeedOnBothChannels">
            <summary>
            Gets the overspeed state of the robot. True if overspeed is detected on both channels. 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.PowerStateInServo">
            <summary>
            Gets the power state of the robot as reported by servo. 
            True if robot high power is enabled, false if disabled. 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsStarted">
            <summary>
            Has the configuration process started?
            </summary>
            <remarks>Should be called only after the configuration process has been triggered</remarks>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsRunning">
            <summary>
            Is the configuration process running?
            </summary>
            <remarks>Should be called only after the configuration process has been triggered</remarks>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsDone">
            <summary>
            Is the configuration process complete?
            </summary>
            <remarks>Should be called only after the configuration process has been triggered</remarks>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.#ctor(Ace.Adept.Server.Motion.IAdeptRobot,System.Int32)">
            <summary>
            Create a new instance of <see cref="T:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration"/>
            </summary>
            <param name="robot">Adept Robot</param>
            <param name="opcode">Safety Opcode</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsAxisChannelDone(Ace.Adept.Server.Motion.TeachRestrictAxis,Ace.Adept.Server.Motion.TimingResistorChannel)">
            <summary>
            Is the axis channel configuration complete?
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <param name="channel">Timing Resistor channel</param>
            <returns>True if channel configuration is complete, false if not</returns>
            <remarks>Should be called only after the configuration process has been triggered</remarks>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetStatus(System.Int32)">
            <summary>
            Gets the commissioning status
            </summary>
            <param name="shiftRightOffset">Bit shift (right) offset</param>
            <returns>32-bit status</returns>
            <remarks>
            Opcode => 536, Arguments => 2,10 returns a 32 bit integer.
            Here is the representation of the bits:
            0000 | 0000 | 0000 | 0000 | 0000 | 0000 | 0000 | 0000 | 
            ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |  
            STT  | TRA5 | TRA4 | TRA3 | TRA2 | TRA1 | TRA0 | INI  |
            STT: Teach Restrict Commissioning Runtime Status = {0x0 => Not running, 0x8 =>
            Running, 0x7 => Done}
            TRA[0-based axis number]: Teach Restrict Axis Commissioning Status: {0x1 =>
            Channel A Done, 0x2 => Channel B Done, 0x3 => Channel A and B Done (axis
            commissioned)}
            INI: Teach Restrict Commissioning Initialization Status: {0x0 => Not started,
            0x1 => Started} 
            </remarks>
            <remarks>Should be called only after the configuration process has been triggered</remarks>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetTimingResistor(Ace.Adept.Server.Motion.TeachRestrictAxis,Ace.Adept.Server.Motion.TimingResistorChannel)">
            <summary>
            Gets the values of the timing resistor on the specified channel for the specified axis
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <param name="channel">Timing resistor channel</param>
            <returns>Timing resistor value for the specified channel. -1 is returned if value cannot be read.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.SetTimingResistor(Ace.Adept.Server.Motion.TeachRestrictAxis,Ace.Adept.Server.Motion.TimingResistorChannel,System.Int32)">
            <summary>
            Sets the timing resistor on the specified channel for the specified axis
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <param name="channel">Timing resistor channel</param>
            <param name="resistorValue">Resistor value</param>
            <returns>True if successful in setting resistor value, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.SetSimulatedMotorSpeed(Ace.Adept.Server.Motion.TeachRestrictAxis,Ace.Adept.Server.Motion.TimingResistorChannel,System.Int32)">
            <summary>
            Sets the simulated motor speed on the specified channel for the specified axis
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <param name="channel">Timing resistor channel</param>
            <param name="time">Time(in ms)</param>
            <returns>True if successful in setting time, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.TriggerMotorSpeedSimulation">
            <summary>
            Trigger motor speed simulation on the specified channel for the specified axis
            </summary>
            <returns>True if successful in triggering, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.ResetMotorSpeedSimulation">
            <summary>
            Reset motor speed simulation on the specified channel for the specified axis
            </summary>
            <returns>True if successful in resetting, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.SetConfiguredTime(Ace.Adept.Server.Motion.TeachRestrictAxis,System.Int32)">
            <summary>
            Sets the configured time (in ms) for the specified axis
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <param name="configuredTime">Configured time (in ms)</param>
            <returns>True if successful in setting configuration time, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetConfiguredTime(Ace.Adept.Server.Motion.TeachRestrictAxis)">
            <summary>
            Gets the configured time (in ms) for the specified axis
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <returns>Configured time (in ms)</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.SetConfigurationFlag(Ace.Adept.Server.Motion.TeachRestrictAxis,Ace.Adept.Server.Motion.TimingResistorChannel,System.Boolean)">
            <summary>
            Sets configuration flag associated with the specified axis and channel
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <param name="channel">Timing resistor channel</param>
            <param name="isConfigured">Is the channel configured?</param>
            <returns>True if successful in setting flag, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetConfigurationFlag(Ace.Adept.Server.Motion.TeachRestrictAxis,Ace.Adept.Server.Motion.TimingResistorChannel)">
            <summary>
            Gets the configuration flag associated with the specified axis and channel
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <param name="channel">Timing resistor channel</param>
            <returns>True if configured, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.SetVerificationFlag(Ace.Adept.Server.Motion.TeachRestrictAxis,Ace.Adept.Server.Motion.TimingResistorChannel,System.Boolean)">
            <summary>
            Sets the verification flag associated with the specified axis and channel
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <param name="channel">Timing resistor channel</param>
            <param name="isVerified">Is the channel verified?</param>
            <returns>True if successful in setting flag, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetVerificationFlag(Ace.Adept.Server.Motion.TeachRestrictAxis,Ace.Adept.Server.Motion.TimingResistorChannel)">
            <summary>
            Gets the verification flag associated with the specified axis and channel
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <param name="channel">Timing resistor channel</param>
            <returns>True if verified, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.ConfigureAxes(System.Int32[])">
            <summary>
            Configure Teach Restrict for each channel on each axis of the robot
            </summary>
            <param name="targetTimes">Target time for each axis. Number of array elements should 
            equal number of axes</param>
            <returns>True if configured successfully, false if failed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.SetTargetTime(Ace.Adept.Server.Motion.TeachRestrictAxis,System.Single)">
            <summary>
            Sets the teach restrict target time period (in ms) for the specified axis 
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <param name="timePeriod">Desired time period (in ms) for the specified axis</param>
            <returns>True if successful in setting target time, false if failed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetTargetTime(Ace.Adept.Server.Motion.TeachRestrictAxis)">
            <summary>
            Gets the teach restrict target time period (in ms) for the specified axis 
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <returns>Target time period (in ms) for the specified axis</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsHardOverspeedLimitAccessible">
            <summary>
            Get if hard overspeed limit is accessible
            Version must be greater than 2.3C20 or 2.4B8 or 2.5A2 to have use access
            </summary>
            <returns>True if hard overspeed limit is accessible</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsTeachRestrictSwitchAccessible">
            <summary>
            Get if teach restrict manual switch is accessible
            Version must be greater than 2.3C20 or 2.4B9 or 2.5A2 to have use access
            </summary>
            <returns>True if hard overspeed limit is accessible</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetHardOverspeedLimit(Ace.Adept.Server.Motion.TeachRestrictAxis)">
            <summary>
            Gets the teach restrict hard overspeed limit (int cts/ms) for the specified axis 
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <returns>Hard overspeed limit (in cts/ms) for the specified axis</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.SetHardOverspeedLimit(Ace.Adept.Server.Motion.TeachRestrictAxis,System.Single)">
            <summary>
            Sets the teach restrict hard overspeed limit (int cts/ms) for the specified axis 
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <param name="overSpeedLimit">Desired over speed limit (in cts/ms) for the specified axis</param>
            <returns>True if successful in setting overspeed limit, false if failed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.SetSelfVerification(System.Boolean)">
            <summary>
            Enables/disables self verification for Teach Restrict in Auto Mode
            </summary>
            <param name="enabled">Set to true to enable, false to disable</param>
            <returns>True if successfully set, false if failed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetMinimumOverspeedDistance(Ace.Adept.Server.Motion.TeachRestrictAxis)">
            <summary>
            Minimum distance (in degrees) that the joint needs to travel in order to detect
            an overspeed condition
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <returns>Minimum travel distance (in degrees) for joint</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetOverspeedDistance(Ace.Adept.Server.Motion.TeachRestrictAxis)">
            <summary>
            Distance (in degrees) that the joint will travel in order to detect
            an overspeed condition
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <returns>Minimum travel distance (in degrees) for joint</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetOverspeedDistance(Ace.Adept.Server.Motion.TeachRestrictAxis,System.Double@)">
            <summary>
            Distance (in degrees) that the joint will travel in order to detect
            an overspeed condition
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <param name="speed">Speed used to calculate distance required as a percent of joint full speed</param>
            <returns>Minimum travel distance (in degrees) for joint</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsEVPlusVersionGreaterThan(System.Int32)">
            <summary>
            Returns true if the eV+ version is greater than provided version
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsEVPlusVersionLessThan(System.Int32)">
            <summary>
            Returns true if the eV+ version is less than provided version
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetScaleFactor(Ace.Adept.Server.Motion.TeachRestrictAxis)">
            <summary>
            Get the scale factor (degrees/count)for the specified axis
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <returns>Scale factor (degrees/count) for the specified axis</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetCountsPerCycle(Ace.Adept.Server.Motion.TeachRestrictAxis)">
            <summary>
            Get counts per cycle for the specified axis
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <returns>Counts per cycle</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.CheckOverspeedState">
            <summary>
            Check the overspeed state of the robot
            </summary>
            <returns>If overspeed condition is detected on both channels => 0x3,
            If overspeed condition is detected on channel A => 0x1,
            If overspeed condition is detected on channel B => 0x2.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetParameterForConfiguredTime(Ace.Adept.Server.Motion.TeachRestrictAxis)">
            <summary>
            Gets the configured time parameter associated with the specified axis
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <returns>Safety generic parameter</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetParameterForConfiguredFlag(Ace.Adept.Server.Motion.TeachRestrictAxis,Ace.Adept.Server.Motion.TimingResistorChannel)">
            <summary>
            Gets the configuration flag parameter associated with the specified axis and channel
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <param name="channel">Timing resistor channel</param>
            <returns>Safety generic parameter</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.GetParameterForVerifiedFlag(Ace.Adept.Server.Motion.TeachRestrictAxis,Ace.Adept.Server.Motion.TimingResistorChannel)">
            <summary>
            Gets the verification flag parameter associated with the specified axis and channel
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <param name="channel">Timing resistor channel</param>
            <returns>Safety generic parameter</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TeachRestrictSafetyConfiguration.IsValidAxis(Ace.Adept.Server.Motion.TeachRestrictAxis)">
            <summary>
            Is the specified axis valid for this robot?
            </summary>
            <param name="axis">Teach Restrict axis</param>
            <returns>True if axis is valid, false if not</returns>
        </member>
        <member name="T:Ace.Adept.Server.Motion.En13849RobotSafetySettings">
            <summary>
            Encapsulates EN/ISO 13849 robot safety settings.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.En13849RobotSafetySettings.EStopConfiguration">
            <summary>
            Gets the ESTOP safety configuration
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.En13849RobotSafetySettings.TeachRestrictConfiguration">
            <summary>
            Gets the Teach Restrict safety configuration
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.En13849RobotSafetySettings.Opcode">
            <summary>
            Servo opcode associated with the Safety Standard
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.En13849RobotSafetySettings.Name">
            <summary>
            Name of the Safety Standard
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.En13849RobotSafetySettings.TeachRestrictPerformanceLevel">
            <summary>
            Teach Restrict Safety Standard Performance Level
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.En13849RobotSafetySettings.EStopPerformanceLevel">
            <summary>
            EStop Safety Standard Performance Level
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.En13849RobotSafetySettings.IsSupported">
            <summary>
            Is the safety standard supported?
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.En13849RobotSafetySettings.IsCommissioningJumperPluggedIn">
            <summary>
            Check whether the commissioning jumper is plugged
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.En13849RobotSafetySettings.IsConfigurable">
            <summary>
            Check whether the safety settings can be configured. 
            The settings can be unconfigurable if the commissioning jumper is not plugged in.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.En13849RobotSafetySettings.#ctor(Ace.Adept.Server.Motion.IAdeptRobot)">
            <summary>
            Creates a new instance of En13849RobotSafetySettings
            </summary>
            <param name="robot">Adept Robot</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.En13849RobotSafetySettings.WaitForWriteReadRequestTobeDone(Ace.Adept.Server.Motion.RWRequestType,System.Double)">
            <summary>
            Wait for a Safety Params request to finish (timeout in ms)
            </summary>
            <param name="type"></param>
            <param name="timeout_ms"></param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.En13849RobotSafetySettings.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.En13849RobotSafetySettings.Initialize">
            <summary>
            Initialize safety settings
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.En13849RobotSafetySettings.ReadFromNvram">
            <summary>
            Read contents of NVRAM and transfer them to local cache
            </summary>
            <returns>True if read is successful, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.En13849RobotSafetySettings.WriteToNvram">
            <summary>
            Write contents of local cache to NVRAM 
            </summary>
            <returns>True if write is successful, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.En13849RobotSafetySettings.UpdateNvramChecksum">
            <summary>
            Update checksum for NVRAM contents
            </summary>
            <returns>True if update is successful, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.En13849RobotSafetySettings.InitializeEstopDelayMonitor">
            <summary>
            Initializes the EStop delay monitor.
            </summary>
            <returns>True if initialization is successful, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.En13849RobotSafetySettings.UpdateRegisterCache(Ace.Adept.Server.Motion.SafetyChip)">
            <summary>
            Read the value of a given chip on the i2c
            </summary>
            <param name="chip"></param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.En13849RobotSafetySettings.UpdateRegisterCache">
            <summary>
            Update register cache for safety chips
            </summary>
            <returns>True if update is successful, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.En13849RobotSafetySettings.SendCommand(System.Byte[])">
            <summary>
            Send Command to Servo
            </summary>
            <param name="toDevice">Command arguments</param>
            <returns>Bytes returned by the specified command</returns>
        </member>
        <member name="T:Ace.Adept.Server.Motion.EStopSafetyConfiguration">
            <summary>
            Safety configuration class for ESTOP hardware delay
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.EStopSafetyConfiguration.SafetySettings">
            <summary>
            Gets the safety settings associated with the robot
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.EStopSafetyConfiguration.NominalHardwareDelay">
            <summary>
            Nominal value for the delay (in ms) across safety circuit. The observed delay should be within 
            a specified range of the default delay, if this value has not be overridden by
            the user after the robot was commissioned at the factory.
            </summary>
            <remarks>The nominal delay might be very different from the observed delay based
            on the resistor value that was set during commissioning.</remarks>
        </member>
        <member name="P:Ace.Adept.Server.Motion.EStopSafetyConfiguration.NominalResolution">
            <summary>
            Nominal resolution is the amount of additional delay achieved by incrementing
            the resistor value by 1.
            </summary>
            <remarks>Empirical data shows that this resolution value is around 75/32 = 2.34375.</remarks>
        </member>
        <member name="P:Ace.Adept.Server.Motion.EStopSafetyConfiguration.AcceptableHardwareDelayDeviation">
            <summary>
            The acceptable delay deviation (in ms) is used to determine the acceptable range for
            the observed delay. 
            </summary>
            <remarks>This value usually depends on the pots and the millisecond
            resolution that can be achieved. The acceptable range for the observed delay
            is between (DefaultHardwareDelay - AcceptableHardwareDelayDeviation) and
            (DefaultHardwareDelay + AcceptableHardwareDelayDeviation).</remarks>
        </member>
        <member name="P:Ace.Adept.Server.Motion.EStopSafetyConfiguration.MinResistorValue">
            <summary>
            Minimum programmable resistor value
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.EStopSafetyConfiguration.MaxResistorValue">
            <summary>
            Maximum programmable resistor value
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.EStopSafetyConfiguration.MaximumObservableDelay">
            <summary>
            Maximum observable delay (in ms) over the safety circuit
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.EStopSafetyConfiguration.ConfiguredChannelDelay">
            <summary>
            Gets or sets the delay configured for each channel
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.EStopSafetyConfiguration.ConfiguredTimestamp">
            <summary>
            Gets the time stamp for the instant when the ESTOP channel delays were last configured
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.EStopSafetyConfiguration.IsConfigured">
            <summary>
            Have the ESTOP safety channel delays been configured?
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.EStopSafetyConfiguration.IsVerified">
            <summary>
            Have the ESTOP safety channel delays been verified?
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.EStopSafetyConfiguration.IsCommissioned">
            <summary>
            Is the robot commissioned for ESTOP safety?
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.EStopSafetyConfiguration.IsSupported">
            <summary>
            Is ESTOP safety option supported by this robot? 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.EStopSafetyConfiguration.IsPowerDisabledByHardware">
            <summary>
            Checks whether power was disabled by hardware
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.#ctor(Ace.Adept.Server.Motion.IAdeptRobot,System.Int32)">
            <summary>
            Create a new instance of EStopSafetyConfiguration
            </summary>
            <param name="robot">Adept Robot</param>
            <param name="opcode">Safety Opcode</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.GetChannelDelayResistorValue(Ace.Adept.Server.Motion.EStopChannel)">
            <summary>
            Gets the delay resistor value across a channel on the ESTOP safety circuit
            </summary>
            <param name="channel">Channel A or Channel B</param>
            <returns>Sum of the values of both resistors on a given channel. 
            -1 is returned if the system is unable to retrieve the delay resistor value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.SetChannelDelayResistorValue(Ace.Adept.Server.Motion.EStopChannel,System.Int32)">
            <summary>
            Sets the delay resistor value across a channel on the ESTOP safety circuit
            </summary>
            <param name="channel">Channel A or Channel B</param>
            <param name="resistorValue">Desired sum of the values across both resistors on a given channel</param>
            <returns>true if resistor value was successfully modified, false if unable to set resistor value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.TriggerDelayCircuit">
            <summary>
            Trigger the EStop Delay Circuit
            </summary>
            <returns>true if successfully triggered delay circuit, false if failed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.GetObservedChannelDelay(Ace.Adept.Server.Motion.EStopChannel)">
            <summary>
            Gets the observed hardware delay (in ms) across the specified ESTOP channel
            of the ESTOP safety circuit
            </summary>
            <param name="channel">Channel A or Channel B</param>
            <returns>Observed hardware delay across the specified channel. 
            -1 is returned if the delay cannot be read</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.ResetInhibitBit">
            <summary>
            Reset the inhibit safety relay, to allow the robot to enable power
            after commissioning the robot
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.GetObservedChannelDelay">
            <summary>
            Gets the observed hardware delays (in ms) across both channels of the ESTOP 
            safety circuit
            </summary>
            <returns>Observed hardware delay across both ESTOP channels</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.SaveConfiguration(System.Boolean,System.Int32,System.DateTime)">
            <summary>
            Save delays and configuration time to non-volatile memory
            </summary>
            <param name="isConfigured">Were both channels configured successfully?</param>
            <param name="channelDelay">Configured delay across both channels (in ms)</param>
            <param name="timestamp">Configuration timestamp (in UTC)</param>
            <returns>True if save was successful, false if failed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.SaveVerification(System.Boolean)">
            <summary>
            Save verification flags and verification time to non-volatile memory
            </summary>
            <param name="isVerified">Verification flag for both channels. True if verified, false if not</param>
            <returns>True if save was successful, false if failed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.GetConfigurationFlag(Ace.Adept.Server.Motion.EStopChannel)">
            <summary>
            Gets the configuration flag associated with the specified channel
            </summary>
            <param name="channel">ESTOP channel</param>
            <returns>True if configured, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.SetConfigurationFlag(Ace.Adept.Server.Motion.EStopChannel,System.Boolean)">
            <summary>
            Set configuration flag for the specified channel
            </summary>
            <param name="channel">ESTOP channel</param>
            <param name="isConfigured">Is the channel configured?</param>
            <returns>True if successful in setting flag, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.GetVerificationFlag(Ace.Adept.Server.Motion.EStopChannel)">
            <summary>
            Gets the verification flag associated with the specified channel
            </summary>
            <param name="channel">ESTOP channel</param>
            <returns>True if verified, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.SetVerificationFlag(Ace.Adept.Server.Motion.EStopChannel,System.Boolean)">
            <summary>
            Set verification flag for the specified channel
            </summary>
            <param name="channel">ESTOP channel</param>
            <param name="isVerified">Is the channel verified?</param>
            <returns>True if successful in setting flag, false if not</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.GetParameterForConfiguredFlag(Ace.Adept.Server.Motion.EStopChannel)">
            <summary>
            Gets the configured flag associated with the specified channel
            </summary>
            <param name="channel">ESTOP channel</param>
            <returns>Safety generic parameter associated with the configured flag of the specified channel</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.EStopSafetyConfiguration.GetParameterForVerifiedFlag(Ace.Adept.Server.Motion.EStopChannel)">
            <summary>
            Gets the verified flag associated with the specified channel
            </summary>
            <param name="channel">ESTOP channel</param>
            <returns>Safety generic parameter associated with the verified flag of the specified channel</returns>
        </member>
        <member name="T:Ace.Adept.Server.Motion.RobotSafetyConfigurationBase">
            <summary>
            Robot safety configuration class
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Motion.RobotSafetyConfigurationBase.opcode">
            <summary>
            Opcode used for the safety configuration
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Motion.RobotSafetyConfigurationBase.robot">
            <summary>
            Adept Robot
            </summary>		
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotSafetyConfigurationBase.IsSupported">
            <summary>
            Is safety option supported by this robot? 
            </summary>
            <remarks>Must be overridden by derived class</remarks>
        </member>
        <member name="M:Ace.Adept.Server.Motion.RobotSafetyConfigurationBase.#ctor(Ace.Adept.Server.Motion.IAdeptRobot,System.Int32)">
            <summary>
            Constructor for abstract class RobotSafetyConfigurationBase
            </summary>
            <param name="robot">Robot</param>
            <param name="safetyOpcode">SafetyOpcode</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.RobotSafetyConfigurationBase.SetParameterInt32(Ace.Adept.Server.Motion.SafetyGenericParameter,System.Int32)">
            <summary>
            Sets safety parameter to a 32-bit integer value
            </summary>
            <param name="parameter">Safety parameter</param>
            <param name="value">Desired 32-bit integer value of the parameter</param>
            <returns>True if successfully set, false if failed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.RobotSafetyConfigurationBase.SetParameterUInt32(Ace.Adept.Server.Motion.SafetyGenericParameter,System.Int64)">
            <summary>
            Sets safety parameter to an 32-bit unsigned integer value
            </summary>
            <param name="parameter">Safety parameter</param>
            <param name="value">Desired 32-bit unsigned integer value of the parameter</param>
            <returns>True if successfully set, false if failed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.RobotSafetyConfigurationBase.GetParameterInt32(Ace.Adept.Server.Motion.SafetyGenericParameter)">
            <summary>
            Gets the 32-bit integer value of the parameter
            </summary>
            <param name="parameter">Safety parameter</param>
            <returns>32-bit integer value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.RobotSafetyConfigurationBase.GetParameterUInt32(Ace.Adept.Server.Motion.SafetyGenericParameter)">
            <summary>
            Gets the 32-bit unsigned integer value of the parameter
            </summary>
            <param name="parameter">Safety parameter</param>
            <returns>32-bit unsigned integer value</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.RobotSafetyConfigurationBase.SetGenericParameter(Ace.Adept.Server.Motion.SafetyGenericParameter,System.Byte[])">
            <summary>
            Sets safety parameter to specified value using the generic safety interface in Servo
            </summary>
            <param name="parameter">Safety parameter</param>
            <param name="value">Desired value of the parameter in bytes. Use <see cref="T:Ace.Communication.Util.BitConverterInverter"/>
            for conversion to bytes to ensure correct endianness</param>
            <returns>True if successfully set, false if failed</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.RobotSafetyConfigurationBase.GetGenericParameter(Ace.Adept.Server.Motion.SafetyGenericParameter)">
            <summary>
            Gets the current value of the specified parameter using the generic safety interface in servo
            </summary>
            <param name="parameter">Safety parameter</param>
            <returns>Current value of the parameter in bytes. Use <see cref="T:Ace.Communication.Util.BitConverterInverter"/>
            for correct conversion from bytes</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.RobotSafetyConfigurationBase.SendCommand(System.Byte[])">
            <summary>
            Send Command to Servo
            </summary>
            <param name="toDevice">Command arguments</param>
            <returns>Bytes returned by the specified command</returns>
        </member>
        <member name="T:Ace.Adept.Server.Motion.CartesianKinematicParameters">
            <summary>
            Kinematic parameters for a Cartesian robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.CartesianKinematicParameters.ToolFlangeOffset">
            <summary>
            The offset from the base of the robot to the tool flange when the Z axis is at its zero position.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.AbstractCartesianRobot">
            <summary>
            A base class for Cartesian robots.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractCartesianRobot.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractCartesianRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractCartesianRobot.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractCartesianRobot.KinematicParameters">
            <summary>
            Gets or sets the robot kinematic parameters.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractCartesianRobot.UpdateState(System.Boolean)">
            <summary>
            Ensures the kinematic parameters are updated when communication is established.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractCartesianRobot.GetRawJointOffset(System.Int32,System.Double)">
            <summary>
            Returns the offset from the base to the tip of the given joint at the given position.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.QuattroKinematicParameters">
            <summary>
            Quattro robot kinematics class.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.ToolFlangeOffset">
            <summary>
            Gets or sets the distance from the tip plane to the tool flange surface, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.PlatformToThetaDriveRatio">
            <summary>
            Gets or sets the drive ratio from platform rotation to theta rotation.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.PlatformType">
            <summary>
            Gets the type of the platform based on the platform to theta drive ratio.
            </summary>
            <value>The type of the platform.</value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.MaximumPlatformRotation">
            <summary>
            Gets or sets the maximum platform rotation, in degrees.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.BaseOffsetX">
            <summary>
            Gets or sets the base offset in X direction, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.BaseOffsetY">
            <summary>
            Gets or sets the base offset in Y direction, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.BaseOffsetZ">
            <summary>
            Gets or sets the base offset in Z direction, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.BaseOffsetTheta">
            <summary>
            Gets or sets the base offset in Theta direction, in deg.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.A6">
            <summary>
            Gets or sets the distance between attachment point of the 
            connecting rod and the line connecting the attachment centers 
            on the moving platform.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.A7">
            <summary>
            Gets or sets the distance along X of the leg 1 attachment center on the moving 
            platform to the pivot of the tool support arm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.A8">
            <summary>
            Gets or sets the distance from the tool Z axis to the pivoting tool support arm. 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.MountToShoulderOffset">
            <summary>
            Gets or sets the vertical distance from the mounting surface to the shoulder plane.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.InnerLinkLength">
            <summary>
            Gets or sets the length of the inner link, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.OuterLinkLength">
            <summary>
            Gets or sets the length of the outer link, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.BaseRadius">
            <summary>
            Gets or sets the distance from the robot centerline to the 'shoulder' joint axis, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.PlatformSideLength">
            <summary>
            Gets or sets the length of the "fixed" platform sides connecting legs 1-2 and 3-4, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.QuattroKinematicParameters.PlatformArmLength">
            <summary>
            Gets or sets the length of the "moving" platform arms connecting legs 2-3 and 4-1, in mm.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.AbstractQuattroRobot">
            <summary>
            Quattro robot class.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Motion.AbstractQuattroRobot.BrakeReleaseBit">
            <summary>
            The bit defining the brake release 
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Motion.AbstractQuattroRobot.initializeZHeight">
            <summary>
            Flag indicating if the Z value should be initialized. This happens only on initial creation
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractQuattroRobot.IsOlderController(Ace.Adept.Server.Controls.IAdeptController)">
            <summary>
            Determines whether the controller is an older revision.
            </summary>
            <param name="ctrlr">The controller.</param>
            <returns>
            	<c>true</c> if the controller is running an older version of V+; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractQuattroRobot.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractQuattroRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractQuattroRobot.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractQuattroRobot.EnableBrakeReleaseInput">
            <summary>
            Gets or sets the robot brake release output control mode
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractQuattroRobot.ZMountingOffset">
            <summary>
            Gets the Z mounting offset.
            </summary>
            <value>The Z mounting offset.</value>
            <remarks>The Quattro robots have their Z 0 position in line with the mounting surface. As such, the Quattro
            initial position needs to be raised by the maximum extent of the Z axis
            </remarks>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractQuattroRobot.KinematicParameters">
            <summary>
            Gets or sets the robot's kinematic parameters.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractQuattroRobot.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractQuattroRobot.UpdateState(System.Boolean)">
            <summary>
            Ensures the kinematic parameters are read from the robot when communication is established.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractQuattroRobot.JointOffsets">
            <summary>
            Gets an array of joint positions for this robot.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.ScaraKinematicParameters">
            <summary>
            SCARA robot kinematic parameters.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.ScaraKinematicParameters.ToolFlangeOffset">
            <summary>
            Gets or sets the distance from the robot base to the tool flange surface, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.ScaraKinematicParameters.InnerLinkLength">
            <summary>
            Gets or sets the length of the inner link, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.ScaraKinematicParameters.OuterLinkLength">
            <summary>
            Gets or sets the length of the outer link, in mm.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.AbstractScaraRobot">
            <summary>
            A base class for SCARA robots.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Motion.AbstractScaraRobot.BrakeReleaseBit">
            <summary>
            The bit defining the brake release 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractScaraRobot.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractScaraRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractScaraRobot.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractScaraRobot.EnableBrakeReleaseInput">
            <summary>
            Gets or sets the robot brake release output control mode
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractScaraRobot.GetMoveConfiguration(System.Double[])">
            <summary>
            Return the move configuration associated with the specified joint position.
            For a SCARA robot, sets the Righty-Lefty configuration.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractScaraRobot.ZMountingOffset">
            <summary>
            Gets the Z mounting offset.
            </summary>
            <value>The Z mounting offset.</value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractScaraRobot.KinematicParameters">
            <summary>
            Gets or sets the kinematic parameters for this robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractScaraRobot.OnOptionBitsUpdated">
            <summary>
            Called when the option bits for the robot have been updated.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractScaraRobot.UpdateState(System.Boolean)">
            <summary>
            Updates the kinematic parameters after connecting to a robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractScaraRobot.GetRawJointOffset(System.Int32,System.Double)">
            <summary>
            Returns the offset from the base to the tip of the given joint at the given position.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.SixAxisKinematicParameters">
            <summary>
            Six axis kinematic parameters.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SixAxisKinematicParameters.ShoulderHeight">
            <summary>
            Gets or sets the vertical distance from the base to the horizontal shoulder axis, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SixAxisKinematicParameters.ToolFlangeOffset">
            <summary>
            Gets or sets the distance from the wrist center to the tool flange surface, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SixAxisKinematicParameters.InnerLinkLength">
            <summary>
            Gets or sets the length of the inner link, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SixAxisKinematicParameters.OuterLinkLength">
            <summary>
            Gets or sets the length of the outer link, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SixAxisKinematicParameters.ShoulderRadialOffset">
            <summary>
            Gets or sets the shoulder radial offset, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SixAxisKinematicParameters.ElbowRadialOffset">
            <summary>
            Gets or sets the elbow radial offset, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SixAxisKinematicParameters.WristLateralOffset">
            <summary>
            Gets or sets the wrist lateral offset, in mm.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.AbstractSixAxisRobot">
            <summary>
            A base class for six-axis robots.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractSixAxisRobot.#ctor">
            <summary>
            Creates a six-joint robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractSixAxisRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractSixAxisRobot.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractSixAxisRobot.GetMoveConfiguration(System.Double[])">
            <summary>
            Return the move configuration associated with the specified joint position.
            For a six-axis robot, sets the Righty-Lefty, Flip-Noflip, and Above-Below flags.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractSixAxisRobot.KinematicParameters">
            <summary>
            Sets the robot's kinematic parameters.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractSixAxisRobot.Align(System.Int32,System.Int32,System.Int32)">
            <summary>
            Perform an ALIGN motion command.
            </summary>
            <param name="speed">The speed for the motion.</param>
            <param name="accel">The acceleration for the motion.</param>
            <param name="decel">The deceleration for the motion.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractSixAxisRobot.UpdateState(System.Boolean)">
            <summary>
            During state updates, reads the kinematic parameters.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractSixAxisRobot.GetRawJointOffset(System.Int32,System.Double)">
            <summary>
            Returns the offset from the base to the tip of the specified joint, with the
            joint at the specified position.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.DeltaKinematicParameters">
            <summary>
            Delta robot kinematics class.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.DeltaKinematicParameters.ToolFlangeOffset">
            <summary>
            Gets or sets the distance from the tip plane to the tool flange surface, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.DeltaKinematicParameters.InnerLinkLength">
            <summary>
            Gets or sets the length of the inner link, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.DeltaKinematicParameters.OuterLinkLength">
            <summary>
            Gets or sets the length of the outer link, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.DeltaKinematicParameters.BaseRadius">
            <summary>
            Gets or sets the distance from the robot centerline to the 'shoulder' joint axis, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.DeltaKinematicParameters.TipRadius">
            <summary>
            Gets or sets the distance from the robot centerline to the 'wrist' joint axis, in mm.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.AbstractDeltaRobot">
            <summary>
            Delta robot class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractDeltaRobot.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractDeltaRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractDeltaRobot.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractDeltaRobot.KinematicParameters">
            <summary>
            Gets or sets the robot's kinematic parameters.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractDeltaRobot.UpdateState(System.Boolean)">
            <summary>
            Ensures the kinematic parameters are read from the robot when communication is established.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractDeltaRobot.ForwardKinematics(System.Int32,System.Double[])">
            <summary>
            Returns the offset from the robot base to the end of the specified joint. 
            By default, this assumes a serial mechanism.
            </summary>
            <param name="jointNumber">0-based joint number.</param>
            <param name="jointPos">Joint position array</param>
            <returns>Position of the end of the given joint.</returns>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractDeltaRobot.JointOffsets">
            <summary>
            Gets an array of joint positions for this robot.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.GantryKinematicParameters">
            <summary>
            Kinematic parameters for a Cartesian gantry robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.GantryKinematicParameters.ToolFlangeOffset">
            <summary>
            Gets or sets the distance from the robot base to the tool flange surface, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.GantryKinematicParameters.SkewAngle">
            <summary>
            Gets or sets the skew angle between the Z and pitch axes, in degrees.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.AbstractGantryRobot">
            <summary>
            A base class for five or six axis gantry robots.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractGantryRobot.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractGantryRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractGantryRobot.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractGantryRobot.KinematicParameters">
            <summary>
            Gets or sets the kinematic parameters.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractGantryRobot.UpdateState(System.Boolean)">
            <summary>
            Ensures the kinematic parameters are updated when robot communication is established.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractGantryRobot.GetRawJointOffset(System.Int32,System.Double)">
            <summary>
            Returns the offset from the base to the tip of the specified joint, with the
            joint at the specified position. This currently does not handle skew other than -90.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.AbstractMotorCalibration">
            <summary>
            Motor calibration data and teaching logic. 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AbstractMotorCalibration.Motor">
            <summary>
            Gets or sets the motor associated with this calibrator. The motor must be set
            before any operations with this calibrator may be used.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractMotorCalibration.TeachCalibration">
            <summary>
            Performs calibration teaching. By default, throws an exception reporting teaching is
            not implemented. Subclasses should override this method to provide functionality.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AbstractMotorCalibration.AdjustCalibration(System.Int32)">
            <summary>
            Adjust calibration by the specified amount. Also adjusts current motor position, so that
            the current position reflects the result of the calibration change.
            </summary>
            <param name="oldToNewCounts">Difference between the old positions and the new positions after adjustment, in counts.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.AdeptRobot">
            <summary>
            Adept robot base class.
            </summary>	
        </member>
        <member name="F:Ace.Adept.Server.Motion.AdeptRobot.RobotNodeName">
            <summary>
            The name of a robot node
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Motion.AdeptRobot.availableOpcodes">
            <summary>
            A dictionary of available opcodes
            </summary>
        </member>
        <member name="E:Ace.Adept.Server.Motion.AdeptRobot.StateChanged">
            <summary>
            Fired when communication with the controller is enabled or disabled.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.#ctor">
            <summary>
            Creates an Adept-controlled robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.AddDiagnosticData(Ace.Core.Util.LogLevel,Ace.Core.Server.Diagnostic.IDiagnosticData)">
            <summary>
            Adds diagnostic information about this robot to the specified diagnostic data aggregator.
            </summary>
            <returns>The same collection passed in, appended with diagnostic information.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.Initialize(Ace.Adept.Server.Motion.Joint[])">
            <summary>
            Must be called within the constructor of an inherited class to initialize the joints.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.Initialize">
            <summary>
            Initializes this object after system startup.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.Enabled">
            <summary>
            Gets or sets a flag indicating whether this robot is operational.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.RobotNumber">
            <summary>
            Gets or sets the robot number. The first robot in the system is robot 1.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.Joints">
            <summary>
            Gets the list of enabled robot joints. Note that Joint 1 of the robot is array element 0.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.Motors">
            <summary>
            Gets the list of robot motors. Note that Motor 1 of the robot is array element 0.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.SecondaryEncoders">
            <summary>
            Gets the list of robot secondary encoders. 
            </summary>		
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.ModuleNumber">
            <summary>
            Gets the module number (as returned by V+ function ID(5,10+robot number)).
            </summary>
            <value>The module number.</value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.ModelNumber">
            <summary>
            Gets or sets the robot model number (as returned by V+ function ID(1,8)).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.SerialNumber">
            <summary>
            Gets the robot serial number (as returned by V+ function ID(2,8)).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.DefaultHandOpenSignal">
            <summary>
            Gets or sets the default gripper hand signal.
            </summary>
            <value>The default open signal.</value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.DefaultHandCloseSignal">
            <summary>
            Gets or sets the default hand close signal.
            </summary>
            <value>The default hand close signal.</value>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetModuleTypeForMotor(System.Int32)">
            <summary>
            Get the module type for the given motor number. This is only relevant for SmartAmp
            and MB-10 style motors.
            </summary>
            <param name="motorNumber">0-based motor number.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.SetMotorIndependentMask(System.Int32,System.Int32)">
            <summary>
            Set the specified motors to run independently of the trajectory generator
            or as part of the robot. Note that this function turns off automatic control (detaches)
            the robot. If you wish to control the robot setting the motor independent mask
            you must set AutomaticControlActive to true.
            </summary>
            <param name="motorMask">Bit mask with bit set for each motor to modify (bit 0 for motor 1, etc.).</param>
            <param name="stateMask">Bit mask with bit set for each motor to make independent and clear to make dependent.</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.ReadyPosition">
            <summary>
            The READY position, as an array of joint angles. READY is a safe location for the robot to move.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.MotionSpecs">
            <summary>
            Gets Cartesian motion specifications.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.TimingSpecs">
            <summary>
            Gets power sequencing and other timing specifications.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.En13849RobotSafetySettings">
            <summary>
            Gets the EN/ISO 13849 robot safety settings.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.OptionBits">
            <summary>
            Robot option bits. Same value as returned by ID(8, 8).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.RscOptionBits">
            <summary>
            Robot signature card (RSC) option bits. These are not user-editable.
            Same value as returned by ID(11, 8).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.ControlConfiguration">
            <summary>
            Gets the control configuration for the robot.
            </summary>
            <value>
            The control configuration.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.PowerState">
            <summary>
            Current robot power state.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.Parent">
            <summary>
            The parent of this object, or null if it is relative to the world origin. The parent
            is the object to which this object is attached--if the parent moves, so do all of its
            children.
            </summary>
            <value></value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.OffsetFromParent">
            <summary>
            The offset from the tip of the parent object (or the world origin if the
            parent is null) to the base of this object.
            </summary>
            <value></value>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.ClearErrors">
            <summary>
            Clears any pending errors for the robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.KinematicParameters">
            <summary>
            Gets or sets the kinematic parameters for this robot. By default, returns "null",
            indicating no kinematic parameters.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.DataCollectionConfiguration">
            <summary>
            Gets or sets the configuration for data collection. This configuration is sent to the servos at
            the time collection is enabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.MaximumDataCollectionItemCount">
            <summary>
            Gets the maximum number of data items that can be collected at one time.
            </summary>
            <value>The maximum data collection item count.</value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.DataCollectionEnabled">
            <summary>
            Gets or sets a flag indicating whether data collection is enabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.SupportsCircularDataCollection">
            <summary>
            Gets a value indicating whether this robot supports a circular data collection buffer.
            </summary>
            <value>
            <c>true</c> if it supports a circular data collection buffer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.ReadDataCollection(Ace.Adept.Server.Motion.DataCollectionItem,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Read data from the data collection buffer.
            </summary>
            <param name="item">The data item to return.</param>
            <param name="wait">true to wait for the collection buffer to fill before returning data; false to stop collection immediately.</param>
            <param name="offset">Offset into the collected data for the first item (0 for first item).</param>
            <param name="count">Amount of data to collect, or 0 for maximum available.</param>
            <returns>The requested data, if available. If less than "count" items are available, the
            return array length may be shorter.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.SetDigitalIO(System.Int32[])">
            <summary>
            Set the value of a robot's digital output.
            </summary>
            <param name="signals">Signal number, typically in the 3000 numeric range.</param>
            <remarks>Only 33 signals can be set in a single method call.</remarks>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetDigitalIO(System.Int32)">
            <summary>
            Get the value of a robot's digital input or output.
            </summary>
            <param name="signalNumber">Signal number, typically in the 3000 numeric range.</param>
            <returns>Current value.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetReferences">
            <summary>
            Returns all IReference objects referred to by this object. This will ensure that 
            the references are properly handled during initialization, deletion, etc. You must
            override this method in objects that contain LinkedReference or EmbeddedReference objects.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.UpdateState(System.Boolean)">
            <summary>
            Called when the robot communication is enabled or disabled.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.ConfigureJoints(System.Int32)">
            <summary>
            Configures the joints.
            </summary>
            <param name="axisMask">The axis mask.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.NodeStateChanged(System.Object,Ace.Core.Server.Event.BooleanStateChangeEventArgs)">
            <summary>
            Nodes the state changed.
            </summary>
            <param name="src">The SRC.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.BooleanStateChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.Controller">
            <summary>
            Gets or sets the Adept controller used for the robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.RobotGadget">
            <summary>
            Gets the robot gadget that is associated with the robot node
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.IsAlive">
            <summary>
            Gets a flag indicating true if robot communication is operable.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.IsAdept">
            <summary>
            Gets "true" when used with an Adept robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.SecurityId">
            <summary>
            Gets the security ID of the robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.InRange(Ace.Core.Server.Transform3D)">
            <summary>
            Returns a bit mask indicating whether the specified location is in
            the range of robot motion. See the V+ INRANGE function for more details.
            </summary>
            <returns>A bit mask indicating the following (bit numbers start at 0):
            <list type="bullet">
            <item>Bits 0-11: If bit i is set, joint (i+1) is limiting motion.</item>
            <item>Bit 12: Collision detected</item>
            <item>Bit 13: Location is too close</item>
            <item>Bit 14: Location is too far</item>
            <item>Bit 15: Motor (rather than joint) is limiting.</item>
            </list></returns>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.JointCount">
            <summary>
            Gets the joint count for this robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.MotorCount">
            <summary>
            Gets the motor count for this robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.SecondaryEncoderCount">
            <summary>
            Gets the total secondary encoder count for this robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.JointNames">
            <summary>
            Gets the complete list of robot joint names, including both enabled and disabled joints.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.EnabledAxisMask">
            <summary>
            Gets a bit mask indicating which joints are enabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.IsCalibrated">
            <summary>
            Gets or sets a flag indicating whether the robot is calibrated. Setting this value to true will
            result in an exception; the robot must be calibrated by issuing the Calibrate command.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.AutomaticControlActive">
            <summary>
            Gets or sets a flag indicating whether manual control is active.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.JointPosition">
            <summary>
            Gets the joint positions for this robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.ReadLatchBuffer">
            <summary>
            Latched joint position buffer (oldest first). Length of the buffer is zero if no data is present.
            buffer[0][0] through buffer[0][JointCount-1] contains the oldest latched position.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetRawJointOffset(System.Int32,System.Double)">
            <summary>
            Subclasses should override this to provide the offset from the previous joint
            to the tip of the specified joint, given the specified joint position.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetJointOffset(System.Int32,System.Double)">
            <summary>
            Return the offset from the base to the tip of the specified joint.
            </summary>
            <param name="jnt">0-based joint number.</param>
            <param name="pos">Position of the joint.</param>
            <returns>Transform from the base to the tip of the given joint.</returns>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.JointOffsets">
            <summary>
            Return an array of transforms, representing the offset of each joint from
            the previous (in a serial joint robot).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.EndEffectorTransform">
            <summary>
            Gets or sets the tool offset for this robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.SelectedEndEffector">
            <summary>
            Gets or sets the end-effector currently in use by the robot. The offset to the 
            tip of the tool will be used to compute straight-line tool-tip trajectories.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.CollisionProgram">
            <summary>
            Gets or sets the program that is called when a collision is detected
            </summary>
            <value>
            The collision program.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.EndEffectorReleaseSignal">
            <summary>
            Gets or sets the end-effector open signal number.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.EndEffectorGripSignal">
            <summary>
            Gets or sets the end-effector close signal number.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.EndEffectorClosed">
            <summary>
            Gets or sets a flag indicating whether the IO associated with the default
            gripper are in the closed state.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.Calibrate">
            <summary>
            Calibrate the robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.CalibrateMotors(System.Int32)">
            <summary>
            Calibrate the specified motors.
            </summary>
            <param name="motorMask">Bit mask of motors to calibrate, or -1 to calibrate all motors. Bit 0 is motor 1, etc.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.PowerSequence(System.Int32,System.Boolean)">
            <summary>
            Perform power sequencing for the motors specified. Normally, you should use the Power property. This is only
            used when the motor is being independently operated. The motor is left in independent control mode.
            </summary>
            <param name="motorMask">Bit mask of motors to control, or -1 to power-sequence all motors. Bit 0 is motor 1, etc.</param>
            <param name="enable">Desired power state of specified motors.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.WaitMoveDone">
            <summary>
            Wait for the current move to finish.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.MotorToJoint(System.Double[])">
            <summary>
            Convert from motor positions to joint positions.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.JointToMotor(System.Double[])">
            <summary>
            Convert from joint positions to motor positions.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.GoalPosition">
            <summary>
            Return the current goal joint position.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.Halt">
            <summary>
            Halt robot motion.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetMoveConfiguration(System.Double[])">
            <summary>
            Return the move configuration associated with the specified joint position.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.OffsetToTip">
            <summary>
            Gets the offset from the base of the robot to its tip, the forward kinematics.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.WorldLocationWithTool">
            <summary>
            Gets the world location of the robot, including the TOOL offset.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetPosition(Ace.Core.Server.Transform3D@,Ace.Core.Server.Transform3D@,Ace.Core.Server.Transform3D@,System.Double[]@)">
            <summary>
            Gets the current position of the robot
            </summary>
            <param name="worldPosition">The world position of the robot with TOOL applied.</param>
            <param name="basePosition">The BASE applied to the robot.</param>
            <param name="toolOffset">The tool offset.</param>
            <param name="jointPosition">The joint position.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.JointToWorld(System.Double[])">
            <summary>
            Convert the specified joint position to the world location, including TOOL offset.
            </summary>
            <param name="jointPos"></param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.ForwardKinematics(System.Int32,System.Double[])">
            <summary>
            Returns the offset from the robot base to the end of the specified joint. 
            By default, this assumes a serial mechanism.
            </summary>
            <param name="jointNumber">0-based joint number.</param>
            <param name="jointPos">Joint position array</param>
            <returns>Position of the end of the given joint.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.InverseKinematics(Ace.Core.Server.Transform3D,System.Double[],System.Boolean)">
            <summary>
            Perform inverse kinematics, converting from Cartesian location (without tool or base offsets) to joint position.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.Move(Ace.Core.Server.Motion.IMove)">
            <summary>
            Perform the specified move.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.Power">
            <summary>
            Gets or sets the robot high-power state.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.IsInTolerance">
            <summary>
            Gets a flag indicating whether the robot is within settling tolerance.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetState(System.Int32)">
            <summary>
            Return the specified V+ STATE function value.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.PercentMoveComplete">
            <summary>
            Gets the percentage of the current move that is complete.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.TrajectoryState">
            <summary>
            Gets the current trajectory state. This returns information about the
            current acceleration profile segment, which is sub state of 
            MotionState == MotionState.TrajectoryInProgress.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.MotionState">
            <summary>
            Gets the current motion state. When MotionState == MotionState.TrajectoryInProgress,
            use TrajectoryState to find the current trajectory sub state.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.Dispose(System.Boolean)">
            <summary>
            Releases resources used by this robot when it is disposed.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.FixArraySizes(System.Double[])">
            <summary>
            Fix ridiculous array indexing in scale factor array-sizing.
            1. If there is a group of n consecutive coupled axes, entry is n.
            2. If there is a group of n consecutive non-coupled axes, entry is -n.
            This routine simplifies to return sizes of block-diagonal arrays.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetScaleFactors(System.Int32)">
            <summary>
            Get joint-to-motor scale factors for a specific joint.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.SetScaleFactors(System.Int32,System.Double[])">
            <summary>
            Set joint-to-motor scale factors for a specific joint.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.IsSpecOpcodeEditable(System.Int32,System.Int32)">
            <summary>
            Return true if the specified opcode is editable.
            <param name="opcode">Servo or robot specification.</param>
            <param name="index">1-based index.</param>
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetSpecString(System.Int32,System.Int32)">
            <summary>
            Get a string specification parameter.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.SetSpecString(System.Int32,System.Int32,System.String)">
            <summary>
            Set a string specification parameter.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetSpecValue(System.Int32,System.Int32)">
            <summary>
            Return a numeric robot specification parameter.
            </summary>
            <param name="param">Parameter to read.</param>
            <param name="index">1-based index to read.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.SetSpecValue(System.Int32,System.Int32,System.Double)">
            <summary>
            Get a numeric specification parameter.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.CalibrationFile">
            <summary>
            Gets or sets the name of the calibration file associated with this robot.
            Changes to this property must be saved to V+.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.RobotDescription">
            <summary>
            Gets or sets the robot description displayed at system startup.
            Changes to this property must be saved to V+.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.ChangeExpertPassword(System.String,System.String)">
            <summary>
            Sets the password used to gain access to expert parameters.
            You must have expert parameter access to change this value!
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.RequestExpertAccess(System.String)">
            <summary>
            Request expert access. Pass in an invalid password to leave expert
            access mode. Adept robots require a secret password to obtain expert access;
            non-Adept robots may have a password defined by the customizer to hide
            critical parameters from the casual user.
            </summary>
            <param name="password">Password required to obtain expert access.</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.ExpertAccess">
            <summary>
            Gets a flag indicating whether the user has expert access to robot
            parameters.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetOpcodeAttributes(System.Int32,Ace.Communication.ServoData)">
            <summary>
            Return the opcode attributes for the specified opcode.
            </summary>
            <param name="motorNumber">0-based motor number. If secondary, set bit 4.</param>
            <param name="opcode">Servo opcode descriptor.</param>
            <returns>Opcode attributes for specified motor.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetOpcodeAttributes(System.Int32,System.Int32)">
            <summary>
            Return the opcode attributes for the specified opcode.
            </summary>
            <param name="motorNumber">0-based motor number. If secondary, set bit 4.</param>
            <param name="opcode">Servo opcode descriptor.</param>
            <returns>Opcode attributes for specified motor.</returns>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobot.SCurveProfiles">
            <summary>
            Gets or sets the S-curve profiles for this robot.
            Changes to this property must be saved to V+.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetObstacleCount(System.Boolean)">
            <summary>
            Returns a count of the number of obstacles of the given type.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.GetObstacle(System.Boolean,System.Int32)">
            <summary>
            Returns the specified obstacle.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.SetObstacle(System.Boolean,System.Int32,Ace.Adept.Server.Motion.Obstacle)">
            <summary>
            Sets the specified obstacle value.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.Reinitialize(System.Boolean)">
            <summary>
            Resets the V+ trajectory generator.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.Jog(Ace.Adept.Server.Motion.ManualControlMode,System.Double,System.Int32,System.Double[])">
            <summary>
            Perform a jog.
            </summary>
            <param name="mode">Jog mode</param>
            <param name="speed">Speed, from -1 to 1</param>
            <param name="axis">Selected axis (0-based), used if mode IS NOT "jog to".</param>
            <param name="pos">Position, used if mode IS "jog to".</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.BeltTrackingConfigure(System.Int32,System.Double,Ace.Core.Server.Transform3D,System.Double,System.Double,System.Double)">
            <summary>
            Configure belt tracking.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.BeltTrackingInitiate(System.Int32,System.Int32,Ace.Core.Server.Transform3D)">
            <summary>
            Initiate belt tracking, with the belt location given by the specified count.
            The belt location is loc=beltTransform*TRANS(mmPerCount*(currentCount-encoderCount))
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.SetStopOnLatch(System.Boolean)">
            <summary>
            Enables or disables stop-on-latch functionality. This issues a FORCE.MODE(2) command to
            enable stop-on-latch. Return the latched value with LatchedJointPos.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.FollowPath(Ace.Core.Server.Transform3D[],Ace.Core.Server.Transform3D[],System.Double,System.Double,System.Double,System.EventHandler{Ace.Core.Server.Event.ProgressEventArgs})">
            <summary>
            Follow the specified path. The first segment of the motion is considered to be
            the motion from the current goal position to the first point in the list.
            The tool-tip speed is controlled, not the rotation speeds. Therefore, rotation
            without tool-tip motion may be performed quite fast.
            </summary>
            <param name="robotLocations">Point list to follow.</param>
            <param name="tooltipLocations">Used for path calculations, when the actual robot tool tip is not the location where
            you need constant speed. Must match up 1-for-1 with robotLocations. If the actual robot tool tip speed is being controlled,
            pass in the robotLocations array again for this argument.</param>
            <param name="tooltipSpeed">Maximum tool-tip speed, in mm/sec.</param>
            <param name="acceleration">Acceleration, in mm/sec^2.</param>
            <param name="deceleration">Deceleration, in mm/sec^2.</param>
            <param name="progressHandler">An optional event handler. The most recent path index crossed is returned as progress percentage. 
            An event is reported for each path index except the last.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.CheckServoData(Ace.Communication.ServoData)">
            <summary>
            Checks if the servo data exists and update the dictionary.
            The first time, the data will be accessed. Then, the dictionary will be used for efficiency.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.CheckOpcode(System.Collections.Generic.Dictionary{System.Int32,System.Boolean},System.Int32,System.Int32)">
            <summary>
            Checks if the opcode exists and update the dictionary.
            The first time, the data will be accessed. Then, the dictionary will be used for efficiency.
            </summary>
            <param name="availableOpcodes">The available opcodes.</param>
            <param name="opcode">The opcode.</param>
            <param name="motorIndex">Index of the motor.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.Refresh">
            <summary>
            Refreshes the tracking state of the robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.UpdateDescription">
            <summary>
            Forces the robot to update the description/name of the robot based on the current configuration of the robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.OnOptionBitsUpdated">
            <summary>
            Called when the option bits for the robot have been updated.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobot.NotifyCollision">
            <summary>
            Called to notify that a collision has occured
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobotImpl.ClearErrors">
            <summary>
            Clears any pending errors for the robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobotImpl.MaximumDataCollectionItemCount">
            <summary>
            Gets the maximum number of data items that can be collected at one time.
            </summary>
            <value>The maximum data collection item count.</value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobotImpl.DataCollectionEnabled">
            <summary>
            Gets or sets a value indicating whether data collection is enabled.
            </summary>
            <value>
            <c>true</c> if data collection enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobotImpl.SetDataCollectionEnabled_V1(System.Boolean)">
            <summary>
            Sets the data collection enabled status for legacy controllers and eV+ 2.1B59 and earlier.
            </summary>
            <param name="value">if set to <c>true</c> the data collection is enabled.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobotImpl.SetDataCollectionEnabled_V2(System.Boolean)">
            <summary>
            Sets the data collection enabled status for eV+ 2.1B60 and later.
            </summary>
            <param name="value">if set to <c>true</c> the data collection is enabled.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobotImpl.SetDataCollectionEnabled(System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Sets the data collection status to the controller.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobotImpl.ReadDataCollection(Ace.Adept.Server.Motion.DataCollectionItem,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Reads the data for a specific data collection item.
            </summary>
            <param name="item">The item to read.</param>
            <param name="wait">if set to <c>true</c> [wait].</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobotImpl.ReadDataCollection_V1(Ace.Adept.Server.Motion.DataCollectionItem,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Reads the data for a specific data collection item for legacy controllers and eV+ 2.1B59 and earlier.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.AdeptRobotImpl.ReadDataCollection_V2(Ace.Adept.Server.Motion.DataCollectionItem,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Reads the data for a specific data collection item for eV+ 2.1B60 and later.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobotImpl.SupportsCircularDataCollection">
            <summary>
            Gets a value indicating whether this instance supports a circular data collection buffer (i.e. one that wraps around)
            </summary>
            <value>
            <c>true</c> if this instance can wrap data collection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.AdeptRobotImpl.OptionBits">
            <summary>
            Option bits for the robot (returns 16 bits)
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.MotorGains">
            <summary>
            Motor gains. 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.MotorGains.Initialize(Ace.Adept.Server.Motion.Motor)">
            <summary>
            Called during startup to initialize the motor gains for a particular motor.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.Motor">
            <summary>
            Gets the motor associated with this gain set.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.ProportionalGain">
            <summary>
            Gets or sets the servo proportional gain. Higher gain causes "tighter" servo
            control, considered good until it is so high that oscillation begins.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.Zero">
            <summary>
            Gets or sets the zero in the feedback loop. It provides low-pass filtering
            of the feedback signal, which can eliminate some noise but can also cause
            instability. Typically, this is set to a value between 0 and 1.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.Pole">
            <summary>
            Gets or sets the pole in the feedback loops. Values close to 1 (but below 1)
            provide damping, which helps stabilize the feedback loop.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.IntegratorGain">
            <summary>
            Gets or sets the feedback loop integrator gain, used to eliminate steady-state errors. It produces a torque proportional to the sum (integral) of all previous errors. Too low a value can cause errors to take a long time to go to zero. Too high a value can cause oscillations that never damp out.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.MaxIntegratorValue">
            <summary>
            A limit on the accumulated error that the integrator will achieve, 
            in output counts from 0 to 32767. A value of 0 disables the integrator. 
            A higher value increases possible integrator action. A value of 32767 
            is appropriate in most cases.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.MaxPositionErrorToIntegrate">
            <summary>
            Gets or sets the largest position error to integrate (cts) 
            per servo cycle. This effectively decreases the integrator 
            gain for errors larger than this value, helping prevent 
            integrator "windup".
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.CompensatorGain">
            <summary>
            Gets or sets a multiplier applied at the end of the control loop.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.VelocityFeedforward">
            <summary>
            Gets or sets the velocity feed-forward gain (output/(cts/msec)). 
            This outputs a torque proportional to commanded velocity. 
            It can reduce tracking errors on systems with significant viscous friction.
            Since it is a feedforward gain, it has no effect on stability.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.AccelerationFeedforward">
            <summary>
            Gets or sets the acceleration feed-forward gain (output/(cts/msec^2)). This outputs a torque proportional to commanded acceleration. It can reduce tracking errors on systems with significant mass. Since it is a feedforward gain, it has no effect on stability.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.DacOutputFilterPole">
            <summary>
            Gets or sets a low-pass smoothing filter pole on the output command. 
            Typically, this is kept at 0; on some systems with high-frequency resonances, 
            a value of 1 or 2 may be acceptable. Higher values tend to cause 
            low-frequency oscillation.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.AdaptiveFeedforwardControl">
            <summary>
            Gets or sets a flag indicating whether single-axis adaptive 
            feedforward control is used. If enabled, velocity and acceleration 
            feedforward are disabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.SecondOrderFilter">
            <summary>
            Gets or sets second-order filter parameters, in the form 'poleFrequency dampingRatio'. 
            If poleFrequency is zero, the second-order filter is disabled. If poleFrequency is 
            non-zero and dampingRatio is zero, a low-pass filter is created. If both are non-zero, 
            a notch filter is created.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.StaticFrictionFeedforwardMaximumTrigger">
            <summary>
            Gets or sets the maximum commanded speed (cts/msec) that will saturate the static friction compensation torque to the maximum positive or negative value. Set this value to 0 to disable static friction compensation.
            </summary>
            <remarks>
            The static friction compensation is given by:
            <code>
            if (abs(commandedSpeed) &lt; minTriggerSpeed) {
            	scale = 0
            } else if (abs(commandedSpeed) &gt; maxTriggerSpeed) {
            	scale = 1;
            } else {
            	scale=(abs(commandedSpeed)-minTriggerSpeed) / (maxTriggerSpeed-minTriggerSpeed);
            }
            maxValue = (commandedSpeed &gt; 0) ? maximumPositiveValue : maximumNegativeValue;
            torque = maxValue * scale;
            </code>
            </remarks>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.StaticFrictionFeedforwardMinimumTrigger">
            <summary>
            Gets or sets the minimum commanded speed (cts/msec) at which the static friction compensation torque will begin to take effect.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.StaticFrictionFeedforwardMaximumPositiveValue">
            <summary>
            Gets or sets the maximum positive static friction torque value. Typically, this is the same as the maximum negative value. The full value will be achieved at positive speeds exceeding the maximum trigger value.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.StaticFrictionFeedforwardMaximumNegativeValue">
            <summary>
            Gets or sets the maximum negative static friction torque value. Typically, this is the same as the maximum positive value. The full value will be achieved at negative speeds below the maximum trigger value.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.MotorGains.StaticFrictionFeedforwardTimeConstant">
            <summary>
            Gets or sets the amount by which the static friction compensation leads or lags the commanded velocity.
            </summary>
            <remarks>
            If the value is positive, the static friction compensation will lead the
            servo set point.  If the value is negative, the static friction compensation
            will be delayed compared to the commanded velocity.  This allows the static
            friction feedforward compensation to be synchronized, as much as possible, with
            commanded velocity.
            </remarks>
        </member>
        <member name="M:Ace.Adept.Server.Motion.MotorGains.ToString">
            <summary>
            Returns an empty string to avoid clogging property grids with too much information.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Robot">
            <summary>
            Abstract robot class. Must be overridden by an actual implementation.
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Motion.Robot.dataItems">
            <summary>
            The data items exposed by the robot
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robot.ExposableItems">
            <summary>
            Get the exposable data items
            </summary>
            <returns>The list of exposable items</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.#ctor">
            <summary>
            Creates a robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.Initialize">
            <summary>
            Initializes this object after it has been created or restored.
            Ensures that the visible flag is set properly.
            </summary>		
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.CheckDataItem(Ace.Core.Server.DataItems.ExposableDataItem)">
            <summary>
            Checks the data item.
            </summary>
            <param name="dataItem">The data item.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.InitializeDataItems">
            <summary>
            Initializes the data items.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.Dispose(System.Boolean)">
            <summary>
            Disposes of the object when it is explicitly disposed or garbage-collected.
            Fires an event to remove the object from any 3D simulations.
            </summary>
            <param name="isDisposing">True if the object is being explicitly disposed.
            False if it is being garbage-collected.</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robot.JointPosition">
            <summary>
            Return an array of joint positions.
            </summary>
            <returns>Array of joint positions</returns>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robot.JointOffsets">
            <summary>
            Return an array of joint offsets. In a serial-chain robot, multiplying
            these together should give the forward kinematics. In parallel-chain
            robots, see documentation to determine the value of the joint offsets.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robot.JointCount">
            <summary>
            Return the number of joints in this robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robot.EndEffectorTransform">
            <summary>
            Gets or sets the offset from the robot EndEffector mounting flange to the EndEffector tip.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robot.SelectedEndEffector">
            <summary>
            The end-effector currently in use by the robot. The offset to the
            tip of the tool will be used to compute straight-line tool-tip trajectories.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robot.AutomaticControlActive">
            <summary>
            Gets or sets the manual control state of the robot. In the case of an Adept robot, 
            this deals with the ATTACH/DETACH state of the robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robot.IsCalibrated">
            <summary>
            Gets or sets a flag indicating whether the robot is calibrated.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.Calibrate">
            <summary>
            Performs the calibration sequence for this robot. By default, it servos off
            the robot, then invokes the calibrate function on each motor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.WaitMoveDone">
            <summary>
            Wait for any currently-executing move to finish
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robot.TrajectoryState">
            <summary>
            Gets the current trajectory state.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.MotorToJoint(System.Double[])">
            <summary>
            Convert from motor position to joint position.
            </summary>
            <param name="motorPos">Input motor position (not modified by this method).</param>
            <returns>Joint positions for the given motor positions.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.JointToMotor(System.Double[])">
            <summary>
            Convert from motor position to joint position.
            </summary>
            <param name="jointPos">Input joint position (not modified by this method).</param>
            <returns>Motor positions in user units.</returns>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robot.GoalPosition">
            <summary>
            Return the goal position of the most recent move in joint coordinates.
            </summary>
            <returns>Goal position of the most recent move.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.Halt">
            <summary>
            Halt the robot on its trajectory.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.GetMoveConfiguration(System.Double[])">
            <summary>
            Return a move configuration corresponding to the specified joint positions.
            </summary>
            <param name="jointPos">Input joint positions.</param>
            <returns>Resulting move configuration.</returns>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robot.WorldLocationWithTool">
            <summary>
            Return the robot's current world location (includes the offset of the current tool tip).
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.JointToWorld(System.Double[])">
            <summary>
            Convert a set of joint positions to the corresponding world location,
            including the current base and tool offsets.
            </summary>
            <param name="jointPos">Input joint positions.</param>
            <returns>World location, including base offset, forward kinematics, and tool offset.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.ForwardKinematics(System.Int32,System.Double[])">
            <summary>
            Returns the offset from the robot base to the end of the specified joint. 
            By default, this assumes a serial mechanism.
            </summary>
            <param name="jointNumber">0-based joint number.</param>
            <param name="jointPos">Joint position array</param>
            <returns>Position of the end of the given joint.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.ForwardKinematics(System.Double[])">
            <summary>
            Perform the forward kinematics, converting from joint position to Cartesian location.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.InverseKinematics(Ace.Core.Server.Transform3D,System.Double[])">
            <summary>
            Convert a Transform3D to joint positions, using a MoveConfiguration and default
            joint positions to help resolve ambiguities.
            </summary>
            <param name="trans">Input Transform3D (unmodified by this method).</param>
            <param name="defJointPos">Input default joint positions (unmodified by this method)</param>
            <returns>Joint positions corresponding to the input Transform3D.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.InverseKinematics(Ace.Core.Server.Transform3D,System.Double[],System.Boolean)">
            <summary>
            Convert a Transform3D to joint positions, using a MoveConfiguration and default
            joint positions to help resolve ambiguities.
            </summary>
            <param name="trans">Input Transform3D (unmodified by this method).</param>
            <param name="defJointPos">Input default joint positions (unmodified by this method)</param>
            <param name="throwError">if set to <c>true</c> throw an error if the location is out of range.</param>
            <returns>
            Joint positions corresponding to the input Transform3D.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.Move(Ace.Core.Server.Motion.IMove)">
            <summary>
            Perform a specified move.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robot.Power">
            <summary>
            Flag indicating whether amplifier power is on to the robot.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.InRange(Ace.Core.Server.Transform3D)">
            <summary>
            Returns 0 if the motion is in range. Otherwise, if bit i is set, then joint (i+1) is out of range.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Robot.IsInTolerance">
            <summary>
            true if all the motors are in tolerance.
            </summary>
            <returns>true if all the motors are in tolerance.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Robot.dataItems_ExposableItemChanged(System.Object,Ace.Core.Server.DataItems.ExposableDataItemChangedEventArgs)">
            <summary>
            Handles the ExposableItemChanged event of the dataItems control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.DataItems.ExposableDataItemChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.RobotAccessControl">
            <summary>
            Computes access level for robot properties dynamically.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.RobotAccessControl.GetAccessMode(System.Object,System.Int32)">
            <summary>
            Computes access level for robot properties dynamically.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.IncrementalMotorCalibration">
            <summary>
            A motor calibration object for motors with incremental encoders,
            home sensors or hard stops, and index pulse.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.IncrementalMotorCalibration.CalibrationMotor">
            <summary>
            Gets the motor used in calibration.
            </summary>
            <value>The calibration motor.</value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.IncrementalMotorCalibration.CalibrationGroupBitmask">
            <summary>
            Gets or sets the calibration order. For example, if bit 0 and 2 are set by entering "1 3" into the editor, the motor will be calibrated in the first and third group of motors being calibrated.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.IncrementalMotorCalibration.CalibrateToZeroIndex">
            <summary>
            Gets or sets a flag indicating whether to calibrate to the zero-index of the encoder.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.IncrementalMotorCalibration.FinalCalibrationOntoHomeSwitch">
            <summary>
            Gets or sets a flag whether to find the home switch position moving onto it or off of it. This reduces inconsistency in the edge location found during calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.IncrementalMotorCalibration.HomeSearchType">
            <summary>
            Gets or sets the initial home search type.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.IncrementalMotorCalibration.MotorPositionOffset">
            <summary>
            Gets or sets the nominal distance from home-sensor/hard-stop to zero index.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.IncrementalMotorCalibration.CalibrationPosition">
            <summary>
            Gets or sets the motor position at the calibration location (index, stop, or sensor), in counts.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.IncrementalMotorCalibration.SearchSpeed">
            <summary>
            Gets or sets the speed to move during the initial home search.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.IncrementalMotorCalibration.FineSearchSpeed">
            <summary>
            Gets or sets the speed to move when searching for the edge of the home switch.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.IncrementalMotorCalibration.MaxSearchDistance">
            <summary>
            Gets or sets the maximum search distance (cts) during home sensor, hard-stop,
            or overtravel search.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.IncrementalMotorCalibration.MaxHomeSensorWidth">
            <summary>
            Gets or sets the width of the home sensor (cts), which defines the maximum
            distance to move when moving off of the home sensor before declaring an
            error.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.IncrementalMotorCalibration.HardStopDetectPositionError">
            <summary>
            Gets or sets the position error that must be exceeded during hard-stop searching
            before the hard-stop is detected.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.IncrementalMotorCalibration.ParkPositionAfterCalibration">
            <summary>
            Gets or sets the position to move after homing (cts).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.IncrementalMotorCalibration.SaturationTimeDuringCalibration">
            <summary>
            Gets or sets the "*Motor stalled timeout*" time during calibration (sec).
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.IncrementalMotorCalibration.TeachCalibration">
            <summary>
            Teaches incremental motor calibration.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.IncrementalMotorCalibration.ToString">
            <summary>
            Gets a string description of this motor calibration suitable for property grid display.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Joint">
            <summary>
            A robot joint, typically rotational or translational. A robot is usually
            thought of as being composed of joints connected by rigid links.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Joint.#ctor(System.String)">
            <summary>
            Creates a joint with the specified name.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Joint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Joint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes data from this object, so that it can be restored later.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>       
        </member>
        <member name="M:Ace.Adept.Server.Motion.Joint.Initialize(Ace.Core.Server.Motion.IRobot,System.Int32)">
            <summary>
            Initialize this joint.
            </summary>
            <param name="owner">The robot to which the joint belongs.</param>
            <param name="index">The index of the joint in the robot.</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Joint.Name">
            <summary>
            The name of this joint.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Joint.ToString">
            <summary>
            Returns the joint name.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Joint.Robot">
            <summary>
            The robot to which this joint is assigned.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Joint.JointNumber">
            <summary>
            The 0-based number of this joint within the robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Joint.ScaleFactors">
            <summary>
            Return the scale factors to convert from joint positions to motor positions
            for this joint.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Joint.MotionLimits">
            <summary>
            Gets or sets the user minimum and maximum limits for joint motion, in mm or deg.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Joint.HardMotionLimits">
            <summary>
            Gets or sets the hard minimum and maximum limits for joint motion, in mm or deg.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Joint.Ready">
            <summary>
            Gets or sets the ready location, in mm or deg.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Joint.FullSpeed">
            <summary>
            Gets or sets the normal speed, in mm/sec or deg/sec.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Joint.FullAccel">
            <summary>
            Normal acceleration, in units/sec^2.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Joint.ManualControlMaximumSpeed">
            <summary>
            Gets or sets the manual control maximum speed, in mm/sec^2 or deg/sec^2.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Joint.ManualControlMinimumMotionIncrement">
            <summary>
            Gets or sets the manual control minimum motion increment, in mm or deg.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Joint.FreeModeEnabled">
            <summary>
            Gets or sets a value indicating whether this joint can be put into FREE mode.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Joint.FreeModeGravityCompensation">
            <summary>
            Gets or sets a value indicating whether this joint is gravity-compensated when put into FREE mode. 
            If false, the motor torque output is 0 when FREE mode is enabled. 
            If true, the motor torque is frozen at the instant FREE mode is enabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Joint.RolloverValue">
            <summary>
            Gets or sets the joint rollover value, in mm or deg, or 0 to disable rollover.
            This only works on certain joints. See kinematic module documentation for details.
            For rotational axes, the rollover value typically set to 360.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.Motor">
            <summary>
            A class representing motors in an Adept system.
            </summary>
            <example>Controlling a motor independently of a robot:
            <code>
            public static void IndependentMotorMoves(AdeptRobot robot, Motor motor) {
                int motorMask = 1 &lt;&lt; motor.MotorNumber;             // Set mask for motor to control.
                Robot.Power = true;                                 // Turn on robot power
                robot.SetMotorIndependentMask(motorMask, motorMask); // Take control
                motor.Move(true, 0, 0, 0);                          // Move motor to 0 position
                motor.WaitCommandDone();
                motor.OutputLevel = 2000;                           // Set output level
                Thread.Sleep(200);                                  // Sleep for 200 ms.
                motor.Move(true, 0, 0, 0);                          // Return to 0 position.
                motor.WaitCommandDone();
                robot.SetMotorIndependentMask(motorMask, 0);        // Restore robot control
            }
            </code>
            </example>
        </member>
        <member name="F:Ace.Adept.Server.Motion.Motor.MotorNodeName">
            <summary>
            The name of a motor node
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.#ctor">
            <summary>
            default Motor constructor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.GetDataCollectionOpcodes">
            <summary>
            Returns the motor opcodes that are associated with data collection
            </summary>
            <returns>The data collection opcodes</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.UpdateDiagnosticData(Ace.Core.Util.LogLevel,Ace.Core.Server.Diagnostic.IDiagnosticData,System.Collections.Generic.Dictionary{Ace.Communication.ServoData,System.Double})">
            <summary>
            Adds diagnostic information about this motor to the specified diagnostic data aggregator.
            </summary>
            <returns>The same collection passed in, appended with diagnostic information.</returns>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.ToString">
            <summary>
            Returns a string description of this motor.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.Initialize(Ace.Adept.Server.Motion.AdeptRobot,System.Int32)">
            <summary>
            Initialize this motor for use with the specified robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.ModulePartInformation">
            <summary>
            Gets a python module part number from the module itself. This is highly specific to
            Python modules.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.HomingConfiguration">
            <summary>
            Gets or sets the homing configuration flags.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.EncoderType">
            <summary>
            Gets or sets the encoder type. Exercise care when changing this value.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.MotorGains">
            <summary>
            Gets the motor gain set, which determines the control performance of the motor.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.MotionLimits">
            <summary>
            Gets or sets the user minimum and maximum limits for motor motion, in cts.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.HardMotionLimits">
            <summary>
            Gets or sets the hard minimum and maximum limits for motor motion, in cts.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.MotorCalibration">
            <summary>
            The motor calibration parameters.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.SetOpcode(System.Int32,System.Double)">
            <summary>
            Writes an opcode to the servos (not copied to V+ master opcode list).
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.WaveConfigure(System.Boolean,System.Double,System.Double)">
            <summary>
            Configure wave generation.
            </summary>
            <param name="sine">A flag set to true for a sine wave, false for a square wave.</param>
            <param name="amplitude">Amplitude (cts). Total motion will be twice the amplitude.</param>
            <param name="period">Period (sec).</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.WaveEnable">
            <summary>
            Gets or sets the wave-enable state. Currently, "get" returns 0.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.MaximumOutputLevel">
            <summary>
            Gets or sets the maximum output command to the motors (32767 is max).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.MaximumManualModeOutputLevel">
            <summary>
            Gets or sets the maximum output command to the motors (32767 is max) when in manual control mode.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.DutyCycleOutputLimit1">
            <summary>
            Gets or sets the filtered output command limit a duty cycle error will be declared. This should be less than MaximumOutputLevel.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.DutyCycleFilterPole1">
            <summary>
            Gets or sets the *Duty cycle exceeded* low-pass filter pole. A high value will increase the time constant used the duty-cycle filter to declare *Duty-cycle exceeded* errors. A value of 9 is typical.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.DutyCycleOutputLimit2">
            <summary>
            Gets or sets the filtered output command limit 2 a duty cycle error will be declared. This should be less than MaximumOutputLevel.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.DutyCycleFilterPole2">
            <summary>
            Gets or sets the *Duty cycle exceeded* low-pass filter pole 2. A high value will increase the time constant used the duty-cycle filter to declare *Duty-cycle exceeded* errors. A value of 9 is typical.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.DutyCycleOutputLimit3">
            <summary>
            Gets or sets the filtered output command limit 3 a duty cycle error will be declared. This should be less than MaximumOutputLevel.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.DutyCycleFilterPole3">
            <summary>
            Gets or sets the *Duty cycle exceeded* low-pass filter pole 3. A high value will increase the time constant used the duty-cycle filter to declare *Duty-cycle exceeded* errors. A value of 9 is typical.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.LastMotionSettlingTime">
            <summary>
            The motor settling time, in milliseconds, for the last motion completed.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.VoltageOverheadOptimization">
            <summary>
            Gets or sets a flag enabling higher motor speeds by automatically offsetting the amplifier's PWM duty-cycle values in order to maximize the voltage that can be applied to the motor windings. This can increase the maximum motor speed by as much as 13%.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.SoftEnvelopeErrorLimit">
            <summary>
            Gets or sets the *Soft envelope error* limit (cts). When the position error exceeds this value, V+ decelerates the robot to a controlled stop.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.HardEnvelopeErrorLimit">
            <summary>
            Gets or sets the *Hard envelope error* limit (cts). When the position error exceeds this value, the servos immediately shut down the amplifier and engage the brakes.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.VelocityEnvelopeErrorLimit">
            <summary>
            Gets or sets the velocity envelope error limit (cts/msec). When the velocity error exceeds this value, a *Hard envelope error* is declared.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.ManualModeEnvelopeErrorLimit">
            <summary>
            Gets or sets a special *Soft envelope error* limit (cts). When the position error exceeds this value in manual mode, V+ decelerates the robot to a controlled stop.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.ReverseTorque">
            <summary>
            Gets or sets the direction of the torque output command. Exercise care when changing this value--the wrong value can cause the motor to run away.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.ReverseCommutation">
            <summary>
            Gets or sets the direction of the motor phase commutation order. Exercise care when changing this value--the wrong value can cause the motor to run away.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.EncoderConfiguration">
            <summary>
            Gets or sets encoder configuration flags.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.InputPolarityConfiguration">
            <summary>
            Gets or sets motor input polarity flags.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.MotorStalledTimeout">
            <summary>
            Gets or sets the time (sec) in which a *Motor stalled timeout* will be declared if the output level remains saturated at its limiting value.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.ZeroIndexSpacing">
            <summary>
            Gets or sets the number of encoder counts between zero indices (zero to disable).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.ReverseEncoder">
            <summary>
            Gets or sets the direction of positive encoder counting. Exercise care when changing this value--the wrong value can cause the motor to run away.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.DefaultMotionSpeed">
            <summary>
            Gets or sets the default motion speed (cts/ms) for motor moves. This is normally used when directly giving move commands to the motors.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.DefaultAccelTime">
            <summary>
            Gets or sets the default acceleration time (msec) for motor moves. This is normally used when directly giving move commands to the motors.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.FineNullingTolerance">
            <summary>
            Gets or sets the FINE nulling tolerance (cts). Requires "fast" system initialization to take effect.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.CoarseNullingTolerance">
            <summary>
            Gets or sets the COARSE nulling tolerance (cts). Requires "fast" system initialization to take effect.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.TimeInTolerance">
            <summary>
            Gets or sets the time required to be in tolerance (sec).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.ToleranceFilterPole">
            <summary>
            Gets or sets the settling tolerance filter pole.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.CommandedPosition">
            <summary>
            Gets or sets the commanded position. Be careful setting the commanded
            position--it can cause a sudden motion.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.AdjustPosition(System.Int32)">
            <summary>
            Adjust the current motor position by the specified number of counts.
            </summary>
            <param name="oldToNew">Number of counts in the adjustment.</param>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.DebugDiagnosticOption">
            <summary>
            Gets or sets a diagnostic option parameter. Use a value of 1 for 110-volt AC Operation.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.PositiveOvertravelActive">
            <summary>
            Gets "true" if a positive overtravel is active.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.IndexError">
            <summary>
            Gets "true" if the last index was in error.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.NegativeOvertravelActive">
            <summary>
            Gets "true" if a negative overtravel is active.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.HomeSensorActive">
            <summary>
            Gets a value indicating whether the home sensor is active.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.AmpEnabled">
            <summary>
            Gets or sets a value indicating whether the amp is enabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.BrakeReleased">
            <summary>
            Gets or sets a value indicating whether the brake is released.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.ResetEncoder">
            <summary>
            Resets a Yaskawa/Tamagawa encoder after an error. Amp must be disabled; otherwise, an exception will
            be reported.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.EncoderError">
            <summary>
            Gets any pending encoder errors.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.YaskawaEncoderStatus">
            <summary>
            Gets the odd status structure of the Yaskawa encoder. Amp must be disabled; otherwise, an exception will
            be reported.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.TsaEncoderStatus">
            <summary>
            Gets the status structure of the Tamagawa encoder. Amp must be disabled; otherwise, an exception will
            be reported.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.FindStop(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Find a hard stop. 
            </summary>
            <param name="searchDistance">Relative search distance (cts, signed, 0 for default).</param>
            <param name="speed">Search speed (cts/sec, 0 for default)</param>
            <param name="accelTimeMillis">Search accel time (sec, 0 for default)</param>
            <param name="stopDetectDistance">Position error required to report hard-stop found (cts, 0 for default).</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.FindIndex">
            <summary>
            Find the index pulse and return its position.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.FindHome">
            <summary>
            Find the home sensor and return its position.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.MaxTorque">
            <summary>
            Max torque.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.DutyCycleLimit">
            <summary>
            Duty cycle limit.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.HarmonicDriveTorqueLimitCube">
            <summary>
            Harmonic Drive limit for the average cube torque.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.PeakPositionError">
            <summary>
            Gets the peak position error.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.PeakTorque">
            <summary>
            Gets the peak torque.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.EncoderTemperature">
            <summary>
            Encoder temperature (degrees C).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.BaseBoardTemperature">
            <summary>
            Amplifier board temperature (degrees C).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.DutyCycleLevel">
            <summary>
            Duty cycle level.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.AmpBusVoltage">
            <summary>
            Gets the amp bus voltage.
            </summary>
            <value>The amp bus voltage.</value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.AmpTemperature">
            <summary>
            Gets the amp temperature.
            </summary>
            <value>The amp temperature.</value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.AmpACInputRmsVoltage">
            <summary>
            Gets the amp AC input RMS voltage.
            </summary>
            <value>The amp AC input RMS voltage.</value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.DCInputVoltage">
            <summary>
            Gets the DC input voltage.
            </summary>
            <value>The DC input voltage.</value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.PeakVelocity">
            <summary>
            Gets the peak velocity (cts/ms).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.HarmonicDriveAverageTorque">
            <summary>
            Harmonic Drive average torque.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.HarmonicDriveLife">
            <summary>
            Harmonic Drive life (hours).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.CurrentLoopMonitoringEnable">
            <summary>
            Gets or sets a flag enabling amplifier current loop monitoring.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.IsCommandDone">
            <summary>
            Gets "true" if the most recent servo command (such as a move) is complete.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.Motor.IsSecondary">
            <summary>
            Gets "true" if this motor is secondary
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.Move(System.Boolean,System.Double,System.Double,System.Int32)">
            <summary>
            Perform a motor move independent of robot motion.
            </summary>
            <param name="absolute">A flag set to true if <c>displacement</c> is absolute; false if relative.</param>
            <param name="displacement">Displacement (cts). Goal position if <c>absolute</c> is true; distance to move if <c>absolute</c> is false.</param>
            <param name="speed">Speed (cts/ms). If 0, then the default speed ((int) SpecCode.DefaultSpeed) is used.</param>
            <param name="accelTimeMillis">Acceleration time (ms).  If 0, then the default accel ((int) SpecCode.DefaultAccelerationTime) is used.</param>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.WaitCommandDone">
            <summary>
            Wait until any pending independent motor commands are completed.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.Motor.StopMove(System.Int32)">
            <summary>
            Independent motor command to stop a motor move. Call WaitCommandDone before performing another independent motor command.
            </summary>
            <param name="decelTimeMillis">Deceleration time in milliseconds. If 0, uses the default deceleration time.</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.RobotImpl">
            <summary>
            Dummy robot implementation. This should be extended
            by the actual robot implementation. Before the robot is fully
            initialized and after it is deleted, all commands are
            delegated to this object.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.RobotImpl.ClearErrors">
            <summary>
            Clears any pending errors for the robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotImpl.IsAdept">
            <summary>
            Return a flag indicating whether this is an Adept-branded robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotImpl.MaximumDataCollectionItemCount">
            <summary>
            Gets the maximum number of data items that can be collected at one time.
            </summary>
            <value>The maximum data collection item count.</value>
        </member>
        <member name="T:Ace.Adept.Server.Motion.RobotMotionSpecs">
            <summary>
            Encapsulates robot Cartesian motion specifications.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.RobotMotionSpecs.#ctor(Ace.Adept.Server.Motion.IAdeptRobot)">
            <summary>
            Creates a motion spec object for the specified robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.Robot">
            <summary>
            Gets the robot associated with this parameter set.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.ErrorDeceleration">
            <summary>
            Gets or sets the percentage of normal deceleration to use during error conditions (E-stop, for example).
            A value of 0 will use default deceleration. Requires hardware to leave power on long enough to decelerate, and robot option bit 11 must be set.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.StartupSCurveProfile">
            <summary>
            Gets or sets the index of the default S-curve acceleration profile at system startup.
            A value of 0 indicates to use no S-curve profile (trapezoidal velocity profile).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.StartupAcceleration">
            <summary>
            Gets or sets the default percentage of rated acceleration to use at system startup.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.StartupDeceleration">
            <summary>
            Gets or sets the default percentage of rated deceleration to use at system startup.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.MaxPercentAcceleration">
            <summary>
            Gets or sets the maximum allowable acceleration from an ACCEL command.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.MaxPercentDeceleration">
            <summary>
            Gets or sets the maximum allowable deceleration from an ACCEL command.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.MaxPercentSpeed">
            <summary>
            Gets or sets the maximum allowable speed from a SPEED command.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.MonitorSpeedRateOfChange">
            <summary>
            Gets or sets the maximum rate of change of monitor speed (%/sec).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.ScaleAccelUpperLimit">
            <summary>
            Gets or sets the program speed above which accelerations are saturated.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.CartesianTranslationSpeed">
            <summary>
            Gets or sets the Cartesian translation speed at speed 100 (mm/sec).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.CartesianTranslationAccel">
            <summary>
            Gets or sets the Cartesian translation accel at accel 100 (mm/sec^2).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.CartesianRotationSpeed">
            <summary>
            Gets or sets the Cartesian rotation speed at speed 100 (deg/sec).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.CartesianRotationAccel">
            <summary>
            Gets or sets the Cartesian rotation accel at accel 100 (deg/sec^2).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.MaxWorldToolManualTranslationSpeed">
            <summary>
            Gets or sets the maximum World/Tool pendant translational speed (mm/sec)
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.MaxWorldToolManualRotationSpeed">
            <summary>
            Gets or sets the maximum World/Tool pendant rotational speed (deg/sec)
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.TimeToMaxWorldToolManualSpeed">
            <summary>
            Gets or sets the time to reach maximum World/Tool speed (sec).
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.MaxWorldToolManualTranslationSpeedIndex">
            <summary>
            Returns an correct index based on the eV+ version. 
            If eV+ version > 2.3C15, return 1 else 2
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.MaxWorldToolManualRotationSpeedIndex">
            <summary>
            Returns an correct index based on the eV+ version. 
            If eV+ version > 2.3C15, return 2 else 1
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotMotionSpecs.IsEVPlusVersionGreaterThan2Dot3C15">
            <summary>
            Returns true if the eV+ version greater than 2.3C15        
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.RobotMotionSpecs.ToString">
            <summary>
            Returns an empty string, to avoid clutter on property grids.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.RobotTimingSpecs">
            <summary>
            Encapsulates robot timing specifications.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotTimingSpecs.Robot">
            <summary>
            Gets the robot associated with this parameter set.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotTimingSpecs.ManualModeEStopShutdownTimeout">
            <summary>
            Gets or sets the time (sec) after a manual mode E-stop is asserted in which V+ is allowed to decelerate the robot, 
            engage the brakes, and shutdown power before the servo nodes automatically shut down power. 
            Values range from 0 (immediate power off) to 0.512 seconds. 
            If E-stop hardware delay is configured, then the maximum value allowed is 16 ms less than the E-stop hardware delay.
            If the deceleration is too slow or the brake-on delay too long, the servo node will automatically cut power.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotTimingSpecs.AutoModeEStopShutdownTimeout">
            <summary>
            Gets or sets the time (sec) after an auto mode E-stop is asserted in which case V+ is allowed to decelerate the robot, 
            engage the brakes, and shutdown power before the servo nodes automatically shut down power. 
            Values range from 0 (immediate power off) to 0.512 seconds. 
            If E-stop hardware delay is configured, then the maximum value allowed is 16 ms less than the E-stop hardware delay.  
            If the deceleration is too slow or the brake-on delay too long, the servo node will automatically cut power. 
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotTimingSpecs.HoldToRunEStopShutdownTimeout">
            <summary>
            Gets or sets the time (sec) after a hold-to-run mode E-stop is asserted in which V+ is allowed to decelerate the robot, engage the brakes, and shutdown power before the servo nodes automatically shut down power. Values range from 0 (immediate power off) to 0.512 seconds. If the deceleration is too slow or the brake-on delay too long, the servo node will automatically cut power.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotTimingSpecs.NullingTimeout">
            <summary>
            Gets or sets the number of seconds the controller will wait for 
            nulling position errors (getting within the COARSE or FINE 
            tolerance on all motors) before declaring a *Time-out nulling error*.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotTimingSpecs.MaxTimeToWaitForAmpPower">
            <summary>
            Gets or sets the maximum time (sec) that V+ will wait for the 
            servos to indicate successful power-up after enabling power. 
            A *Timeout enabling high power* will occur if the timeout expires.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotTimingSpecs.DriveEnableTimeout">
            <summary>
            Gets or sets the maximum time (sec) that V+ will wait after 
            enabling the amplifier for it to indicate that it has 
            successfully enabled. A *Timeout enabling amplifier* will occur 
            if the timeout expires.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotTimingSpecs.PowerOnToAmpOnDelay">
            <summary>
            Gets or sets the delay (sec) from the time high power is turned on until the amplifiers are enabled. This allows the amplifiers time to reset.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotTimingSpecs.BrakeReleaseDelay">
            <summary>
            Gets or sets the delay (in sec) from the moment brakes are released until the 
            trajectory generator starts moving the robot. This helps prevent the robot 
            from moving prematurely while the brakes are still partially engaged.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.RobotTimingSpecs.BrakeEngageDelay">
            <summary>
            Gets or sets the delay (in sec) from the moment the brakes are engaged until
            servo control is disabled. This helps prevent the robot from dropping due
            to the time it takes the brakes to fully engage.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.RobotTimingSpecs.ToString">
            <summary>
            Returns an empty string to simplify the robot editor display.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.RobotTimingSpecs.SetShutdownTimeout(System.Int32,System.Double)">
            <summary>
            Sets the value for shutdown timeout (auto/manual) robot specifications parameter
            </summary>
            <param name="parameter">Robot specifications parameter</param>
            <param name="desiredValue">Desired value for parameter</param>
        </member>
        <member name="T:Ace.Adept.Server.Motion.ServoCommand">
            <summary>
            Servo commands
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.SigmaMotorCalibration">
            <summary>
            Motor calibration for Sigma encoder-based motors.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SigmaMotorCalibration.CalibrationMotor">
            <summary>
            Gets the motor used in calibration.
            </summary>
            <value>The calibration motor.</value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SigmaMotorCalibration.HomeSearchType">
            <summary>
            The initial home search type while teaching calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SigmaMotorCalibration.MotorPositionOffset">
            <summary>
            Gets or sets the motor position offset from encoder zero to V+ zero.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SigmaMotorCalibration.SearchSpeed">
            <summary>
            Gets or sets the speed and direction (ct/msec) for hard-stop search.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SigmaMotorCalibration.MaxSearchDistance">
            <summary>
            Gets or sets the maximum hard-stop search distance (cts) during teaching.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SigmaMotorCalibration.HardStopDetectPositionError">
            <summary>
            Gets or sets the position error (cts) at which the hard stop will be detected during teaching.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SigmaMotorCalibration.OffsetFromStopToZero">
            <summary>
            Gets or sets the offset from the hard stop to the zero position (cts) during teaching.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.SigmaMotorCalibration.SaturationTimeDuringCalibration">
            <summary>
            Gets or sets the *Motor stalled* saturation time (sec) during teaching.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.SigmaMotorCalibration.TeachCalibration">
            <summary>
            Automatically teaches calibration parameters.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.SigmaMotorCalibration.ToString">
            <summary>
            Returns a string description of this calibration, appropriate for a property grid.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.TsaMotorCalibration">
            <summary>
            Motor calibration for Tamagawa encoder-based motors.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TsaMotorCalibration.CalibrationMotor">
            <summary>
            Gets the motor used in calibration.
            </summary>
            <value>The calibration motor.</value>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TsaMotorCalibration.HomeSearchType">
            <summary>
            The initial home search type while teaching calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TsaMotorCalibration.MotorPositionOffset">
            <summary>
            Gets or sets the motor position offset from encoder zero to V+ zero.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TsaMotorCalibration.SearchSpeed">
            <summary>
            Gets or sets the speed and direction (ct/msec) for hard-stop search.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TsaMotorCalibration.MaxSearchDistance">
            <summary>
            Gets or sets the maximum hard-stop search distance (cts) during teaching.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TsaMotorCalibration.HardStopDetectPositionError">
            <summary>
            Gets or sets the position error (cts) at which the hard stop will be detected during teaching.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TsaMotorCalibration.OffsetFromStopToZero">
            <summary>
            Gets or sets the offset from the hard stop to the zero position (cts) during teaching.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Motion.TsaMotorCalibration.SaturationTimeDuringCalibration">
            <summary>
            Gets or sets the *Motor stalled* saturation time (sec) during teaching.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TsaMotorCalibration.TeachCalibration">
            <summary>
            Automatically teaches calibration parameters.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.TsaMotorCalibration.ToString">
            <summary>
            Returns a string description of this calibration, appropriate for a property grid.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Motion.UnknownMotorCalibration">
            <summary>
            Unknown motor calibration scheme. There are no properties to edit for this scheme.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Motion.UnknownMotorCalibration.ToString">
            <summary>
            Returns a string indicating the system does not recognize the robot's calibration file name.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Startup.AutoStartupItem">
            <summary>
            Represents a startup item for the AutoSystemStartupSource.
            </summary>
            <remarks>Each instance of this class represents an action associated with the specified controller device.</remarks>
        </member>
        <member name="P:Ace.Adept.Server.Startup.AutoStartupItem.Controller">
            <summary>
            Gets or sets the associated controller.
            </summary>
            <value>The linked object.</value>
        </member>
        <member name="P:Ace.Adept.Server.Startup.AutoStartupItem.ArchiveContent">
            <summary>
            Gets a value indicating whether there is content that needs to be saved to the controller.
            </summary>
            <value>
            <c>true</c> if there is content to save; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Ace.Adept.Server.Startup.AutoStartupItem.PropertyModified">
            <summary>
            An event raised when a property is modified. Note that not all properties will throw this event.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Startup.AutoStartupItem.SaveProgramsAndVariables">
            <summary>
            Gets a value indicating whether programs and variables are saved on the controller.
            </summary>
            <value>
            <c>true</c> if programs and variables are saved; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Startup.AutoStartupItem.SaveVariablesByCategory">
            <summary>
            Gets or sets a value indicating whether a variable is saved in separate files based on the category names or in a single file. 
            </summary>
            <value>
            <c>true</c> if variables are saved by category; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Startup.AutoStartupItem.CustomAutoDefined">
            <summary>
            Gets a value indicating whether a user supplied AUTO module exists.
            </summary>
            <value>
            <c>true</c> if a user supplied AUTO module exists; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Startup.AutoStartupItem.SaveBeltCalibrations">
            <summary>
            Gets or sets a value indicating whether belt calibrations should be saved.
            </summary>
            <value>
              <c>true</c> if variables should be saved; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Startup.AutoStartupItem.BeltCalibrations">
            <summary>
            Gets the belt calibrations associated with the save operation
            </summary>
            <value>
            The belt calibrations.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Startup.AutoStartupItem.GenerateAuto">
            <summary>
            Gets or sets a value indicating whether an AUTO.V2 is generated.
            </summary>
            <value>
              <c>true</c> if the AUTO.V2 file is generated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Startup.AutoStartupItem.AutoTaskNumber">
            <summary>
            Gets or sets the task number to use when launching the auto program
            </summary>
            <value>
            The auto task number.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Startup.AutoStartupItem.AutoProgramToExecute">
            <summary>
            Gets or sets the program to execute from the AUTO.v2 file
            </summary>
            <value>
            The auto program to execute.
            </value>		
        </member>
        <member name="P:Ace.Adept.Server.Startup.AutoStartupItem.ArchiveWorkspace">
            <summary>
            Gets or sets a value indicating whether the workspace should be archived on the controller.
            </summary>
            <value>
              <c>true</c> if the workspace is archived; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Startup.AutoStartupItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.Save">
            <summary>
            Saves all files to the associated controller.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.Archive(System.String,System.String)">
            <summary>
            Archives the file in the associated controller archive file
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="file">The file to archive.</param>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.ClearArchive">
            <summary>
            Clears any archive file on the associated controller
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.CheckAutoModule">
            <summary>
            Checks to see if the AUTO.v2 module should be added in the workspace
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.GetFileBaseName(System.String,System.String)">
            <summary>
            Gets the basic file name given a module or category name.
            </summary>
            <param name="ordinaryName">The ordinary name of the module or category.</param>
            <param name="extension">The extension for the file.</param>
            <returns>
            Default name of the file to save the module into
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.GetModuleFileNames">
            <summary>
            Gets the module file names.
            </summary>
            <returns>Dictionary where the key is the module name and the value is the file used for the module</returns>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.GetGlobalVariableFile">
            <summary>
            Gets the name of the file for saving variables.
            </summary>
            <returns>Name of the variable file</returns>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.GetVariableCategoryFileNames">
            <summary>
            Gets the names of the files to save each category
            </summary>
            <returns>The file name used for each category (key)</returns>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.SaveAllVariables">
            <summary>
            Saves all variables.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.SaveBeltCals">
            <summary>
            Saves the belt calibrations
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.SaveAllModules">
            <summary>
            Saves all modules.
            </summary>
            <remarks>
            If a module is named "AUTO.V2" it is special and it is saved to D:\AUTO.V2 file.
            </remarks>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.SaveInternal(System.String,System.String)">
            <summary>
            Saves the file with the specified contents.
            </summary>
            <param name="fileName">Name of the file on the controller.</param>
            <param name="fileContents">The file contents.</param>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.SaveAutoFile">
            <summary>
            Saves the auto file.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.GenerateAutoFileContents">
            <summary>
            Generates the contents of the AUTO.V2 file
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.OnPropertyModified(System.String)">
            <summary>
            Called when a property is modified.
            </summary>
            <param name="propertyName">Name of the modified property.</param>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoStartupItem.GetReferences">
            <summary>
            Gets the references linked by the startup object
            </summary>
            <returns>The reference collection</returns>
        </member>
        <member name="T:Ace.Adept.Server.Startup.AutoSystemStartupSource">
            <summary>
            Startup object source for managing AUTO.V2 configuration for an application
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoSystemStartupSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Startup.AutoSystemStartupSource"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoSystemStartupSource.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="T:Ace.Adept.Server.Startup.AutoVPlusProgramStartupAction">
            <summary>
            Represents a V+ program AUTO.V2 startup configuration 
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoVPlusProgramStartupAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Startup.AutoVPlusProgramStartupAction"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoVPlusProgramStartupAction.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoVPlusProgramStartupAction.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoVPlusProgramStartupAction.GetAutoFileContents(System.Boolean)">
            <summary>
            Gets the auto file contents.
            </summary>
            <param name="start">if set to <c>true</c> the text is for the start of the auto file.</param>
            <returns>The text to put in the auto file</returns>
        </member>
        <member name="M:Ace.Adept.Server.Startup.AutoVPlusProgramStartupAction.SaveFiles">
            <summary>
            Saves any additional files required by the startup object.
            </summary>
        </member>
        <member name="T:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource">
            <summary>
            Startup object source for connecting to a series of controllers and maintaining that connection
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.isNew">
            <summary>
            Was the object newly created
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.controlThread">
            <summary>
            The control thread
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.stopControlThread">
            <summary>
            Should the control thread be stopped
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.startupObjects">
            <summary>
            Reference to the startup object configurations
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.StartupObjects">
            <summary>
            Gets or sets the list of startup object configurations
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.reconnectionTimeDelay">
            <summary>
            The amount of time to delay before attempting a reconnect (in ms)
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.ReconnectionTimeDelay">
            <summary>
            Gets or sets the amount of time to delay before attempting a reconnect
            </summary>		
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.AssignServer(Ace.Core.Server.IAceServer)">
            <summary>
            Assigns this instance to an AceServer.
            </summary>
            <param name="aceServer">The ace server.</param>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.GetReferences">
            <summary>
            Gets the references.
            </summary>
            <returns>The references maintained by the object</returns>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.Initialize">
            <summary>
            Initialize the source. Called in normal Ace initialization sequence.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.Startup">
            <summary>
            Perform the required operation at system startup.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.StartupItemModified">
            <summary>
            Indicates a startup item was modified.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.Dispose(System.Boolean)">
            <summary>
            Sets a flag that ensures that the object will eventually
            be inaccessible remotely, allowing it to be garbage-collected.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.MainThread">
            <summary>
            The background thread.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupSource.Instance_CollectionChanged(System.Object,Ace.Core.Server.Event.ContentsChangeEventArgs)">
            <summary>
            Handles the CollectionChanged event of the Instance control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Ace.Core.Server.Event.ContentsChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem">
            <summary>
            Represents a startup item for the ControllerConnectionSystemStartupConfiguration
            </summary>
        </member>
        <member name="F:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.objectRef">
            <summary>
            Reference to the objects to connect with
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.LinkedObject">
            <summary>
            Gets or sets the linked object.
            </summary>
            <value>The linked object.</value>
        </member>
        <member name="F:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.enableStartupProgram">
            <summary>
            Gets or sets a value indicating whether a startup program is to be executed.
            </summary>
            <value>
            	<c>true</c> if we are enabling a startup program; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.EnableStartupProgram">
            <summary>
            Gets or sets a value indicating whether a startup program is to be executed.
            </summary>
            <value>
            	<c>true</c> if we are enabling a startup program; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.runOnce">
            <summary>
            Flag indicating if the program should always be run when
            a reconnection to the controller is made or only once.
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.RunOnce">
            <summary>
            Gets or sets a value indicating whether the V+ program should always be run when a connection is made
            to the controller or only once.
            </summary>
            <value>
            	<c>true</c> if we execute the V+ program only once; otherwise, <c>false</c> will execute it each time a controller connection is established.
            </value>
        </member>
        <member name="F:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.taskNumber">
            <summary>
            The task number to execute the program on
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.TaskNumber">
            <summary>
            Gets or sets the task number to execute the program on.
            </summary>
            <value>The task number.</value>
        </member>
        <member name="F:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.programName">
            <summary>
            The program name to execute
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.ProgramName">
            <summary>
            Gets or sets the name of the program to execute.
            </summary>
            <value>The name of the program.</value>
        </member>
        <member name="F:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.runProgramCheck">
            <summary>
            Does the program need to be checked for running
            </summary>
        </member>
        <member name="P:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.RunProgramCheck">
            <summary>
            Gets or sets a value indicating whether the connection needs to be checked to run a program when the next connection is made.
            </summary>
            <value><c>true</c> if the run program should be checked; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem"/> class.
            </summary>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.#ctor(Ace.Adept.Server.Desktop.Connection.IVpLinkedObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem"/> class.
            </summary>
            <param name="linkedObject">The linked object.</param>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.#ctor(Ace.Core.Server.IReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem"/> class.
            </summary>
            <param name="linkedObjectReference">The linked object reference.</param>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">Describes the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.GetReferences">
            <summary>
            Gets the references.
            </summary>
            <returns>The references maintained by the object</returns>
        </member>
        <member name="M:Ace.Adept.Server.Startup.ControllerConnectionSystemStartupItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:Ace.Adept.EnumText">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.LinearAxisBrakeOption_MotorBrake">
            <summary>
              Looks up a localized string similar to Motor Brake.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.LinearAxisBrakeOption_ShaftBrake">
            <summary>
              Looks up a localized string similar to Shaft Brake.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.LinearAxisMotorGeneration_Sigma2">
            <summary>
              Looks up a localized string similar to Sigma 2.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.LinearAxisMotorGeneration_Sigma7">
            <summary>
              Looks up a localized string similar to Sigma 7.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.LinearAxisMotorMountOption_Bottom">
            <summary>
              Looks up a localized string similar to Bottom.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.LinearAxisMotorMountOption_Inline">
            <summary>
              Looks up a localized string similar to Inline.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.LinearAxisMotorMountOption_Left">
            <summary>
              Looks up a localized string similar to Left.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.LinearAxisMotorMountOption_Right">
            <summary>
              Looks up a localized string similar to Right.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.LinearAxisThetaInterfaceOptions_OutputShaft">
            <summary>
              Looks up a localized string similar to Output Shaft.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.LinearAxisThetaInterfaceOptions_UserFlange">
            <summary>
              Looks up a localized string similar to User Flange.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.PendantAccessLevels_Engineer">
            <summary>
              Looks up a localized string similar to Engineer.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.PendantAccessLevels_Operator">
            <summary>
              Looks up a localized string similar to Operator.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.PendantAccessLevels_Technician">
            <summary>
              Looks up a localized string similar to Technician.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.Task0">
            <summary>
              Looks up a localized string similar to Total System Time.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_AllSystemTasks">
            <summary>
              Looks up a localized string similar to All System Tasks.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_AVRMonitor">
            <summary>
              Looks up a localized string similar to AVR Monitor.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_Cat3">
            <summary>
              Looks up a localized string similar to EC Cat 3.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_Comm1394">
            <summary>
              Looks up a localized string similar to 1394 Comm.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_DDCMP">
            <summary>
              Looks up a localized string similar to DDCMP.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_DeviceNet">
            <summary>
              Looks up a localized string similar to DeviceNet.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_Disk">
            <summary>
              Looks up a localized string similar to Disk.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_Display">
            <summary>
              Looks up a localized string similar to Display.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_Kermit">
            <summary>
              Looks up a localized string similar to Kermit.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_Monitor">
            <summary>
              Looks up a localized string similar to Monitor.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_NFS">
            <summary>
              Looks up a localized string similar to NFS.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_Null">
            <summary>
              Looks up a localized string similar to Null.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_Pendant">
            <summary>
              Looks up a localized string similar to Pendant.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_Pipes">
            <summary>
              Looks up a localized string similar to Pipes Driver.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_Serial">
            <summary>
              Looks up a localized string similar to Serial.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_Servo">
            <summary>
              Looks up a localized string similar to Servo.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_Servo1394">
            <summary>
              Looks up a localized string similar to 1394 Servo.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_ServoComm">
            <summary>
              Looks up a localized string similar to Servo Comm.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_TCPIP">
            <summary>
              Looks up a localized string similar to TCP/IP.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_TFTP">
            <summary>
              Looks up a localized string similar to TFTP Driver.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_Trajectory">
            <summary>
              Looks up a localized string similar to Trajectory.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User0">
            <summary>
              Looks up a localized string similar to User 0.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User1">
            <summary>
              Looks up a localized string similar to User 1.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User10">
            <summary>
              Looks up a localized string similar to User 10.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User11">
            <summary>
              Looks up a localized string similar to User 11.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User12">
            <summary>
              Looks up a localized string similar to User 12.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User13">
            <summary>
              Looks up a localized string similar to User 13.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User14">
            <summary>
              Looks up a localized string similar to User 14.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User15">
            <summary>
              Looks up a localized string similar to User 15.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User16">
            <summary>
              Looks up a localized string similar to User 16.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User17">
            <summary>
              Looks up a localized string similar to User 17.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User18">
            <summary>
              Looks up a localized string similar to User 18.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User19">
            <summary>
              Looks up a localized string similar to User 19.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User2">
            <summary>
              Looks up a localized string similar to User 2.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User20">
            <summary>
              Looks up a localized string similar to User 20.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User21">
            <summary>
              Looks up a localized string similar to User 21.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User22">
            <summary>
              Looks up a localized string similar to User 22.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User23">
            <summary>
              Looks up a localized string similar to User 23.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User24">
            <summary>
              Looks up a localized string similar to User 24.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User25">
            <summary>
              Looks up a localized string similar to User 25.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User26">
            <summary>
              Looks up a localized string similar to User 26.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User27">
            <summary>
              Looks up a localized string similar to User 27.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User3">
            <summary>
              Looks up a localized string similar to User 3.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User4">
            <summary>
              Looks up a localized string similar to User 4.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User5">
            <summary>
              Looks up a localized string similar to User 5.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User6">
            <summary>
              Looks up a localized string similar to User 6.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User7">
            <summary>
              Looks up a localized string similar to User 7.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User8">
            <summary>
              Looks up a localized string similar to User 8.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_User9">
            <summary>
              Looks up a localized string similar to User 9.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_VisionComm">
            <summary>
              Looks up a localized string similar to Vision Communications.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_VisionInt">
            <summary>
              Looks up a localized string similar to Vision Interrupt.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_VisionProc">
            <summary>
              Looks up a localized string similar to Vision Process.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TaskNameLookup_VisionProc2">
            <summary>
              Looks up a localized string similar to Vision Process 2.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TimeCategory_ExtendRetractDwellDwell">
            <summary>
              Looks up a localized string similar to Extend-Retract Dwell Time.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TimeCategory_GripperDwell">
            <summary>
              Looks up a localized string similar to Gripper Dwell Time.
            </summary>
        </member>
        <member name="P:Ace.Adept.EnumText.TimeCategory_ReleaseDwell">
            <summary>
              Looks up a localized string similar to Release Dwell Time.
            </summary>
        </member>
        <member name="T:Ace.Adept.PickList">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.Adept.PickList.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.Adept.PickList.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.Adept.PickList.AdeptController">
            <summary>
              Looks up a localized string similar to Device|SmartController.
            </summary>
        </member>
        <member name="P:Ace.Adept.PickList.AdeptRobot">
            <summary>
              Looks up a localized string similar to Device|Controller Robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.PickList.CartesianMove">
            <summary>
              Looks up a localized string similar to Motion|Cartesian Move.
            </summary>
        </member>
        <member name="P:Ace.Adept.PickList.FreeVPlusProgram">
            <summary>
              Looks up a localized string similar to V+ Program.
            </summary>
        </member>
        <member name="P:Ace.Adept.PickList.IODrivenEndEffector">
            <summary>
              Looks up a localized string similar to Device|Tool|IO Driven Gripper.
            </summary>
        </member>
        <member name="P:Ace.Adept.PickList.JointMove">
            <summary>
              Looks up a localized string similar to Motion|Joint Move.
            </summary>
        </member>
        <member name="P:Ace.Adept.PickList.VPlusGlobalVariableCollection">
            <summary>
              Looks up a localized string similar to Variable|V+ Global Variables.
            </summary>
        </member>
        <member name="T:Ace.Adept.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.AceBanner">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.add">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.addControl">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.ArrowDown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.ArrowRight">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.ArrowUp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.backupRestore">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Browse">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Camera">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.checkedBox">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.clock">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.cobra">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Cobra_350">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Cobra_450">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Cobra_500">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Cobra_600">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Cobra_650">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Cobra_800">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Cobra_800_inverted">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.ComPort">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.ComPortConnected">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.configure">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.connect">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.controller">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.controllerConnected">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.controllerNotConnected">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.CreateNewWorkspace">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.dataWarning">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.delete">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.deleteAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.deleteControl">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.DetectAndConfigure">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.digitalIO">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.disabledCheckedBox">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.disabledUncheckedBox">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.disconnect">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.down_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.down_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Edit">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.encoder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.error">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.ExcludedModule">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.ExcludedProgram">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.ExcludedProtectedModule">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.ExcludedProtectedProgram">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.execute">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.find">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.folder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.folderInto">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.forbidden">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.frame">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.gripperClose">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.gripperExtend">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.gripperOpen">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.gripperRetract">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Hornet_565">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Hornet_565_Fixed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.HornetJ4Alignment">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.i4Robot_650">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.i4Robot_750">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.i4Robot_850">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.inputDisabled">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.inputOff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.inputOffNoBorder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.inputOn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.inputOnAndOff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.inputOnNoBorder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.invalidVPlusProgram">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.jogButton_Disabled">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.jogButton_Selected">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.jogButton_Unselected">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.left_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.LinearModules">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.LoadSavedWorkspace">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.LocationType">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.locationVariable">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.logo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.logo_ico">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.logo_ico1">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.logoLarge">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.logoMedium">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.MonitorWindow">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.motor">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.newFile">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.obstacles">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.open">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.openFolder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_approach_0">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_approach_10">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_approach_25">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_delete">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_edit_location">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_j1_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_j1_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_j2_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_j2_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_j3_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_j3_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_j4_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_j4_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_j5_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_j5_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_j6_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_j6_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_jog_joint">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_jog_none">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_jog_to">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_jog_to_small">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_jog_tool">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_jog_world">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_robot">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_rx_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_rx_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_ry_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_ry_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_rz_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_rz_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_showReferences_location">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_speed_100">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_speed_25">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_speed_5">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_speed_50">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_teach_point">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_x_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_x_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_y_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_y_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_z_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.operation_z_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.outputDisabled">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.outputOff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.outputOffNoBorder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.outputOn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.outputOnAndOff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.outputOnNoBorder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.parameter">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.pause">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.pick">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.place">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Play">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.powerEStop">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.powerOff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.powerOn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.powerWarning">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.PrecisionPointType">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.precisionPointVariable">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.profiler">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.programManager">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Python">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.quattro">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Quattro_650">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Quattro_800">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.RealType">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.realVariable">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.reference">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.refresh">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.RefreshList">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.right_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.robot">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.rotate_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.rotate_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.SafetyCommissioningJumper">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.SampleApplication">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Search">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.select">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.station">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.stop">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.StringType">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.stringVariable">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.T20_PendantKeys">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.task">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.TaskManager">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.teach">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.tool">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.uncheckedBox">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.up_minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.up_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.upFolder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.upgrade">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.V_LogoSmall">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.validVPlusProgram">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.variable">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.VariableCollection">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.VFP_Connected">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.VFP_Disconnected">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.VFP_HighPower_Off">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.VFP_HighPower_On">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.VFP_HighPower_Pressed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.VFP_Keyswitch_Comp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.VFP_Keyswitch_Manual">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.VFP_Stop_NotPressed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.VFP_Stop_Pressed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.viper">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Viper_1300">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Viper_1700">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Viper_650">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Viper_700">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Viper_850">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.Viper_900">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.VirtualFrontPanel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.work_volume">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ace.Adept.Properties.Resources.zero">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Ace.Adept.PropertyGrid">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AbstractHornetRobot_EnableBrakeReleaseInput">
            <summary>
              Looks up a localized string similar to Enable or disable the input for controlling the brake release using XBIO_IN2_6..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AbstractHornetRobot_EnableBrakeReleaseInput_DisplayName">
            <summary>
              Looks up a localized string similar to Enable Brake Release Input.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AbstractQuattroRobot_EnableBrakeReleaseInput">
            <summary>
              Looks up a localized string similar to Enable or disable the input for controlling the brake release using XBIO_IN2_6..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AbstractQuattroRobot_EnableBrakeReleaseInput_DisplayName">
            <summary>
              Looks up a localized string similar to Enable Brake Release Input.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AbstractScaraRobot_EnableBrakeReleaseInput">
            <summary>
              Looks up a localized string similar to Enable or disable the input for controlling the brake release using XBIO_IN2_6..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AbstractScaraRobot_EnableBrakeReleaseInput_DisplayName">
            <summary>
              Looks up a localized string similar to Enable Brake Release Input.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_Address">
            <summary>
              Looks up a localized string similar to The IP address of the Adept controller, in the form &quot;a.b.c.d&quot;..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_Address_DisplayName">
            <summary>
              Looks up a localized string similar to IP Address.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_AutoSetTime">
            <summary>
              Looks up a localized string similar to When connecting to a controller, automatically set the time on the controller with the time on the computer..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_AutoSetTime_DisplayName">
            <summary>
              Looks up a localized string similar to Automatically Set Time.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_DryRun">
            <summary>
              Looks up a localized string similar to Dry-run mode causes robots to ignore motion commands, to allow testing without robot motions..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_DryRun_DisplayName">
            <summary>
              Looks up a localized string similar to Dry Run.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_EnabledEncoderCount">
            <summary>
              Looks up a localized string similar to The number of external encoders used by this system, typically for tracking moving conveyors. The value is usually between 0 and 6, depending on encoder support installed in the system..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_EnabledEncoderCount_DisplayName">
            <summary>
              Looks up a localized string similar to Enabled Encoder Count.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_HostAddress">
            <summary>
              Looks up a localized string similar to The IP address of the PC, in the form &quot;a.b.c.d&quot;. Only valid after communication with the controller is established..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_HostAddress_DisplayName">
            <summary>
              Looks up a localized string similar to Host Address.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_OverallSpeed">
            <summary>
              Looks up a localized string similar to The overall (monitor) speed of the Adept controller, typically between 50 and 150. This value is read from the controller when communication is established. After that, changes to this value will be sent to the controller..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_OverallSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Overall Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_SaveConfiguration">
            <summary>
              Looks up a localized string similar to Configure what information is archived on the controller when the workspace is saved. .
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_SaveConfiguration_DisplayName">
            <summary>
              Looks up a localized string similar to Save Configuration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_SoftwareRevision">
            <summary>
              Looks up a localized string similar to The V+ version on the Adept controller..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_SoftwareRevision_DisplayName">
            <summary>
              Looks up a localized string similar to Software Revision.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_SystemOptions">
            <summary>
              Looks up a localized string similar to The first and second option words associated with the V+ system. Please refer to the V+ Language Reference Guide for additional details..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptController_SystemOptions_DisplayName">
            <summary>
              Looks up a localized string similar to System Options.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_CalibrationFile">
            <summary>
              Looks up a localized string similar to Name of the V+ file that performs robot calibration..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_CalibrationFile_DisplayName">
            <summary>
              Looks up a localized string similar to Calibration File.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_CollisionProgram">
            <summary>
              Looks up a localized string similar to A program that is invoked when the 3D Virtual display detects a collision. This is not a safety feature..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_CollisionProgram_DisplayName">
            <summary>
              Looks up a localized string similar to Collision Program.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_ControlConfiguration">
            <summary>
              Looks up a localized string similar to The control configuration for the robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_ControlConfiguration_DisplayName">
            <summary>
              Looks up a localized string similar to Control Configuration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_Controller">
            <summary>
              Looks up a localized string similar to Adept controller used for the robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_Controller_DisplayName">
            <summary>
              Looks up a localized string similar to Controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_DefaultHandCloseSignal">
            <summary>
              Looks up a localized string similar to The default signal used to close the gripper. Used by the V+ instructions OPEN, OPENI, CLOSE, CLOSEI. This does not set signals used by the selected end-effector. .
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_DefaultHandCloseSignal_DisplayName">
            <summary>
              Looks up a localized string similar to Default Hand Close Signal.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_DefaultHandOpenSignal">
            <summary>
              Looks up a localized string similar to The default signal used to open the gripper. Used by the V+ instructions OPEN, OPENI, CLOSE, CLOSEI. This does not set signals used by the selected end-effector..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_DefaultHandOpenSignal_DisplayName">
            <summary>
              Looks up a localized string similar to Default Hand Open Signal.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_Enabled">
            <summary>
              Looks up a localized string similar to Enables or disables control of this robot. Normally, you only disable a robot during debugging..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_Enabled_DisplayName">
            <summary>
              Looks up a localized string similar to Enabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_EndEffectorGripSignal">
            <summary>
              Looks up a localized string similar to End-effector grip signal number..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_EndEffectorGripSignal_DisplayName">
            <summary>
              Looks up a localized string similar to End-Effector Grip Signal.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_EndEffectorReleaseSignal">
            <summary>
              Looks up a localized string similar to End-effector release signal number..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_EndEffectorReleaseSignal_DisplayName">
            <summary>
              Looks up a localized string similar to End-Effector Release Signal.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_Joints">
            <summary>
              Looks up a localized string similar to List of robot joints. Note that Joint 1 of the robot is element 0..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_Joints_DisplayName">
            <summary>
              Looks up a localized string similar to Joints.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_LogLevel">
            <summary>
              Looks up a localized string similar to Logging level for event messages from the robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_LogLevel_DisplayName">
            <summary>
              Looks up a localized string similar to Log Level.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_ModelNumber">
            <summary>
              Looks up a localized string similar to Robot model number (as returned by V+ function ID(1,8))..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_ModelNumber_DisplayName">
            <summary>
              Looks up a localized string similar to Model Number.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_ModuleNumber">
            <summary>
              Looks up a localized string similar to Robot module number (as returned by V+ function ID(5,10+robot number))..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_ModuleNumber_DisplayName">
            <summary>
              Looks up a localized string similar to Module Number.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_MotionSpecs">
            <summary>
              Looks up a localized string similar to Cartesian motion specifications..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_MotionSpecs_DisplayName">
            <summary>
              Looks up a localized string similar to Motion Specifications.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_Motors">
            <summary>
              Looks up a localized string similar to List of robot motors. Note that Motor 1 of the robot is element 0..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_Motors_DisplayName">
            <summary>
              Looks up a localized string similar to Motors.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_OffsetFromParent">
            <summary>
              Looks up a localized string similar to Offset from the parent object (X Y Z R0 R1 R2).
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_OffsetFromParent_DisplayName">
            <summary>
              Looks up a localized string similar to Offset From Parent.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_Parent">
            <summary>
              Looks up a localized string similar to The base of this object is mounted to the parent&apos;s tip, offset by &apos;Offset From Parent&apos;..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_Parent_DisplayName">
            <summary>
              Looks up a localized string similar to Parent.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_RobotDescription">
            <summary>
              Looks up a localized string similar to Robot description displayed at system startup..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_RobotDescription_DisplayName">
            <summary>
              Looks up a localized string similar to Robot Description.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_RobotNumber">
            <summary>
              Looks up a localized string similar to Robot number. The first robot in the system is robot 1..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_RobotNumber_DisplayName">
            <summary>
              Looks up a localized string similar to Robot Number.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_SelectedEndEffector">
            <summary>
              Looks up a localized string similar to End-effector currently in use by the robot. The offset to the tip of the tool will be used to compute straight-line tool-tip trajectories..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_SelectedEndEffector_DisplayName">
            <summary>
              Looks up a localized string similar to Selected End-Effector.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_SerialNumber">
            <summary>
              Looks up a localized string similar to Robot serial number (as returned by V+ function ID(2,8))..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_SerialNumber_DisplayName">
            <summary>
              Looks up a localized string similar to Serial Number.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_TimingSpecs">
            <summary>
              Looks up a localized string similar to Power sequencing and other timing specifications..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AdeptRobot_TimingSpecs_DisplayName">
            <summary>
              Looks up a localized string similar to Timing Specifications.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AutoStartupActionBase_AutoVPlusProgramStartupAction">
            <summary>
              Looks up a localized string similar to Run a V+ Program.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AutoVPlusProgramStartupAction_AdditionalContent">
            <summary>
              Looks up a localized string similar to Additional lines that will be placed into the AUTO.V2 file after the load commands and before the execute command..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AutoVPlusProgramStartupAction_AdditionalContent_DisplayName">
            <summary>
              Looks up a localized string similar to Additional Content.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AutoVPlusProgramStartupAction_ProgramToExecute">
            <summary>
              Looks up a localized string similar to The name of the program that will be run on the specified task..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AutoVPlusProgramStartupAction_ProgramToExecute_DisplayName">
            <summary>
              Looks up a localized string similar to Program to Execute.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AutoVPlusProgramStartupAction_TaskNumber">
            <summary>
              Looks up a localized string similar to The V+ task number the program will be launched on..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.AutoVPlusProgramStartupAction_TaskNumber_DisplayName">
            <summary>
              Looks up a localized string similar to Task Number.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Calibration">
            <summary>
              Looks up a localized string similar to Calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CartesianKinematicParameters_ToolFlangeOffset">
            <summary>
              Looks up a localized string similar to Distance from the robot base to the tool flange surface, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CartesianKinematicParameters_ToolFlangeOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Tool Flange Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CartesianMove_MoveConfiguration">
            <summary>
              Looks up a localized string similar to Configuration of the move, used to resolve redundancies. For example, when using a two-arm robot, this would specify the position to which the secondary arm should move. For simple robots, this value may be null..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CartesianMove_MoveConfiguration_DisplayName">
            <summary>
              Looks up a localized string similar to Move Configuration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CartesianMove_Param">
            <summary>
              Looks up a localized string similar to Motion parameters for the move, including speeds, accelerations, etc..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CartesianMove_Param_DisplayName">
            <summary>
              Looks up a localized string similar to Move Parameters.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CartesianMove_PauseBeforeMove">
            <summary>
              Looks up a localized string similar to Flag to pause execution for teaching before performing a move..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CartesianMove_PauseBeforeMove_DisplayName">
            <summary>
              Looks up a localized string similar to Pause Before Move.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CartesianMove_Robot">
            <summary>
              Looks up a localized string similar to Robot used to perform the move..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CartesianMove_Robot_DisplayName">
            <summary>
              Looks up a localized string similar to Robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra350_ListingName">
            <summary>
              Looks up a localized string similar to Cobra 350.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra450_ListingName">
            <summary>
              Looks up a localized string similar to Cobra 450.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra500_ListingName">
            <summary>
              Looks up a localized string similar to Cobra 500.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra600_BreakAwayEstopEnabled">
            <summary>
              Looks up a localized string similar to The Break-away E-STOP function is provided to enable a high power shutdown from the outer link area. For example, it would be used if you want a break-away gripper to shut down robot high power. It essentially lets you disable high power through a user relay circuit inside the robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra600_BreakAwayEstopEnabled_DisplayName">
            <summary>
              Looks up a localized string similar to Break-away E-stop Enable.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra600_EmulationMode_ListingName">
            <summary>
              Looks up a localized string similar to Lite.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra600_ListingName">
            <summary>
              Looks up a localized string similar to Cobra 600.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra600_Lite_EmulationMode_ListingName">
            <summary>
              Looks up a localized string similar to Lite.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra600_Pro_EmulationMode_ListingName">
            <summary>
              Looks up a localized string similar to Pro.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra600_Standard_EmulationMode_ListingName">
            <summary>
              Looks up a localized string similar to Standard.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra650_ListingName">
            <summary>
              Looks up a localized string similar to Cobra 650.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra800_BreakAwayEstopEnabled">
            <summary>
              Looks up a localized string similar to The Break-away E-STOP function is provided to enable a high power shutdown from the outer link area. For example, it would be used if you want a break-away gripper to shut down robot high power. It essentially lets you disable high power through a user relay circuit inside the robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra800_BreakAwayEstopEnabled_DisplayName">
            <summary>
              Looks up a localized string similar to Break-away E-stop Enable.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra800_EmulationMode_ListingName">
            <summary>
              Looks up a localized string similar to Lite.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra800_Inverted_ListingName">
            <summary>
              Looks up a localized string similar to Inverted.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra800_IsInverted">
            <summary>
              Looks up a localized string similar to When true, indicates the robot hardware represents an inverted configuration; when false, indicates the robot hardware represents a non-inverted configuration. This flag is set automatically during the robot installation process..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra800_IsInverted_DisplayName">
            <summary>
              Looks up a localized string similar to Inverted.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra800_ListingName">
            <summary>
              Looks up a localized string similar to Cobra 800.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra800_Lite_EmulationMode_ListingName">
            <summary>
              Looks up a localized string similar to Lite.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra800_Pro_EmulationMode_ListingName">
            <summary>
              Looks up a localized string similar to Pro.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Cobra800_Standard_EmulationMode_ListingName">
            <summary>
              Looks up a localized string similar to Standard.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CVPlusConfiguration_Autostart">
            <summary>
              Looks up a localized string similar to A flag set to true to cause the file &quot;auto.v2&quot; to be loaded at startup, and the program &quot;auto()&quot; to be executed in task 3..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CVPlusConfiguration_Autostart_DisplayName">
            <summary>
              Looks up a localized string similar to Auto-Start.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CVPlusConfiguration_DefaultMonitorSpeed">
            <summary>
              Looks up a localized string similar to The default monitor speed percentage at system startup..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CVPlusConfiguration_DefaultMonitorSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Default Monitor speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CVPlusConfiguration_DescriptiveString">
            <summary>
              Looks up a localized string similar to A string displayed in the ID instruction and when returned when scanning for controllers..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CVPlusConfiguration_DescriptiveString_DisplayName">
            <summary>
              Looks up a localized string similar to Descriptive String.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CVPlusConfiguration_FirmwareOption">
            <summary>
              Looks up a localized string similar to Firmware option bit mask. Bit 0 (value 1): output 1 is automatically set to match the e-stop state..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.CVPlusConfiguration_FirmwareOption_DisplayName">
            <summary>
              Looks up a localized string similar to Firmware Option Bits.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.DeltaKinematicParameters_BaseRadius">
            <summary>
              Looks up a localized string similar to Distance from the robot centerline to the &apos;shoulder&apos; joint axis, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.DeltaKinematicParameters_BaseRadius_DisplayName">
            <summary>
              Looks up a localized string similar to Base Radius.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.DeltaKinematicParameters_InnerLinkLength">
            <summary>
              Looks up a localized string similar to Length of the inner link, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.DeltaKinematicParameters_InnerLinkLength_DisplayName">
            <summary>
              Looks up a localized string similar to Inner Link Length.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.DeltaKinematicParameters_OuterLinkLength">
            <summary>
              Looks up a localized string similar to Length of the outer link, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.DeltaKinematicParameters_OuterLinkLength_DisplayName">
            <summary>
              Looks up a localized string similar to Outer Link Length.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.DeltaKinematicParameters_TipRadius">
            <summary>
              Looks up a localized string similar to Distance from the robot centerline to the &apos;wrist&apos; joint axis, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.DeltaKinematicParameters_TipRadius_DisplayName">
            <summary>
              Looks up a localized string similar to Tip Radius.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.DeltaKinematicParameters_ToolFlangeOffset">
            <summary>
              Looks up a localized string similar to Distance from the tip plane to the tool flange surface, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.DeltaKinematicParameters_ToolFlangeOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Tool Flange Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.EndEffector">
            <summary>
              Looks up a localized string similar to End-Effector.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.GantryKinematicParameters_SkewAngle">
            <summary>
              Looks up a localized string similar to The skew angle between the Z and pitch axes, in degrees..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.GantryKinematicParameters_SkewAngle_DisplayName">
            <summary>
              Looks up a localized string similar to Skew Angle.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.GantryKinematicParameters_ToolFlangeOffset">
            <summary>
              Looks up a localized string similar to Distance from the robot base to the tool flange surface, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.GantryKinematicParameters_ToolFlangeOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Tool Flange Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Hornet565_ListingName">
            <summary>
              Looks up a localized string similar to Hornet 565 - 4 Axis.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Hornet565Fixed_ListingName">
            <summary>
              Looks up a localized string similar to Hornet 565 - 3 Axis.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_BaseOffsetTheta">
            <summary>
              Looks up a localized string similar to Rotate in world Z reference frame relative to the robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_BaseOffsetTheta_DisplayName">
            <summary>
              Looks up a localized string similar to Base offiset in Theta..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_BaseOffsetX">
            <summary>
              Looks up a localized string similar to Translate in world X reference frame relative to the robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_BaseOffsetX_DisplayName">
            <summary>
              Looks up a localized string similar to Base offiset in X direction..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_BaseOffsetY">
            <summary>
              Looks up a localized string similar to Translate in world Y reference frame relative to the robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_BaseOffsetY_DisplayName">
            <summary>
              Looks up a localized string similar to Base offiset in Y direction..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_BaseOffsetZ">
            <summary>
              Looks up a localized string similar to Translate in world Z reference frame relative to the robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_BaseOffsetZ_DisplayName">
            <summary>
              Looks up a localized string similar to Base offiset in Z direction..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_BaseRadius">
            <summary>
              Looks up a localized string similar to Distance from the robot centerline to the &apos;shoulder&apos; joint axis, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_BaseRadius_DisplayName">
            <summary>
              Looks up a localized string similar to Base Radius.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_FrameThetaOffset">
            <summary>
              Looks up a localized string similar to The rotation offset of the mounting frame, in degrees..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_FrameThetaOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Frame Theta Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_FrameZOffset">
            <summary>
              Looks up a localized string similar to Distance from the mounting plate plan to the motor center plane, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_FrameZOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Frame Z Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_InnerLinkLength">
            <summary>
              Looks up a localized string similar to Length of the inner link, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_InnerLinkLength_DisplayName">
            <summary>
              Looks up a localized string similar to Inner Link Length.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_OuterLinkLength">
            <summary>
              Looks up a localized string similar to Length of the outer link, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_OuterLinkLength_DisplayName">
            <summary>
              Looks up a localized string similar to Outer Link Length.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_TipRadius">
            <summary>
              Looks up a localized string similar to Distance from the robot centerline to the &apos;wrist&apos; joint axis, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_TipRadius_DisplayName">
            <summary>
              Looks up a localized string similar to Tip Radius.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_ToolFlangeOffset">
            <summary>
              Looks up a localized string similar to Distance from the tip plane to the tool flange surface, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.HornetKinematicParameters_ToolFlangeOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Tool Flange Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.i4Robot650_ListingName">
            <summary>
              Looks up a localized string similar to i4-650H.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.i4Robot750_ListingName">
            <summary>
              Looks up a localized string similar to i4-750H.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.i4Robot850_ListingName">
            <summary>
              Looks up a localized string similar to i4-850H.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_CalibrateToZeroIndex">
            <summary>
              Looks up a localized string similar to Flag indicating whether to calibrate to the zero-index of the encoder..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_CalibrateToZeroIndex_DisplayName">
            <summary>
              Looks up a localized string similar to Calibrate To Zero Index.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_CalibrationGroupBitmask">
            <summary>
              Looks up a localized string similar to Calibration order. For example, if bit 0 and 2 are set by entering &quot;1 3&quot; into the editor, the motor will be calibrated in the first and third group of motors being calibrated..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_CalibrationGroupBitmask_DisplayName">
            <summary>
              Looks up a localized string similar to Calibration Group Bit Mask.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_CalibrationPosition">
            <summary>
              Looks up a localized string similar to The motor position at the calibration location (index, stop, or sensor), in counts..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_CalibrationPosition_DisplayName">
            <summary>
              Looks up a localized string similar to Calibration Position.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_FinalCalibrationOntoHomeSwitch">
            <summary>
              Looks up a localized string similar to Flag whether to find the home switch position moving onto it or off of it. This reduces inconsistency in the edge location found during calibration..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_FinalCalibrationOntoHomeSwitch_DisplayName">
            <summary>
              Looks up a localized string similar to Final Calibration Onto Home Switch.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_FineSearchSpeed">
            <summary>
              Looks up a localized string similar to Speed and direction (ct/msec) for home-sensor final edge search..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_FineSearchSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Fine Search Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_HardStopDetectPositionError">
            <summary>
              Looks up a localized string similar to Position error that must be exceeded during hard-stop searching before the hard-stop is detected..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_HardStopDetectPositionError_DisplayName">
            <summary>
              Looks up a localized string similar to Hard-Stop Detect Position Error.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_HomeSearchType">
            <summary>
              Looks up a localized string similar to Initial home search type..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_HomeSearchType_DisplayName">
            <summary>
              Looks up a localized string similar to Home Search Type.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_MaxHomeSensorWidth">
            <summary>
              Looks up a localized string similar to Width of the home sensor (cts), which defines the maximum distance to move when moving off of the home sensor before declaring an error..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_MaxHomeSensorWidth_DisplayName">
            <summary>
              Looks up a localized string similar to Max Home Sensor Width.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_MaxSearchDistance">
            <summary>
              Looks up a localized string similar to Maximum search distance (cts) during home sensor, hard-stop, or overtravel search..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_MaxSearchDistance_DisplayName">
            <summary>
              Looks up a localized string similar to Max Search Distance.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_MotorPositionOffset">
            <summary>
              Looks up a localized string similar to Nominal distance from home-sensor/hard-stop to zero index..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_MotorPositionOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Motor Position Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_ParkPositionAfterCalibration">
            <summary>
              Looks up a localized string similar to Position to move after homing (cts)..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_ParkPositionAfterCalibration_DisplayName">
            <summary>
              Looks up a localized string similar to Park Position After Calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_SaturationTimeDuringCalibration">
            <summary>
              Looks up a localized string similar to &quot;*Motor stalled timeout*&quot; time during calibration (sec)..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_SaturationTimeDuringCalibration_DisplayName">
            <summary>
              Looks up a localized string similar to Saturation Time During Calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_SearchSpeed">
            <summary>
              Looks up a localized string similar to Speed and direction (ct/msec) for home-sensor/hard-stop search..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IncrementalMotorCalibration_SearchSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Search Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_CollisionProgram">
            <summary>
              Looks up a localized string similar to A program that is invoked when the 3D Virtual display detects a collision. This is not a safety feature..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_CollisionProgram_DisplayName">
            <summary>
              Looks up a localized string similar to Collision Program.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_MaxGripTime">
            <summary>
              Looks up a localized string similar to Maximum time allowed for the grip to be verified and part presence to be satisfied, in seconds..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_MaxGripTime_DisplayName">
            <summary>
              Looks up a localized string similar to Max Grip Time.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_Payload">
            <summary>
              Looks up a localized string similar to Optional real-valued expression interpreted as a mass in kg. Setting the correct payload will lower tracking error and settling time, making the robot more precise during motion and faster at the end of the motion. A negative value restores the default payload for this robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_Payload_DisplayName">
            <summary>
              Looks up a localized string similar to Payload.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_SelectedIndex">
            <summary>
              Looks up a localized string similar to The currently-selected end-effector tip..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_SelectedIndex_DisplayName">
            <summary>
              Looks up a localized string similar to Selected Index.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_TipRadius">
            <summary>
              Looks up a localized string similar to The radius of each tip displayed in the virtual display.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_TipRadius_DisplayName">
            <summary>
              Looks up a localized string similar to Tip Radius.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_TipSelectionProgram">
            <summary>
              Looks up a localized string similar to The V+ program that is called when a tip is selected..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_TipSelectionProgram_DisplayName">
            <summary>
              Looks up a localized string similar to Gripper Tip Selection Program.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_TipSelectionTask">
            <summary>
              Looks up a localized string similar to The task used when executing the tip selection program..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_TipSelectionTask_DisplayName">
            <summary>
              Looks up a localized string similar to Tip Selection Task.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_UseTipSelection">
            <summary>
              Looks up a localized string similar to When enabled, the tip selection program will be called when a tip is selected..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffector_UseTipSelection_DisplayName">
            <summary>
              Looks up a localized string similar to Use Tip Selection.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffectorTip_ClosedInputSignal">
            <summary>
              Looks up a localized string similar to An optional grip input signal that is on when the gripper is closed. .
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffectorTip_ClosedInputSignal_DisplayName">
            <summary>
              Looks up a localized string similar to Closed Input Signal.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffectorTip_ClosedOutputSignal">
            <summary>
              Looks up a localized string similar to An optional grip output signal that is enabled to grip the part. .
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffectorTip_ClosedOutputSignal_DisplayName">
            <summary>
              Looks up a localized string similar to Close Output Signal.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffectorTip_OpenInputSignal">
            <summary>
              Looks up a localized string similar to An optional grip input signal that is on when the gripper is opened. .
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffectorTip_OpenInputSignal_DisplayName">
            <summary>
              Looks up a localized string similar to Opened Input Signal.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffectorTip_OpenOutputSignal">
            <summary>
              Looks up a localized string similar to An optional grip input signal that is enabled to release the part. .
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.IODrivenEndEffectorTip_OpenOutputSignal_DisplayName">
            <summary>
              Looks up a localized string similar to Open Output Signal.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_FreeModeEnabled">
            <summary>
              Looks up a localized string similar to Value indicating whether this joint can be put into FREE mode..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_FreeModeEnabled_DisplayName">
            <summary>
              Looks up a localized string similar to Free Mode Enabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_FreeModeGravityCompensation">
            <summary>
              Looks up a localized string similar to Normally, when a robot axis is placed into free mode, the amplifier outputs a zero-current value to the corresponding motor.  For axes that experience gravity loading, and that have low friction, the axis will fall. Gravity compensation consists of sampling the filtered current being output to the motor while it is stationary, in position mode.  This sampled value is then output as a constant current to the motor during free mode..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_FreeModeGravityCompensation_DisplayName">
            <summary>
              Looks up a localized string similar to Free Mode Gravity Compensation.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_FullAccel">
            <summary>
              Looks up a localized string similar to The following value defines the maximum joint acceleration that can be achieved when ACCEL 100 is specified.  This value must be greater than 0..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_FullAccel_DisplayName">
            <summary>
              Looks up a localized string similar to Full Acceleration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_FullSpeed">
            <summary>
              Looks up a localized string similar to The following value specifies the maximum speed at which the joint will move during a joint interpolated motion at SPEED 100.  The speed is in units of degrees/second or millimeters/second as appropriate..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_FullSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Full Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_HardMotionLimits">
            <summary>
              Looks up a localized string similar to Hard minimum and maximum limits for joint motion, in mm or deg. User limits are not allowed to exceed these values..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_HardMotionLimits_DisplayName">
            <summary>
              Looks up a localized string similar to Hard Motion Limits.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_ManualControlMaximumSpeed">
            <summary>
              Looks up a localized string similar to The following value specifies the maximum speed at which each joint will be moved during JOINT manual control mode.  The speeds are in units of degrees/second or millimeters/second..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_ManualControlMaximumSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Manual Control Maximum Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_ManualControlMinimumMotionIncrement">
            <summary>
              Looks up a localized string similar to The following value specifies the smallest incremental motion that can be made during JOINT manual control mode.  This value corresponds to the slow speed &quot;single tick step&quot; displacements and are in units of degrees or millimeters as appropriate..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_ManualControlMinimumMotionIncrement_DisplayName">
            <summary>
              Looks up a localized string similar to Manual Control Minimum Motion Increment.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_MotionLimits">
            <summary>
              Looks up a localized string similar to User minimum and maximum limits for joint motion, in mm or deg..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_MotionLimits_DisplayName">
            <summary>
              Looks up a localized string similar to Motion Limits.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_Ready">
            <summary>
              Looks up a localized string similar to The following parameter defines the joint position when the robot is at its READY location.  The units for the joint values are degrees or millimeters as appropriate..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_Ready_DisplayName">
            <summary>
              Looks up a localized string similar to Ready Position.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_RolloverValue">
            <summary>
              Looks up a localized string similar to Joint rollover value, in mm or deg, or 0 if rollover is disabled. For rotational axes, the rollover value typically set to 360..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_RolloverValue_DisplayName">
            <summary>
              Looks up a localized string similar to Rollover Value.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_ScaleFactors">
            <summary>
              Looks up a localized string similar to Encoder scale factors scale encoder counts to actual joint motion.  For rotating joints, a scale factor is expressed in units of encoder counts per degree of joint travel.  For linear joints, a scale factor is expressedin units of encoder counts per millimeter..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Joint_ScaleFactors_DisplayName">
            <summary>
              Looks up a localized string similar to Scale Factors.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.JointLocation_JointPosition">
            <summary>
              Looks up a localized string similar to The joint positions of the specified location, in the order &apos;Joint1 Joint2 ...&apos;..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.JointLocation_JointPosition_DisplayName">
            <summary>
              Looks up a localized string similar to Joint Position.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.JointLocation_Robot">
            <summary>
              Looks up a localized string similar to Robot used to teach this location..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.JointLocation_Robot_DisplayName">
            <summary>
              Looks up a localized string similar to Robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.JointMove_Parent">
            <summary>
              Looks up a localized string similar to Joint location to which this location is relative, if any..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.JointMove_Parent_DisplayName">
            <summary>
              Looks up a localized string similar to Parent.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.JointMove_PauseBeforeMove">
            <summary>
              Looks up a localized string similar to Flag to pause execution for teaching before performing a move..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.JointMove_PauseBeforeMove_DisplayName">
            <summary>
              Looks up a localized string similar to Pause Before Move.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.JointMove_RelativeMoveMask">
            <summary>
              Looks up a localized string similar to Space-delimited list of joints that should move the specified distance relative to the point of completion of the previous move. Example: &quot;1 2 4&quot; will move joints 1, 2, and 4 by a relative distance, but joint 3 to an absolute location..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.JointMove_RelativeMoveMask_DisplayName">
            <summary>
              Looks up a localized string similar to Relative Move Mask.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.JontMove_MoveParameters">
            <summary>
              Looks up a localized string similar to Motion parameters for the move, including speeds, accelerations, etc..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.JontMove_MoveParameters_DisplayName">
            <summary>
              Looks up a localized string similar to Move Parameters.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.LinearModuleRobot_CachedModuleDescriptor">
            <summary>
              Looks up a localized string similar to The part number describing the module configuration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.LinearModuleRobot_CachedModuleDescriptor_DisplayName">
            <summary>
              Looks up a localized string similar to Module Descriptor.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.LinearModuleRobot_ListingName">
            <summary>
              Looks up a localized string similar to Python Linear Modules.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Location">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.ManualControl">
            <summary>
              Looks up a localized string similar to Manual Control.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Misc">
            <summary>
              Looks up a localized string similar to Configuration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motion">
            <summary>
              Looks up a localized string similar to Motion.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_CoarseNullingTolerance">
            <summary>
              Looks up a localized string similar to When a move is made after specifying COARSE tolerance, the motor must settle to within that tolerance for a specified time before the move is considered complete.  The COARSE nulling tolerance is specified in encoder counts..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_CoarseNullingTolerance_DisplayName">
            <summary>
              Looks up a localized string similar to Coarse Nulling Tolerance.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DefaultAccelTime">
            <summary>
              Looks up a localized string similar to This value specifies the default % acceleration that will be asserted when the controller is first booted..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DefaultAccelTime_DisplayName">
            <summary>
              Looks up a localized string similar to Default Acceleration Time.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DefaultMotionSpeed">
            <summary>
              Looks up a localized string similar to This value specifies the default speed of a motor during servo-controlled trajectories.  Most trajectories are V+ controlled.  Currently, only motions that square controlled.  A value of 4 counts/millisecond is typical..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DefaultMotionSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Default Motion Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DutyCycleFilterPole1">
            <summary>
              Looks up a localized string similar to This value specifies the low-pass filter through which the root mean square (RMS) DAC value is fed BEFORE comparing it to the Duty-cycle exceeded DAC limit.  By filtering the DAC output, momentarily high torque commands, or speed bursts will not cause an error.  The more filtering, the longer it will take for an error to be declared, and the longer the motor will be subject to potentially damaging current. To set this value correctly, use the following rule of thumb: assuming theDAC output is at a constant  [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DutyCycleFilterPole1_DisplayName">
            <summary>
              Looks up a localized string similar to Duty-Cycle Filter Pole 1.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DutyCycleFilterPole2">
            <summary>
              Looks up a localized string similar to See description in &quot;Duty-Cycle Filter Pole 1&quot;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DutyCycleFilterPole2_DisplayName">
            <summary>
              Looks up a localized string similar to Duty-Cycle Filter Pole 2.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DutyCycleFilterPole3">
            <summary>
              Looks up a localized string similar to See description in &quot;Duty-Cycle Filter Pole 1&quot;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DutyCycleFilterPole3_DisplayName">
            <summary>
              Looks up a localized string similar to Duty-Cycle Filter Pole 3.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DutyCycleOutputLimit1">
            <summary>
              Looks up a localized string similar to The duty-cycle limit is one of the safety features V+ provides to prevent overexerting your motor or drive system.  During operation, the root mean square (RMS) DAC output value is fed into an averaging filter. If the filtered, or average, RMS value ever exceeds the value of this parameter a *Duty-cycle exceeded* error is generated and high power is disabled. Typically, this value is about 2/3 of the maximum DAC value.  Duty-cyclechecking can be disabled by setting this parameter to zero. This should be les [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DutyCycleOutputLimit1_DisplayName">
            <summary>
              Looks up a localized string similar to Duty-Cycle Output Limit 1.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DutyCycleOutputLimit2">
            <summary>
              Looks up a localized string similar to See description in &quot;Duty-Cycle Output Limit 1&quot;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DutyCycleOutputLimit2_DisplayName">
            <summary>
              Looks up a localized string similar to Duty-Cycle Output Limit 2.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DutyCycleOutputLimit3">
            <summary>
              Looks up a localized string similar to See description in &quot;Duty-Cycle Output Limit 1&quot;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_DutyCycleOutputLimit3_DisplayName">
            <summary>
              Looks up a localized string similar to Duty-Cycle Output Limit 3.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_EncoderConfiguration">
            <summary>
              Looks up a localized string similar to Encoder configuration flags..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_EncoderConfiguration_DisplayName">
            <summary>
              Looks up a localized string similar to Encoder Configuration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_EncoderType">
            <summary>
              Looks up a localized string similar to The encoder type. Exercise care when changing this value..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_EncoderType_DisplayName">
            <summary>
              Looks up a localized string similar to Encoder Type.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_FineNullingTolerance">
            <summary>
              Looks up a localized string similar to When a move is made after specifying FINE tolerance, the motor must settle to within that tolerance for a specified time before the move is considered complete.  The FINE nulling tolerance is specified in encoder counts..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_FineNullingTolerance_DisplayName">
            <summary>
              Looks up a localized string similar to Fine Nulling Tolerance.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_HardEnvelopeErrorLimit">
            <summary>
              Looks up a localized string similar to The position envelope is the size of the servo position error that will result in a *Hard envelope error* message. As opposed to soft envelope error, should the position error exceeds this limit the arm power will be shut off immediately. It is specified in encoder counts..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_HardEnvelopeErrorLimit_DisplayName">
            <summary>
              Looks up a localized string similar to Hard Envelope Error Limit.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_HardMotionLimits">
            <summary>
              Looks up a localized string similar to Hard minimum and maximum limits for motor motion, in cts..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_HardMotionLimits_DisplayName">
            <summary>
              Looks up a localized string similar to Hard Motion Limits.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_InputPolarityConfiguration">
            <summary>
              Looks up a localized string similar to Motor input polarity flags..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_InputPolarityConfiguration_DisplayName">
            <summary>
              Looks up a localized string similar to Input Polarity Configuration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_ManualModeEnvelopeErrorLimit">
            <summary>
              Looks up a localized string similar to The manual mode envelope is the size of the servo position error in manual mode that will result in a *Soft envelope error* message.  When this envelope is exceeded in manual mode, the motion will immediately come to a controlled stop.  However, the arm power will stay ON. It is specified in encoder counts..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_ManualModeEnvelopeErrorLimit_DisplayName">
            <summary>
              Looks up a localized string similar to Manual Mode Envelope Error Limit.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_MaximumManualModeOutputLevel">
            <summary>
              Looks up a localized string similar to This value specifies the maximum output the servo can send to the DAC during Manual Control, that is, control via the teach pendant. It should not exceed the maximum DAC output. 32767 is the maximum value..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_MaximumManualModeOutputLevel_DisplayName">
            <summary>
              Looks up a localized string similar to Maximum Manual Mode Output Level.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_MaximumOutputLevel">
            <summary>
              Looks up a localized string similar to It is possible to limit the output of the analog DAC command using this parameter.  This is useful as a safety feature to limit the maximum torque or velocity (depending on the type of drive).  This parameter defines both the positive and negative limit of the DAC.  The maximum DAC output is +/- 10. 32767 is maximum value..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_MaximumOutputLevel_DisplayName">
            <summary>
              Looks up a localized string similar to Maximum Output Level.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_MotionLimits">
            <summary>
              Looks up a localized string similar to User minimum and maximum limits for motor motion, in cts..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_MotionLimits_DisplayName">
            <summary>
              Looks up a localized string similar to Motion Limits.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_MotorCalibration">
            <summary>
              Looks up a localized string similar to Motor calibration parameters..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_MotorCalibration_DisplayName">
            <summary>
              Looks up a localized string similar to Motor Calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_MotorGains">
            <summary>
              Looks up a localized string similar to The motor gain set, which determines the control performance of the motor..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_MotorGains_DisplayName">
            <summary>
              Looks up a localized string similar to Motor Gains.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_MotorStalledTimeout">
            <summary>
              Looks up a localized string similar to Since calibration is often the first motion a robot performs after powerup, it is advisable to shorten the amount of time the motor command can saturate at the maximum DAC value before declaring a *Motor Stalled* error.  This parameter allows you to set a special Motor Stalled timeout during calibration; a value of 100 milliseconds is typically satisfactory..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_MotorStalledTimeout_DisplayName">
            <summary>
              Looks up a localized string similar to Motor Stalled Timeout.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_ReverseCommutation">
            <summary>
              Looks up a localized string similar to The direction of the motor phase commutation order. Exercise care when changing this value--the wrong value can cause the motor to run away..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_ReverseCommutation_DisplayName">
            <summary>
              Looks up a localized string similar to Reverse Commutation.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_ReverseEncoder">
            <summary>
              Looks up a localized string similar to The direction of positive encoder counting. Exercise care when changing this value--the wrong value can cause the motor to run away..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_ReverseEncoder_DisplayName">
            <summary>
              Looks up a localized string similar to Reverse Encoder.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_ReverseTorque">
            <summary>
              Looks up a localized string similar to The direction of the torque output command. Exercise care when changing this value--the wrong value can cause the motor to run away..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_ReverseTorque_DisplayName">
            <summary>
              Looks up a localized string similar to Reverse Torque.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_SoftEnvelopeErrorLimit">
            <summary>
              Looks up a localized string similar to The position envelope is the size of the servo position error that will result in a *Soft envelope error* message.  When this envelope is exceeded, the motion will immediately come to a controlled stop. However, the arm power will stay ON. It is specified in encoder counts..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_SoftEnvelopeErrorLimit_DisplayName">
            <summary>
              Looks up a localized string similar to Soft Envelope Error Limit.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_TimeInTolerance">
            <summary>
              Looks up a localized string similar to When attempting to null position errors within either FINE or COARSE tolerance, the robot is required to remain within that tolerance for the time specified below before the motion is considered complete. The recommended value is about 0.016 seconds if the tolerance checking filter is not used..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_TimeInTolerance_DisplayName">
            <summary>
              Looks up a localized string similar to Required Time In Tolerance.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_ToleranceFilterPole">
            <summary>
              Looks up a localized string similar to A low-pass filter is applied to the tracking error during nulling within FINE or COARSE tolerance. It predicts the error trend, and hence, avoids falsely declaring a motion completion. A false nulling declaration may sometimes happen when the servo response is oscillatory. The recommended value is 4 with tolerance time of 0.008 seconds..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_ToleranceFilterPole_DisplayName">
            <summary>
              Looks up a localized string similar to Tolerance Filter Pole.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_VelocityEnvelopeErrorLimit">
            <summary>
              Looks up a localized string similar to The velocity envelope is the size of the servo velocity error that will result in a *Hard envelope error* message specifically during robot calibration. This parameter is only active in current mode which occursduring calibration. In this mode the robot has potential danger of running away..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_VelocityEnvelopeErrorLimit_DisplayName">
            <summary>
              Looks up a localized string similar to Velocity Envelope Error Limit.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_VoltageOverheadOptimization">
            <summary>
              Looks up a localized string similar to The Voltage Overhead Optimization feature automatically offsets the amplifier&apos;s PWM duty-cycle values in order to maximize the voltage that can be applied to the motor windings.  This can increase the maximum motor speed by as much as 13%. A non-zero value for the parameter enables Voltage Overhead Optimization..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_VoltageOverheadOptimization_DisplayName">
            <summary>
              Looks up a localized string similar to Voltage Overhead Optimization.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_ZeroIndexSpacing">
            <summary>
              Looks up a localized string similar to This parameter specifies the number of encoder counts between zero indices. If the actual number of encoder counts is less than this value, a *Lost encoder sync* error will be generated.  If the actual number of encoder counts is greater than this value, a *No zero index* error will be generated..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Motor_ZeroIndexSpacing_DisplayName">
            <summary>
              Looks up a localized string similar to Zero Index Spacing.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_AccelerationFeedforward">
            <summary>
              Looks up a localized string similar to The Acceleration Feedforward Gain (AFGain)is used to generate a torque proportional to the commanded acceleration/deceleration.  The simplest model of relating a motion command to the actual torque required to complete the motion is the following: Torque = inertia * acceleration. What the AFGain does is to emulate the inertia term above.  By dialing in the correct inertia value via AFGain, theoretically, one can complete the designated move according to the above relationship. The units are DAC output count [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_AccelerationFeedforward_DisplayName">
            <summary>
              Looks up a localized string similar to Acceleration Feedforward.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_AdaptiveFeedforwardControl">
            <summary>
              Looks up a localized string similar to A flag indicating whether single-axis adaptive feedforward control is used. If enabled, velocity and acceleration feedforward are disabled..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_AdaptiveFeedforwardControl_DisplayName">
            <summary>
              Looks up a localized string similar to Adaptive Feedforward Control.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_DacOutputFilterPole">
            <summary>
              Looks up a localized string similar to The DAC Output Filter is a low-pass digital smoothing filter on the final torque command.  Progressively higher integer values will double the degree the DAC output is filtered, removing a larger portion of the high-frequency components from the torque command.  This will cause the DAC output to change values more slowly and smoothly. Smoothing can be useful in certain situations where the motor has a resonant or vibration mode that is excited by higher frequencies.  Such modes are often caused by a flexibl [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_DacOutputFilterPole_DisplayName">
            <summary>
              Looks up a localized string similar to Output Filter Pole.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_IntegratorGain">
            <summary>
              Looks up a localized string similar to The Integral Gain (IGain) is used to eliminate steady-state errors and improve tracking.  Its contribution to the output torque is proportional to the integral of the position error (the sum of all past position errors). The units are DAC output counts/encoder count. The IGain should be set to 0 until the proportional gain, pole and zero are tuned to give top performance.  Then increase this, along with the Maximum Integrator Value and Maximum Integrator Step size, to eliminate steady-state error without ca [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_IntegratorGain_DisplayName">
            <summary>
              Looks up a localized string similar to Integrator Gain.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_MaxIntegratorValue">
            <summary>
              Looks up a localized string similar to The Maximum Integrator Value (IVal) specifies the maximum value the accumulated (or integrated) error may achieve.  It is useful for controlling the de-stabilizing affect of the Integrator Path by placing a limit on the amount of torque that may be contributed by the integrator.The units are DAC output counts.  IVal must be greater than zero (0) to use the integrator. The Maximum Integrator Value specifies the largest possible torque that will be output by the Integrator Path.  Setting this value too low ma [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_MaxIntegratorValue_DisplayName">
            <summary>
              Looks up a localized string similar to Max Integrator Value.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_MaxPositionErrorToIntegrate">
            <summary>
              Looks up a localized string similar to The Maximum Integrator Step (IStep) specifies the largest position error for a given servo cycle (1ms or 2ms) that will be added to the accumulated or integral error. The Integrator step is useful for controlling the effect of the integrator during rapid slewing motions, when the position error is largest.  The units are encoder counts. Specifying a small value for the IStep keeps an unusually large position error from driving up the integral error too quickly, thus causing the servo system to over-respond  [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_MaxPositionErrorToIntegrate_DisplayName">
            <summary>
              Looks up a localized string similar to Max Position Error To Integrate.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_Pole">
            <summary>
              Looks up a localized string similar to The Pole, like the Zero, affects the dynamic response of the servo system. By looking at how fast the position error is changing, the control system is able to get some early warning regarding what the position error is likely to be in the future. It must have a value between -1 and 1, but should always be less than the Zero and somewhere between 0 and 0.8. The Pole should usually be left at 0.  However, a small value may occasionally help avoid triggering a mechanical resonance and hence gain some addition [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_Pole_DisplayName">
            <summary>
              Looks up a localized string similar to Pole.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_ProportionalGain">
            <summary>
              Looks up a localized string similar to The Proportional Gain (PGain) causes the control system to output a torque that is proportional to the position error (commanded position minus the actual position). Increasing the PGain will increase the stiffness of the servo system by increasing the amount of torque that is generated in response to a given position error. A PGain value which is too low will result in a soft or spongy system. A PGain value which is too high will begin to excite high frequency vibration modes in the motor, coupling or load [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_ProportionalGain_DisplayName">
            <summary>
              Looks up a localized string similar to Proportional Gain.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_SecondOrderFilter">
            <summary>
              Looks up a localized string similar to Second-order filter, in the form &apos;poleFrequency dampingRatio&apos;. If poleFrequency is zero, the second-order filter is disabled. If poleFrequency is non-zero and dampingRatio is zero, a low-pass filter is created. If both are non-zero, a notch filter is created..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_SecondOrderFilter_DisplayName">
            <summary>
              Looks up a localized string similar to Second-Order Filter.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_StaticFrictionFeedforwardMaximumNegativeValue">
            <summary>
              Looks up a localized string similar to The MAXIMUM corrective torque in NEGATIVE direction of travel is the maximum amount of torque that can be applied to the commanded velocity when the joint is moving in the negative direction. In most cases the maximum positive value and the maximum negative value should be identical, because for most mechanical transmissions, the static friction resistance torque is the same in both directions of travel..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_StaticFrictionFeedforwardMaximumNegativeValue_DisplayName">
            <summary>
              Looks up a localized string similar to Static Friction Feedforward Maximum Negative Value.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_StaticFrictionFeedforwardMaximumPositiveValue">
            <summary>
              Looks up a localized string similar to The MAXIMUM corrective torque in the POSITIVE direction of travel is the maximum amount of torque that can be applied to the commanded velocity when the joint is moving in the positive direction. In most cases the maximum positive value and the maximum negative value should be identical, because for most mechanical transmissions, the static friction resistance torque is the same in both directions of travel..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_StaticFrictionFeedforwardMaximumPositiveValue_DisplayName">
            <summary>
              Looks up a localized string similar to Static Friction Feedforward Maximum Positive Value.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_StaticFrictionFeedforwardMaximumTrigger">
            <summary>
              Looks up a localized string similar to The MAXIMUM static friction feedforward TRIGGER value is the commanded velocity (cnts/msec) value that will saturate the static friction compensation torque to the maximum positive value or maximum negative value, depending on the direction of motion the individual joint. The response of the static friction compensation algorithm is controlled by the ratio of the maximum trigger value to the minimum trigger value.  If the ratio is too high, the static friction feedforward response will be too slow. If the r [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_StaticFrictionFeedforwardMaximumTrigger_DisplayName">
            <summary>
              Looks up a localized string similar to Static Friction Feedforward Maximum Trigger.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_StaticFrictionFeedforwardMinimumTrigger">
            <summary>
              Looks up a localized string similar to The MINIMUM static friction feedforward TRIGGER value is the minimum commanded velocity (cnts/msec) value that will initiate the static friction feedforward compensation. The response of the static friction compensation algorithm is controlled by the ratio of the maximum trigger value to the minimum trigger value. If the ratio is too high, the static friction feedforward response will be too slow.  If the ratio is too low, the static friction feedforward response will be too fast resulting in possibly jerky [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_StaticFrictionFeedforwardMinimumTrigger_DisplayName">
            <summary>
              Looks up a localized string similar to Static Friction Feedforward Minimum Trigger.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_StaticFrictionFeedforwardTimeConstant">
            <summary>
              Looks up a localized string similar to The static friction feedforward TIME CONSTANT is a unitless integer quantity that allows the servo software to anticipate or delay the effect of the static friction compensation torque on the commanded velocity. If the value is positive, the static friction compensation will lead the servo setpoint.  If the value is negative, the static friction compensation will be delayed compared to the commanded velocity.  This allows the static friction feedforward compensation to be synchronized, as much as possible,  [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_StaticFrictionFeedforwardTimeConstant_DisplayName">
            <summary>
              Looks up a localized string similar to Static Friction Feedforward Time Constant.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_VelocityFeedforward">
            <summary>
              Looks up a localized string similar to The Velocity Feedforward Gain (VFGain)is used to generate a torque proportional to the commanded velocity. It is very useful in reducing tracking error during long slewing motions on systems with a measurable amount of viscous friction.  Typically, systems with high viscous friction may start moving with a low torque command.  However, as the speed of the motor increases, so does the friction. Therefore in order to maintain a constant speed, additional DAC output must be generated proportional to the speed  [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_VelocityFeedforward_DisplayName">
            <summary>
              Looks up a localized string similar to Velocity Feedforward.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_Zero">
            <summary>
              Looks up a localized string similar to The Zero affects the dynamic response of the servo system. By looking at how fast the position error is changing, the control system is able to get some early warning regarding what the position error is likely to be in the future. It must have a value between -1 and 1, but should normally be greater than the pole and somewhere between 0.80 and 0.99. The Zero has a strong effect on the damping and rise time of a motor&apos;s response to a step command (instantaneous change in position). Generally, with a large Z [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.MotorGains_Zero_DisplayName">
            <summary>
              Looks up a localized string similar to Zero.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Moves">
            <summary>
              Looks up a localized string similar to Moves.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.NvramData_Address">
            <summary>
              Looks up a localized string similar to IP address of the controller after the next system boot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.NvramData_Address_DisplayName">
            <summary>
              Looks up a localized string similar to Address.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.NvramData_AutoStart">
            <summary>
              Looks up a localized string similar to Flag indicating whether to run AUTO.V2 after boot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.NvramData_AutoStart_DisplayName">
            <summary>
              Looks up a localized string similar to Auto-Start.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.NvramData_SubnetMask">
            <summary>
              Looks up a localized string similar to Subnet mask of the controller after the next system boot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.NvramData_SubnetMask_DisplayName">
            <summary>
              Looks up a localized string similar to Subnet Mask.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.NvramData_UserInterface">
            <summary>
              Looks up a localized string similar to User interface selection..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.NvramData_UserInterface_DisplayName">
            <summary>
              Looks up a localized string similar to V+ User Interface.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Parameters">
            <summary>
              Looks up a localized string similar to Parameters.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Pick">
            <summary>
              Looks up a localized string similar to Pick.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Place">
            <summary>
              Looks up a localized string similar to Place.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Quattro650_ListingName">
            <summary>
              Looks up a localized string similar to Quattro 650 (H/HS).
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Quattro800_ListingName">
            <summary>
              Looks up a localized string similar to Quattro 800 (H/HS).
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_A6">
            <summary>
              Looks up a localized string similar to The distance between attachment point of the connecting rod and the line connecting the attachment centers on the moving platform..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_A6_DisplayName">
            <summary>
              Looks up a localized string similar to A6.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_A7">
            <summary>
              Looks up a localized string similar to The distance along X of the leg 1 attachment center on the moving platform to the pivot of the tool support arm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_A7_DisplayName">
            <summary>
              Looks up a localized string similar to A7.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_A8">
            <summary>
              Looks up a localized string similar to The distance from the tool Z axis to the pivoting tool support arm. .
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_A8_DisplayName">
            <summary>
              Looks up a localized string similar to A8.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_BaseOffsetTheta">
            <summary>
              Looks up a localized string similar to Rotate in world Z reference frame relative to the robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_BaseOffsetTheta_DisplayName">
            <summary>
              Looks up a localized string similar to Base offiset in Theta..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_BaseOffsetX">
            <summary>
              Looks up a localized string similar to Translate in world X reference frame relative to the robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_BaseOffsetX_DisplayName">
            <summary>
              Looks up a localized string similar to Base offiset in X direction..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_BaseOffsetY">
            <summary>
              Looks up a localized string similar to Translate in world Y reference frame relative to the robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_BaseOffsetY_DisplayName">
            <summary>
              Looks up a localized string similar to Base offiset in Y direction..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_BaseOffsetZ">
            <summary>
              Looks up a localized string similar to Translate in world Z reference frame relative to the robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_BaseOffsetZ_DisplayName">
            <summary>
              Looks up a localized string similar to Base offiset in Z direction..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_BaseRadius">
            <summary>
              Looks up a localized string similar to The distance from the robot centerline to the &apos;shoulder&apos; joint axis, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_BaseRadius_DisplayName">
            <summary>
              Looks up a localized string similar to Base Radius.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_InnerLinkLength">
            <summary>
              Looks up a localized string similar to The length of the inner link, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_InnerLinkLength_DisplayName">
            <summary>
              Looks up a localized string similar to Inner Link Length.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_MaximumPlatformRotation">
            <summary>
              Looks up a localized string similar to The maximum platform rotation, in degrees..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_MaximumPlatformRotation_DisplayName">
            <summary>
              Looks up a localized string similar to Maximum Platform Rotation.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_MountToShoulderOffset">
            <summary>
              Looks up a localized string similar to The vertical distance from the mounting surface to the shoulder plane..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_MountToShoulderOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Mount To Shoulder Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_OuterLinkLength">
            <summary>
              Looks up a localized string similar to The length of the outer link, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_OuterLinkLength_DisplayName">
            <summary>
              Looks up a localized string similar to Outer Link Length.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_PlatformArmLength">
            <summary>
              Looks up a localized string similar to The length of the &quot;moving&quot; platform arms connecting legs 2-3 and 4-1, in mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_PlatformArmLength_DisplayName">
            <summary>
              Looks up a localized string similar to Platform Arm Length.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_PlatformSideLength">
            <summary>
              Looks up a localized string similar to The length of the &quot;fixed&quot; platform sides connecting legs 1-2 and 3-4, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_PlatformSideLength_DisplayName">
            <summary>
              Looks up a localized string similar to Platform Side Length.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_PlatformToThetaDriveRatio">
            <summary>
              Looks up a localized string similar to The drive ratio from platform rotation to theta rotation..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_PlatformToThetaDriveRatio_DisplayName">
            <summary>
              Looks up a localized string similar to Platform To Theta Drive Ratio.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_ToolFlangeOffset">
            <summary>
              Looks up a localized string similar to The distance from the tip plane to the tool flange surface, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.QuattroKinematicParameters_ToolFlangeOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Tool Flange Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_CartesianRotationAccel">
            <summary>
              Looks up a localized string similar to Cartesian rotation acceleration at ACCEL 100 (deg/sec^2)..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_CartesianRotationAccel_DisplayName">
            <summary>
              Looks up a localized string similar to Cartesian Rotation Acceleration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_CartesianRotationSpeed">
            <summary>
              Looks up a localized string similar to Cartesian rotation speed at SPEED 100 (deg/sec)..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_CartesianRotationSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Cartesian Rotation Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_CartesianTranslationAccel">
            <summary>
              Looks up a localized string similar to Cartesian translation acceleration at ACCEL 100 (mm/sec^2)..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_CartesianTranslationAccel_DisplayName">
            <summary>
              Looks up a localized string similar to Cartesian Translation Acceleration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_CartesianTranslationSpeed">
            <summary>
              Looks up a localized string similar to Cartesian translation speed at SPEED 100 (mm/sec)..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_CartesianTranslationSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Cartesian Translation Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_ErrorDeceleration">
            <summary>
              Looks up a localized string similar to Percentage of normal deceleration to use during error conditions (E-stop, for example). A value of 0 will use default deceleration..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_ErrorDeceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Error Deceleration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_MaxPercentAcceleration">
            <summary>
              Looks up a localized string similar to Maximum allowable percent acceleration from an ACCEL command..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_MaxPercentAcceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Max Percent Acceleration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_MaxPercentDeceleration">
            <summary>
              Looks up a localized string similar to Maximum allowable percent deceleration from an ACCEL command..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_MaxPercentDeceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Max Percent Deceleration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_MaxPercentSpeed">
            <summary>
              Looks up a localized string similar to Maximum allowable speed from a SPEED command..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_MaxPercentSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Max Percent Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_MaxWorldToolManualRotationSpeed">
            <summary>
              Looks up a localized string similar to Maximum World/Tool pendant rotational speed (deg/sec)..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_MaxWorldToolManualRotationSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Max World/Tool Manual Rotation Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_MaxWorldToolManualTranslationSpeed">
            <summary>
              Looks up a localized string similar to Maximum World/Tool pendant translational speed (mm/sec)..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_MaxWorldToolManualTranslationSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Max World/Tool Manual Translation Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_MonitorSpeedRateOfChange">
            <summary>
              Looks up a localized string similar to Maximum rate of change of monitor speed (%/sec)..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_MonitorSpeedRateOfChange_DisplayName">
            <summary>
              Looks up a localized string similar to Monitor Speed Rate of Change.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_ScaleAccelUpperLimit">
            <summary>
              Looks up a localized string similar to Program speed above which accelerations are saturated when SCALE.ACCEL is enabled..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_ScaleAccelUpperLimit_DisplayName">
            <summary>
              Looks up a localized string similar to SCALE.ACCEL Upper Limit.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_StartupAcceleration">
            <summary>
              Looks up a localized string similar to Default percentage of rated acceleration to use at system startup..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_StartupAcceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Startup Acceleration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_StartupDeceleration">
            <summary>
              Looks up a localized string similar to Default percentage of rated deceleration to use at system startup..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_StartupDeceleration_DisplayName">
            <summary>
              Looks up a localized string similar to Startup Deceleration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_StartupSCurveProfile">
            <summary>
              Looks up a localized string similar to Index of the default S-curve acceleration profile at system startup. A value of 0 indicates to use no S-curve profile (trapezoidal velocity profile)..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_StartupSCurveProfile_DisplayName">
            <summary>
              Looks up a localized string similar to Startup S-Curve Profile.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_TimeToMaxWorldToolManualSpeed">
            <summary>
              Looks up a localized string similar to Time to reach maximum World/Tool speed (sec)..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotMotionSpecs_TimeToMaxWorldToolManualSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Time to Max World/Tool Manual Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_2StageZAxis">
            <summary>
              Looks up a localized string similar to 2-stage Z axis.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_BacklashAndLinearCompensation">
            <summary>
              Looks up a localized string similar to Backlash and linear compensation.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_CalibrateAtBoot">
            <summary>
              Looks up a localized string similar to Execute CALIBRATE command at boot.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_CheckJointInterpolatedCollisions">
            <summary>
              Looks up a localized string similar to Check for collisions during joint-interpolated motions.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_DecelProfileOnError">
            <summary>
              Looks up a localized string similar to Use DECEL profile to stop robot when error occurs.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_DeltaRotaryDrives">
            <summary>
              Looks up a localized string similar to Rotary drives (off for rack and pinion)..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_ExtraAxisMotion">
            <summary>
              Looks up a localized string similar to Extra axis motion with AMOVE.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_FreeModePowerOff">
            <summary>
              Looks up a localized string similar to FREE mode power off.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_HighPerformance">
            <summary>
              Looks up a localized string similar to High-performance tuning.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_InvertedQuill">
            <summary>
              Looks up a localized string similar to Inverted quill.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_J2IsZAxis">
            <summary>
              Looks up a localized string similar to Joint 2 is Z axis.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_J6MultiTurn">
            <summary>
              Looks up a localized string similar to Joint 6 multi-turn.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_LinearJ2">
            <summary>
              Looks up a localized string similar to Z axis is implemented as linear joint.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_Motor123LinearCompensation">
            <summary>
              Looks up a localized string similar to Motor 1/2/3 Linear Compensation.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_SideMount">
            <summary>
              Looks up a localized string similar to Side-mount robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_SoftwareMotorLimits">
            <summary>
              Looks up a localized string similar to Software motor limits.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_SplitXAndZAxes">
            <summary>
              Looks up a localized string similar to Split X and Z axes.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_SplitXAxis">
            <summary>
              Looks up a localized string similar to Split X-axis.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_WristLinearityCompensation">
            <summary>
              Looks up a localized string similar to Wrist linearity compensation in motor space.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotOptionBit_ZUpDuringJ4Calibration">
            <summary>
              Looks up a localized string similar to Z-Up during J4 Calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_AutoModeEStopShutdownTimeout">
            <summary>
              Looks up a localized string similar to The time (sec) after an auto mode E-stop is asserted in which case V+ is allowed to decelerate the robot, engage the brakes, and shutdown power before the servo nodes automatically shut down power. Values range from 0 (immediate power off) to 0.512 seconds. If the E-stop hardware delay is configured, then the maximum value allowed is 16 milliseconds less than the E-stop hardware delay. If the deceleration is too slow or the brake-on delay too long, the servo node will automatically cut power..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_AutoModeEStopShutdownTimeout_DisplayName">
            <summary>
              Looks up a localized string similar to Auto Mode E-Stop Shutdown Timeout.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_BrakeEngageDelay">
            <summary>
              Looks up a localized string similar to Delay (in sec) from the moment the brakes are engaged until servo control is disabled. This helps prevent the robot from dropping due to the time it takes the brakes to fully engage..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_BrakeEngageDelay_DisplayName">
            <summary>
              Looks up a localized string similar to Brake-Engage Delay.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_BrakeReleaseDelay">
            <summary>
              Looks up a localized string similar to Delay (in sec) from the moment brakes are released until the trajectory generator starts moving the robot. This helps prevent the robot from moving prematurely while the brakes are still partially engaged..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_BrakeReleaseDelay_DisplayName">
            <summary>
              Looks up a localized string similar to Brake-Release Delay.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_DriveEnableTimeout">
            <summary>
              Looks up a localized string similar to The maximum time (sec) that V+ will wait after enabling the amplifier for it to indicate that it has successfully enabled. A *Timeout enabling amplifier* will occur if the timeout expires..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_DriveEnableTimeout_DisplayName">
            <summary>
              Looks up a localized string similar to Drive-Enable Timeout.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_HoldToRunEStopShutdownTimeout">
            <summary>
              Looks up a localized string similar to The time (sec) after a hold-to-run mode E-stop is asserted in which V+ is allowed to decelerate the robot, engage the brakes, and shutdown power before the servo nodes automatically shut down power. Values range from 0 (immediate power off) to 0.512 seconds. If the deceleration is too slow or the brake-on delay too long, the servo node will automatically cut power..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_HoldToRunEStopShutdownTimeout_DisplayName">
            <summary>
              Looks up a localized string similar to Hold-to-Run E-Stop Shutdown Timeout.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_ManualModeEStopShutdownTimeout">
            <summary>
              Looks up a localized string similar to The time (sec) after a manual mode E-stop is asserted in which V+ is allowed to decelerate the robot, engage the brakes, and shutdown power before the servo nodes automatically shut down power. Values range from 0 (immediate power off) to 0.512 seconds. If the E-stop hardware delay is configured, then the maximum value allowed is 16 milliseconds less than the E-stop hardware delay. If the deceleration is too slow or the brake-on delay too long, the servo node will automatically cut power..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_ManualModeEStopShutdownTimeout_DisplayName">
            <summary>
              Looks up a localized string similar to Manual Mode E-Stop Shutdown Timeout.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_MaxTimeToWaitForAmpPower">
            <summary>
              Looks up a localized string similar to The maximum time (sec) that V+ will wait for the servos to indicate successful power-up after enabling power. A *Timeout enabling high power* will occur if the timeout expires..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_MaxTimeToWaitForAmpPower_DisplayName">
            <summary>
              Looks up a localized string similar to Max Time to Wait for Amp Power.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_NullingTimeout">
            <summary>
              Looks up a localized string similar to The number of seconds the controller will wait for nulling position errors (getting within the COARSE or FINE tolerance on all motors) before declaring a *Time-out nulling error*..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_NullingTimeout_DisplayName">
            <summary>
              Looks up a localized string similar to Nulling Timeout.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_PowerOnToAmpOnDelay">
            <summary>
              Looks up a localized string similar to The delay (sec) from the time high power is turned on until the amplifiers are enabled. This allows the amplifiers time to reset..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.RobotTimingSpecs_PowerOnToAmpOnDelay_DisplayName">
            <summary>
              Looks up a localized string similar to Power-On to Amp-On Delay.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.ScaraKinematicParameters_InnerLinkLength">
            <summary>
              Looks up a localized string similar to Length of the inner link, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.ScaraKinematicParameters_InnerLinkLength_DisplayName">
            <summary>
              Looks up a localized string similar to Inner Link Length.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.ScaraKinematicParameters_OuterLinkLength">
            <summary>
              Looks up a localized string similar to Length of the outer link, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.ScaraKinematicParameters_OuterLinkLength_DisplayName">
            <summary>
              Looks up a localized string similar to Outer Link Length.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.ScaraKinematicParameters_ToolFlangeOffset">
            <summary>
              Looks up a localized string similar to Distance from the robot base to the tool flange surface, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.ScaraKinematicParameters_ToolFlangeOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Tool Flange Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SigmaMotorCalibration_HardStopDetectPositionError">
            <summary>
              Looks up a localized string similar to Position error (cts) at which the hard stop will be detected during teaching..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SigmaMotorCalibration_HardStopDetectPositionError_DisplayName">
            <summary>
              Looks up a localized string similar to Hard-Stop Detect Position Error.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SigmaMotorCalibration_HomeSearchType">
            <summary>
              Looks up a localized string similar to Initial home search type while teaching calibration..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SigmaMotorCalibration_HomeSearchType_DisplayName">
            <summary>
              Looks up a localized string similar to Home Search Type.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SigmaMotorCalibration_MaxSearchDistance">
            <summary>
              Looks up a localized string similar to Maximum hard-stop search distance during teaching..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SigmaMotorCalibration_MaxSearchDistance_DisplayName">
            <summary>
              Looks up a localized string similar to Max Search Distance.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SigmaMotorCalibration_MotorPositionOffset">
            <summary>
              Looks up a localized string similar to Motor position offset from encoder zero to V+ zero..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SigmaMotorCalibration_MotorPositionOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Motor Position Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SigmaMotorCalibration_OffsetFromStopToZero">
            <summary>
              Looks up a localized string similar to Offset from the hard stop to the zero position (cts) during teaching..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SigmaMotorCalibration_OffsetFromStopToZero_DisplayName">
            <summary>
              Looks up a localized string similar to Offset From Stop to Zero.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SigmaMotorCalibration_SaturationTimeDuringCalibration">
            <summary>
              Looks up a localized string similar to *Motor stalled* saturation time (sec) during teaching..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SigmaMotorCalibration_SaturationTimeDuringCalibration_DisplayName">
            <summary>
              Looks up a localized string similar to Saturation Time During Calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SigmaMotorCalibration_SearchSpeed">
            <summary>
              Looks up a localized string similar to Speed and direction (ct/msec) for hard-stop search during teaching..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SigmaMotorCalibration_SearchSpeed_DisplayName">
            <summary>
              Looks up a localized string similar to Search Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Simulation">
            <summary>
              Looks up a localized string similar to 3D Visualization.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SixAxisKinematicParameters_ElbowRadialOffset">
            <summary>
              Looks up a localized string similar to Elbow radial offset, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SixAxisKinematicParameters_ElbowRadialOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Elbow Radial Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SixAxisKinematicParameters_InnerLinkLength">
            <summary>
              Looks up a localized string similar to Length of the inner link, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SixAxisKinematicParameters_InnerLinkLength_DisplayName">
            <summary>
              Looks up a localized string similar to Inner Link Length.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SixAxisKinematicParameters_OuterLinkLength">
            <summary>
              Looks up a localized string similar to Length of the outer link, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SixAxisKinematicParameters_OuterLinkLength_DisplayName">
            <summary>
              Looks up a localized string similar to Outer Link Length.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SixAxisKinematicParameters_ShoulderHeight">
            <summary>
              Looks up a localized string similar to Vertical distance from the base to the horizontal shoulder axis, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SixAxisKinematicParameters_ShoulderHeight_DisplayName">
            <summary>
              Looks up a localized string similar to Shoulder Height.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SixAxisKinematicParameters_ShoulderRadialOffset">
            <summary>
              Looks up a localized string similar to Shoulder radial offset, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SixAxisKinematicParameters_ShoulderRadialOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Shoulder Radial Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SixAxisKinematicParameters_ToolFlangeOffset">
            <summary>
              Looks up a localized string similar to Distance from the wrist center to the tool flange surface, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SixAxisKinematicParameters_ToolFlangeOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Tool Flange Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SixAxisKinematicParameters_WristLateralOffset">
            <summary>
              Looks up a localized string similar to Wrist lateral offset, in mm..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SixAxisKinematicParameters_WristLateralOffset_DisplayName">
            <summary>
              Looks up a localized string similar to Wrist Lateral Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SystemStartupSource_AutoSystemStartupSource">
            <summary>
              Looks up a localized string similar to AUTO Controller Startup.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.SystemStartupSource_ControllerConnectionSystemStartupSource">
            <summary>
              Looks up a localized string similar to Controller Connection.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TipSelection">
            <summary>
              Looks up a localized string similar to Tip Selection.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TrajectoryControl">
            <summary>
              Looks up a localized string similar to Trajectory Control.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TsaMotorCalibration_HardStopDetectPositionError_DisplayName1">
            <summary>
              Looks up a localized string similar to Hard-Stop Detect Position Error.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TsaMotorCalibration_HardStopDetectPositionError1">
            <summary>
              Looks up a localized string similar to Position error (cts) at which the hard stop will be detected during teaching..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TsaMotorCalibration_HomeSearchType">
            <summary>
              Looks up a localized string similar to Initial home search type while teaching calibration..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TsaMotorCalibration_HomeSearchType_DisplayName1">
            <summary>
              Looks up a localized string similar to Home Search Type.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TsaMotorCalibration_MaxSearchDistance">
            <summary>
              Looks up a localized string similar to Maximum hard-stop search distance during teaching..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TsaMotorCalibration_MaxSearchDistance_DisplayName1">
            <summary>
              Looks up a localized string similar to Max Search Distance.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TsaMotorCalibration_MotorPositionOffset">
            <summary>
              Looks up a localized string similar to Motor position offset from encoder zero to V+ zero..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TsaMotorCalibration_MotorPositionOffset_DisplayName1">
            <summary>
              Looks up a localized string similar to Motor Position Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TsaMotorCalibration_OffsetFromStopToZero">
            <summary>
              Looks up a localized string similar to Offset from the hard stop to the zero position (cts) during teaching..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TsaMotorCalibration_OffsetFromStopToZero_DisplayName1">
            <summary>
              Looks up a localized string similar to Offset From Stop to Zero.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TsaMotorCalibration_SaturationTimeDuringCalibration_DisplayName1">
            <summary>
              Looks up a localized string similar to Saturation Time During Calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TsaMotorCalibration_SaturationTimeDuringCalibration1">
            <summary>
              Looks up a localized string similar to *Motor stalled* saturation time (sec) during teaching..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TsaMotorCalibration_SearchSpeed">
            <summary>
              Looks up a localized string similar to Speed and direction (ct/msec) for hard-stop search during teaching..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.TsaMotorCalibration_SearchSpeed_DisplayName1">
            <summary>
              Looks up a localized string similar to Search Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerParameter_Controller">
            <summary>
              Looks up a localized string similar to The controller on which the V+ parameter is located..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerParameter_Controller_DisplayName1">
            <summary>
              Looks up a localized string similar to Controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerParameter_Name">
            <summary>
              Looks up a localized string similar to The name of the V+ parameter..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerParameter_Name_DisplayName">
            <summary>
              Looks up a localized string similar to V+ Parameter.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerPower_CalibrateRobots">
            <summary>
              Looks up a localized string similar to Indicates the system should check for robot calibration status when power is enabled and calibrate, if needed..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerPower_CalibrateRobots_DisplayName">
            <summary>
              Looks up a localized string similar to Automatically Calibrate Robots.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerPower_Controller">
            <summary>
              Looks up a localized string similar to The controller with which to operate..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerPower_Controller_DisplayName">
            <summary>
              Looks up a localized string similar to Controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSignal_Controller">
            <summary>
              Looks up a localized string similar to The controller on which the V+ switch is located..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSignal_Controller_DisplayName">
            <summary>
              Looks up a localized string similar to Controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSignal_Controller_Robot">
            <summary>
              Looks up a localized string similar to Robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSignal_Description">
            <summary>
              Looks up a localized string similar to The description of the I/O point displayed on the I/O panel..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSignal_Description_DisplayName">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSignal_Robot">
            <summary>
              Looks up a localized string similar to The robot which the signal is relative to..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSignal_Signal">
            <summary>
              Looks up a localized string similar to The V+ signal number..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSignal_Signal_DisplayName">
            <summary>
              Looks up a localized string similar to V+ Signal.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSource_Controller">
            <summary>
              Looks up a localized string similar to The controller on which the V+ variable is located..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSource_Controller_DisplayName">
            <summary>
              Looks up a localized string similar to Controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSource_Variable">
            <summary>
              Looks up a localized string similar to The name of the V+ real variable..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSource_Variable_DisplayName">
            <summary>
              Looks up a localized string similar to V+ Variable.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSwitch_Controller">
            <summary>
              Looks up a localized string similar to The controller on which the V+ switch is located..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSwitch_Controller_DisplayName">
            <summary>
              Looks up a localized string similar to Controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSwitch_Name">
            <summary>
              Looks up a localized string similar to The name of the V+ switch..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableNumericControllerSwitch_Name_DisplayName">
            <summary>
              Looks up a localized string similar to V+ Switch.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableSource_VariableNumericControllerParameter">
            <summary>
              Looks up a localized string similar to Controller Parameter.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableSource_VariableNumericControllerPower">
            <summary>
              Looks up a localized string similar to Controller Power And Calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableSource_VariableNumericControllerSignal">
            <summary>
              Looks up a localized string similar to Controller Signal.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableSource_VariableNumericControllerSource">
            <summary>
              Looks up a localized string similar to Controller Real Variable.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableSource_VariableNumericControllerSwitch">
            <summary>
              Looks up a localized string similar to Controller Switch.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableSource_VariableStringControllerString">
            <summary>
              Looks up a localized string similar to Controller String Variable.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableStringControllerString_Controller">
            <summary>
              Looks up a localized string similar to The controller on which the V+ variable is located..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableStringControllerString_Controller_DisplayName">
            <summary>
              Looks up a localized string similar to Controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableStringControllerString_Variable">
            <summary>
              Looks up a localized string similar to The name of the V+ variable..
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.VariableStringControllerString_Variable_DisplayName">
            <summary>
              Looks up a localized string similar to V+ String Variable.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Viper1100_ListingName">
            <summary>
              Looks up a localized string similar to Viper 1100.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Viper1300_ListingName">
            <summary>
              Looks up a localized string similar to Viper 1300.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Viper1700_ListingName">
            <summary>
              Looks up a localized string similar to Viper 1700.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Viper1700D_ListingName">
            <summary>
              Looks up a localized string similar to Viper 1700D.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Viper500_ListingName">
            <summary>
              Looks up a localized string similar to Viper 500.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Viper650_ListingName">
            <summary>
              Looks up a localized string similar to Viper 650.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Viper700_ListingName">
            <summary>
              Looks up a localized string similar to Viper 700.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Viper850_ListingName">
            <summary>
              Looks up a localized string similar to Viper 850.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.Viper900_ListingName">
            <summary>
              Looks up a localized string similar to Viper 900.
            </summary>
        </member>
        <member name="P:Ace.Adept.PropertyGrid.XyztRobot_ListingName">
            <summary>
              Looks up a localized string similar to Generic Cartesian Robot.
            </summary>
        </member>
        <member name="T:Ace.Adept.DesktopText">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.Backup_Title">
            <summary>
              Looks up a localized string similar to Backup.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupButtonBackup">
            <summary>
              Looks up a localized string similar to Backup.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreConfirmRestore">
             <summary>
               Looks up a localized string similar to This operation will replace the files in the controller
            with the version from the backup.
            
            Do you want to continue?.
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreConfirmRestoreDist">
             <summary>
               Looks up a localized string similar to This operation will replace the file in the controller
            with the version from the distribution.
            
            Do you want to continue?.
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreErrorInvalidFile">
             <summary>
               Looks up a localized string similar to The File name &apos;{0}&apos; is not valid.
            
            Do you want skip this file and continue?.
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreErrorNoSelection">
            <summary>
              Looks up a localized string similar to No selection checked.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreFileTypeAll">
            <summary>
              Looks up a localized string similar to All Files.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreFileTypeBackup">
            <summary>
              Looks up a localized string similar to ACE Backup file.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreFileTypeConfig">
            <summary>
              Looks up a localized string similar to ACE Backup Configuration file.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreLabelConfigFile">
            <summary>
              Looks up a localized string similar to Configuration File.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreLabelUtilities">
            <summary>
              Looks up a localized string similar to Utilities.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreMessageBackup">
            <summary>
              Looks up a localized string similar to Backup .
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreMessageCatalog">
            <summary>
              Looks up a localized string similar to Write catalog file.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreNodeVOS">
            <summary>
              Looks up a localized string similar to V+ Operating System.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreRestoreDistCopy">
             <summary>
               Looks up a localized string similar to Copy file :
            From {0}
            To {0}.
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreRestoreDistributionTitle">
            <summary>
              Looks up a localized string similar to Restore from distribution.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreRestoreTitle">
            <summary>
              Looks up a localized string similar to Restore.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupCoreSaveToFileTitle">
            <summary>
              Looks up a localized string similar to Saving files....
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupMessageCompleted">
            <summary>
              Looks up a localized string similar to Backup completed!.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupPickerBlocks">
            <summary>
              Looks up a localized string similar to  Blocks.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupPickerColumnDate">
            <summary>
              Looks up a localized string similar to Date Modified.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupPickerColumnName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupPickerColumnSize">
            <summary>
              Looks up a localized string similar to Size.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupPickerColumnType">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuClose">
            <summary>
              Looks up a localized string similar to &amp;Close.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuDeselect">
            <summary>
              Looks up a localized string similar to Deselect	SPACE.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuDetails">
            <summary>
              Looks up a localized string similar to &amp;Details.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuEdit">
            <summary>
              Looks up a localized string similar to Edit.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuHelp">
            <summary>
              Looks up a localized string similar to Help.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuJob">
            <summary>
              Looks up a localized string similar to Job.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuList">
            <summary>
              Looks up a localized string similar to &amp;List.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuLoad">
            <summary>
              Looks up a localized string similar to &amp;Load Selections.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuMoveUp">
            <summary>
              Looks up a localized string similar to Move Up.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuNew">
            <summary>
              Looks up a localized string similar to &amp;New.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuSave">
            <summary>
              Looks up a localized string similar to &amp;Save Selections.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuSaveAs">
            <summary>
              Looks up a localized string similar to Save Selections &amp;As....
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuSelect">
            <summary>
              Looks up a localized string similar to Select	SPACE.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuStart">
            <summary>
              Looks up a localized string similar to S&amp;tart.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreMenuView">
            <summary>
              Looks up a localized string similar to View.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreTabpageBackup">
            <summary>
              Looks up a localized string similar to &amp;Backup.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreTabpageRestore">
            <summary>
              Looks up a localized string similar to &amp;Restore.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreTitle">
            <summary>
              Looks up a localized string similar to Backup Utility.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreTooltipLoad">
            <summary>
              Looks up a localized string similar to Load Selections.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreTooltipMoveUp">
            <summary>
              Looks up a localized string similar to Up one level.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreTooltipSave">
            <summary>
              Looks up a localized string similar to Save Selections.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreTooltipStart">
            <summary>
              Looks up a localized string similar to Start Operation.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupRestoreTooltipView">
            <summary>
              Looks up a localized string similar to View Files As.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.BackupTab_Title">
            <summary>
              Looks up a localized string similar to Backup.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ButtonCancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ButtonHelp">
            <summary>
              Looks up a localized string similar to Help.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ButtonOK">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.CodeEditorErrorAdeptSightKeyword">
            <summary>
              Looks up a localized string similar to Cannot evaluate expression containing ACE Sight keywords..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmInputDescription">
            <summary>
              Looks up a localized string similar to This test verifies that the digital inputs are in the {0} state..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmOutputButtonAccept">
            <summary>
              Looks up a localized string similar to YES.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmOutputButtonReject">
            <summary>
              Looks up a localized string similar to NO.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmOutputDescription">
            <summary>
              Looks up a localized string similar to This test verifies that the digital outputs can be properly set to the {0} state..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmOutputDimmed">
            <summary>
              Looks up a localized string similar to dimmed.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmOutputIlluminated">
            <summary>
              Looks up a localized string similar to illuminated.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmOutputLabelInfo">
            <summary>
              Looks up a localized string similar to The wizard has turned {0} all digital outputs in the system. Please confirm that all the digital output LEDs on the XIO Termination Block are {1} as depicted in the graphic below..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmOutputQuestion">
            <summary>
              Looks up a localized string similar to Are all the outputs {0}?.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmOutputTitle1">
            <summary>
              Looks up a localized string similar to Confirm Digital Outputs Are On.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmOutputTitle2">
            <summary>
              Looks up a localized string similar to Confirm Digital Outputs Are Off.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmReplaceButtonYesAll">
            <summary>
              Looks up a localized string similar to Yes to All.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmReplaceLabelFilename">
            <summary>
              Looks up a localized string similar to This folder already contains a file with the same name..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmReplaceLabelFilenameSpecific">
            <summary>
              Looks up a localized string similar to This folder already contains a file named &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmReplaceLabelModified">
            <summary>
              Looks up a localized string similar to modified: .
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmReplaceLabelWithThis">
            <summary>
              Looks up a localized string similar to with this one?.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmReplaceLabelWouldYou">
            <summary>
              Looks up a localized string similar to Would you like to replace the existing file.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ConfirmReplaceTitle">
            <summary>
              Looks up a localized string similar to Confirm File Replace.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.CurrentPathButtonGo">
            <summary>
              Looks up a localized string similar to Go.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.CurrentPathLabelAddress">
            <summary>
              Looks up a localized string similar to Address.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.EnterProgramNameLabelName">
            <summary>
              Looks up a localized string similar to Program Name:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.EnterTaskNumberErrorInvalid">
            <summary>
              Looks up a localized string similar to The selected number is not valid..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.EnterTaskNumberLabelTask">
            <summary>
              Looks up a localized string similar to Task Number :.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.EnterTaskNumberTitle">
            <summary>
              Looks up a localized string similar to Enter a Task Number.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ExcludeServerExtensionVariables">
            <summary>
              Looks up a localized string similar to Exclude Server Extension Variables.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileBrowserBlocks">
            <summary>
              Looks up a localized string similar to  Blocks.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileBrowserBytes">
            <summary>
              Looks up a localized string similar to bytes.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileBrowserColumnDate">
            <summary>
              Looks up a localized string similar to Date Modified.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileBrowserColumnName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileBrowserColumnSize">
            <summary>
              Looks up a localized string similar to Size.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileBrowserColumnType">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileBrowserDialogButtonNewFolder">
            <summary>
              Looks up a localized string similar to &amp;Make New Folder.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileBrowserDialogTitle">
            <summary>
              Looks up a localized string similar to Browse For Folder.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileBrowserKiloBytes">
            <summary>
              Looks up a localized string similar to  KB.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileBrowserKiloBytes1">
            <summary>
              Looks up a localized string similar to  kB.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileBrowserMegaBytes">
            <summary>
              Looks up a localized string similar to  MB.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileBrowserMenuFolder">
            <summary>
              Looks up a localized string similar to Folder.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileBrowserMenuNew">
            <summary>
              Looks up a localized string similar to New.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileBrowserMenuRename">
            <summary>
              Looks up a localized string similar to Rename.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileDialogLabelMyComputer">
            <summary>
              Looks up a localized string similar to My Computer.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileDialogLabelMyController">
            <summary>
              Looks up a localized string similar to My Controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileInfoButtonContinue">
            <summary>
              Looks up a localized string similar to &amp;Continue.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileInfoButtonSave">
            <summary>
              Looks up a localized string similar to &amp;Save.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileInfoLabelBy">
            <summary>
              Looks up a localized string similar to By:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileInfoLabelComment">
            <summary>
              Looks up a localized string similar to Comment:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileInfoLabelSavedOn">
            <summary>
              Looks up a localized string similar to Saved on:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileInfoTitle">
            <summary>
              Looks up a localized string similar to Configuration File Information.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManager_Title">
            <summary>
              Looks up a localized string similar to V+ File Manager.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerBlocks">
            <summary>
              Looks up a localized string similar to Blocks.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerFormat1">
            <summary>
              Looks up a localized string similar to Name: {0}   Date Modified: {1}   Size: {2}.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerFormat2">
            <summary>
              Looks up a localized string similar to Name: {0}   Date Modified: {1}.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerFormat3">
            <summary>
              Looks up a localized string similar to Name: {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerKiloBytes">
            <summary>
              Looks up a localized string similar to KB.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuAbout">
            <summary>
              Looks up a localized string similar to &amp;About....
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuBackup">
            <summary>
              Looks up a localized string similar to &amp;Backup Utility.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuCopy">
            <summary>
              Looks up a localized string similar to &amp;Copy	Ctrl+C.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuCut">
            <summary>
              Looks up a localized string similar to Cu&amp;t	Ctrl+X.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuDelete">
            <summary>
              Looks up a localized string similar to &amp;Delete	DEL.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuDetails">
            <summary>
              Looks up a localized string similar to &amp;Details.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuEdit">
            <summary>
              Looks up a localized string similar to &amp;Edit.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuExit">
            <summary>
              Looks up a localized string similar to E&amp;xit	Alt+F4.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuFile">
            <summary>
              Looks up a localized string similar to &amp;File.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuFolder">
            <summary>
              Looks up a localized string similar to Folder.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuHelp">
            <summary>
              Looks up a localized string similar to &amp;Help.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuInvertSelection">
            <summary>
              Looks up a localized string similar to Invert Selection.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuLargeIcons">
            <summary>
              Looks up a localized string similar to &amp;Large Icons.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuList">
            <summary>
              Looks up a localized string similar to Lis&amp;t.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuNew">
            <summary>
              Looks up a localized string similar to &amp;New.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuNFS">
            <summary>
              Looks up a localized string similar to NFS &amp;Mount.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuPaste">
            <summary>
              Looks up a localized string similar to &amp;Paste	Ctrl+V.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuQuickView">
            <summary>
              Looks up a localized string similar to &amp;QuickView.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuRefresh">
            <summary>
              Looks up a localized string similar to Refresh	F5.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuRename">
            <summary>
              Looks up a localized string similar to &amp;Rename.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuSelectAll">
            <summary>
              Looks up a localized string similar to Select &amp;All	Ctrl+A.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuSmallIcons">
            <summary>
              Looks up a localized string similar to &amp;Small Icons.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuTools">
            <summary>
              Looks up a localized string similar to &amp;Tools.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerMenuView">
            <summary>
              Looks up a localized string similar to &amp;View.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerTitle">
            <summary>
              Looks up a localized string similar to ACE File Manager.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerTooltipDelete">
            <summary>
              Looks up a localized string similar to Delete Selected File(s).
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerTooltipMount">
            <summary>
              Looks up a localized string similar to Mount NFS Drive.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerTooltipMoveUp">
            <summary>
              Looks up a localized string similar to Up one level.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerTooltipNew">
            <summary>
              Looks up a localized string similar to Create New Folder.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerTooltipQuickview">
            <summary>
              Looks up a localized string similar to Quick ASCII File View.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerTooltipRefresh">
            <summary>
              Looks up a localized string similar to Refresh entire tree.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FileManagerTooltipView">
            <summary>
              Looks up a localized string similar to View Files As.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreAimDatabase">
            <summary>
              Looks up a localized string similar to AIM Database.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreAimMenuPage">
            <summary>
              Looks up a localized string similar to AIM Menu Page.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreAimModule">
            <summary>
              Looks up a localized string similar to AIM Module.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreAimPlugIn">
            <summary>
              Looks up a localized string similar to AIM Plug-in.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreCalibration">
            <summary>
              Looks up a localized string similar to Calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreCDROM">
            <summary>
              Looks up a localized string similar to CD-ROM.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreCDROMDrive">
            <summary>
              Looks up a localized string similar to CD-ROM Drive.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreConfiguration">
            <summary>
              Looks up a localized string similar to Configuration.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreDataFile">
            <summary>
              Looks up a localized string similar to Data File.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreDesktop">
            <summary>
              Looks up a localized string similar to Desktop.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreFloppy">
            <summary>
              Looks up a localized string similar to Floppy.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreFloppyDrive">
            <summary>
              Looks up a localized string similar to Floppy Drive.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreFolder">
            <summary>
              Looks up a localized string similar to Folder.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreHelpFile">
            <summary>
              Looks up a localized string similar to Help File.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreLibrary">
            <summary>
              Looks up a localized string similar to Library.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreLocalDisc">
            <summary>
              Looks up a localized string similar to Local Disc.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreLocationVariables">
            <summary>
              Looks up a localized string similar to Location Variables.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreMyDocuments">
            <summary>
              Looks up a localized string similar to My Documents.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreNetworkDrive">
            <summary>
              Looks up a localized string similar to Network Drive.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreNFSDrive">
            <summary>
              Looks up a localized string similar to NFS Drive.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCorePCCopy">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCorePCCopyOf">
            <summary>
              Looks up a localized string similar to Copy of .
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCorePCNewFolder">
            <summary>
              Looks up a localized string similar to New Folder.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCorePhysicalDrive">
            <summary>
              Looks up a localized string similar to Physical Drive.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreRAMDisc">
            <summary>
              Looks up a localized string similar to RAM Disc.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreRAMDrive">
            <summary>
              Looks up a localized string similar to RAM Drive.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreRealVariables">
            <summary>
              Looks up a localized string similar to Real Variables.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreRemovable">
            <summary>
              Looks up a localized string similar to Removable.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreRemovableDrive">
            <summary>
              Looks up a localized string similar to Removable Drive.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreSpecData">
            <summary>
              Looks up a localized string similar to SPEC Data.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreStringVariables">
            <summary>
              Looks up a localized string similar to String Variables.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreSystemFile">
            <summary>
              Looks up a localized string similar to System File.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreSystemFolder">
            <summary>
              Looks up a localized string similar to System Folder.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVariables">
            <summary>
              Looks up a localized string similar to Variables.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPAWCFloppy">
            <summary>
              Looks up a localized string similar to Disk&gt;B: AWC Floppy Drive.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPCompactFlash">
            <summary>
              Looks up a localized string similar to Disk&gt;D: Flash Card.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPConfirmDelete">
             <summary>
               Looks up a localized string similar to This operation will remove the selected element(s) from
             the device and cannot be un-done!
            
            Are you sure you want to delete?.
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPCopyFiles">
            <summary>
              Looks up a localized string similar to Copy Files.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPCreateFolder">
            <summary>
              Looks up a localized string similar to Create Folder.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPDelete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPDeletingFile">
            <summary>
              Looks up a localized string similar to Deleting file: .
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPDeletingFolder">
            <summary>
              Looks up a localized string similar to Deleting folder: .
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPErrorCannotMove">
            <summary>
              Looks up a localized string similar to Cannot move {0}: The source and the destination file names are the same..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPErrorFolderName">
             <summary>
               Looks up a localized string similar to The folder name &apos;{0}&apos; is not valid.
            Do you want skip this folder and continue?.
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPErrorInvalidPath">
            <summary>
              Looks up a localized string similar to This is not a valid path.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPErrorName">
             <summary>
               Looks up a localized string similar to The File name &apos;{0}&apos; is not valid.
            Do you want skip this file and continue?.
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPErrorNoName">
            <summary>
              Looks up a localized string similar to All possible names to copy the file {0} are already used..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPFile">
            <summary>
              Looks up a localized string similar to File.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPMessageCopy">
             <summary>
               Looks up a localized string similar to Copy file :
            From {0}
            To {1}.
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVpProgram">
            <summary>
              Looks up a localized string similar to V+ Program.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPSIOFloppy">
            <summary>
              Looks up a localized string similar to Disk&gt;A: SIO Floppy.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.FSCoreVPSIOHardDrive">
            <summary>
              Looks up a localized string similar to Disk&gt;C: SIO Hard Drive.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherAllFiles">
            <summary>
              Looks up a localized string similar to All files.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherCheckboxInputs">
            <summary>
              Looks up a localized string similar to Inputs.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherCheckboxOutputs">
            <summary>
              Looks up a localized string similar to Outputs.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherCheckboxRobot">
            <summary>
              Looks up a localized string similar to Robot Signals.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherCheckboxSoft">
            <summary>
              Looks up a localized string similar to Soft Signals.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherCustomDescriptionColumn">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherCustomFiles">
            <summary>
              Looks up a localized string similar to Custom I/O definition Files.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherCustomIO">
            <summary>
              Looks up a localized string similar to Custom.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherCustomIOColumn">
            <summary>
              Looks up a localized string similar to I/O.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherCustomNameColumn">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherErrorEvaluation">
            <summary>
              Looks up a localized string similar to Evaluation of the expression failed..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherErrorNotCustomFile">
            <summary>
              Looks up a localized string similar to This file is not recognized as an ACE custom I/O definition file..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherErrorNotReal">
            <summary>
              Looks up a localized string similar to The expression must give a result of type REAL..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherGroupboxShow">
            <summary>
              Looks up a localized string similar to Show.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherLabelUnknown">
            <summary>
              Looks up a localized string similar to ???.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherStateOff">
            <summary>
              Looks up a localized string similar to Off.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherStateOn">
            <summary>
              Looks up a localized string similar to On.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherTitle">
            <summary>
              Looks up a localized string similar to I/O Watcher.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherTooltipPlay">
            <summary>
              Looks up a localized string similar to Continuous refresh.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherTooltipRefresh">
            <summary>
              Looks up a localized string similar to Refresh once.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.IOWatcherTooltipStop">
            <summary>
              Looks up a localized string similar to Stop continuous refresh.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerButtonComp">
            <summary>
              Looks up a localized string similar to Comp.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerButtonIncrement">
            <summary>
              Looks up a localized string similar to Increment.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerButtonJoint">
            <summary>
              Looks up a localized string similar to Joint.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerButtonJointN">
            <summary>
              Looks up a localized string similar to J{0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerButtonRotationTheta">
            <summary>
              Looks up a localized string similar to Theta.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerButtonRotationX">
            <summary>
              Looks up a localized string similar to RX.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerButtonRotationY">
            <summary>
              Looks up a localized string similar to RY.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerButtonRotationZ">
            <summary>
              Looks up a localized string similar to RZ.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerButtonSpeed">
            <summary>
              Looks up a localized string similar to Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerButtonTool">
            <summary>
              Looks up a localized string similar to Tool.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerButtonWorld">
            <summary>
              Looks up a localized string similar to World.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerButtonX">
            <summary>
              Looks up a localized string similar to X.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerButtonY">
            <summary>
              Looks up a localized string similar to Y.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerButtonZ">
            <summary>
              Looks up a localized string similar to Z.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerErrorDefineTransform">
            <summary>
              Looks up a localized string similar to To use the &apos;Jog To&apos; mode, you must define transform parameters in the &apos;Location Management&apos; frame..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerErrorDisabled">
            <summary>
              Looks up a localized string similar to Jog disabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerErrorIncremental">
            <summary>
              Looks up a localized string similar to Incremental mode only supported with V+..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerErrorNoRobot">
            <summary>
              Looks up a localized string similar to No robots configured on this controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerErrorNotInComp">
            <summary>
              Looks up a localized string similar to Pendant not in COMP mode?.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerErrorOld">
             <summary>
               Looks up a localized string similar to An older version of V+ has been detected.
            Some functionalities have been disabled..
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerErrorProgramControl">
            <summary>
              Looks up a localized string similar to Robot under program control.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerErrorSelectedRobot">
            <summary>
              Looks up a localized string similar to SelectedRobot must be between 1 and {0}..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerErrorUnknown">
            <summary>
              Looks up a localized string similar to Unknown Error.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerErrorUpgrade">
            <summary>
              Looks up a localized string similar to Upgrade V+ to see current position while jogging..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerErrorVeryOld">
             <summary>
               Looks up a localized string similar to You are running a too old version of V+.
            Jogging is not supported..
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerGroupboxAxis">
            <summary>
              Looks up a localized string similar to Axis.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerGroupboxControl">
            <summary>
              Looks up a localized string similar to Jog Control.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerGroupboxCurrent">
            <summary>
              Looks up a localized string similar to Current Position.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerGroupboxMode">
            <summary>
              Looks up a localized string similar to Mode.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerGroupboxPrecision">
            <summary>
              Looks up a localized string similar to Precision Point Management.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerLabelCartesianHeader">
            <summary>
              Looks up a localized string similar to  X         Y         Z          Yaw      Pitch     Roll.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerLabelFast">
            <summary>
              Looks up a localized string similar to Fast.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerLabelLarge">
            <summary>
              Looks up a localized string similar to Large.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerLabelSlow">
            <summary>
              Looks up a localized string similar to Slow.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerLabelSmall">
            <summary>
              Looks up a localized string similar to Small.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerReady">
            <summary>
              Looks up a localized string similar to Ready.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerTitle">
            <summary>
              Looks up a localized string similar to Jog Pendant.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerTooltipMinus">
            <summary>
              Looks up a localized string similar to Move the axis in the negative direction..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerTooltipPlus">
            <summary>
              Looks up a localized string similar to Move the axis in the positive direction..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerUnitsDegree">
            <summary>
              Looks up a localized string similar to deg.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerUnitsMillimeter">
            <summary>
              Looks up a localized string similar to mm.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerUnitsPercent">
            <summary>
              Looks up a localized string similar to %.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.JoggerWarningMode">
             <summary>
               Looks up a localized string similar to ACE has detected that you are connected to a V+ version that does not report the current mode properly.
            Background update of the mode is now stopped and the display may not always reflect the current mode.
            You can double-click on the warning icon to return to auto-update mode..
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.Joint">
            <summary>
              Looks up a localized string similar to Joint {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsAdvanced">
            <summary>
              Looks up a localized string similar to  (Advanced).
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsFunction">
            <summary>
              Looks up a localized string similar to Function.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsFunctions">
            <summary>
              Looks up a localized string similar to Functions.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsGroupBranch">
            <summary>
              Looks up a localized string similar to Branching and Looping.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsGroupConstants">
            <summary>
              Looks up a localized string similar to System Constants.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsGroupDigitalIO">
            <summary>
              Looks up a localized string similar to Digital I/O.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsGroupGraphics">
            <summary>
              Looks up a localized string similar to Graphical Operations.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsGroupMath">
            <summary>
              Looks up a localized string similar to Logic and Math.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsGroupMotion">
            <summary>
              Looks up a localized string similar to Motion Keywords.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsGroupSystem">
            <summary>
              Looks up a localized string similar to System Operations.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsGroupSystemIO">
            <summary>
              Looks up a localized string similar to System I/O.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsGroupTasks">
            <summary>
              Looks up a localized string similar to Task Operations.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsGroupVariables">
            <summary>
              Looks up a localized string similar to Variable Operations.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsGroupVision">
            <summary>
              Looks up a localized string similar to Vision Operations.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsInstructions">
            <summary>
              Looks up a localized string similar to Instructions.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsMonitorCommand">
            <summary>
              Looks up a localized string similar to Monitor Command.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsMonitorCommands">
            <summary>
              Looks up a localized string similar to Monitor Commands.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsOthers">
            <summary>
              Looks up a localized string similar to Others.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsParameter">
            <summary>
              Looks up a localized string similar to Parameters.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsParameters">
            <summary>
              Looks up a localized string similar to Parameters.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsProgramInstruction">
            <summary>
              Looks up a localized string similar to Program Instruction.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsSPGroupAdeptSight">
            <summary>
              Looks up a localized string similar to ACE Sight.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsSPGroupComm">
            <summary>
              Looks up a localized string similar to Communications.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsSPGroupRobot">
            <summary>
              Looks up a localized string similar to Robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsSPGroupSystem">
            <summary>
              Looks up a localized string similar to System.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsSPGroupVision">
            <summary>
              Looks up a localized string similar to Vision.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsSwitch">
            <summary>
              Looks up a localized string similar to Switch.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsSwitches">
            <summary>
              Looks up a localized string similar to Switches.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsUGroupGeneral">
            <summary>
              Looks up a localized string similar to General-Purpose.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsUGroupNetwork">
            <summary>
              Looks up a localized string similar to Network Utilities.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsUGroupRobot">
            <summary>
              Looks up a localized string similar to Robot/Motion Utilities.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.KeywordDefinitionsUGroupVision">
            <summary>
              Looks up a localized string similar to Vision Utilities.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.LabelUnknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.MenuCopy">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.MenuCut">
            <summary>
              Looks up a localized string similar to Cut.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.MenuDelete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.MenuHelp">
            <summary>
              Looks up a localized string similar to Help.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.MenuLoad">
            <summary>
              Looks up a localized string similar to Load.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.MenuPaste">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.MonitorTerminalTitle">
            <summary>
              Looks up a localized string similar to Monitor Terminal.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.NFSConnectButtonCancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.NFSConnectButtonOK">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.NFSConnectComboList">
            <summary>
              Looks up a localized string similar to {0} - {1} as {2}.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.NFSConnectErrorDuplicate">
            <summary>
              Looks up a localized string similar to The Drive Name {0} is already used to mount {1}..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.NFSConnectErrorInvalid">
            <summary>
              Looks up a localized string similar to The drive name is not valid.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.NFSConnectLabelAddress">
            <summary>
              Looks up a localized string similar to IP Address:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.NFSConnectLabelDescription">
            <summary>
              Looks up a localized string similar to Description:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.NFSConnectLabelDrive">
            <summary>
              Looks up a localized string similar to NFS Drive:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.NFSConnectLabelPath">
            <summary>
              Looks up a localized string similar to NFS Path:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.NFSConnectLabelRecent">
            <summary>
              Looks up a localized string similar to Most Recent Mounts:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.NFSConnectTitle">
            <summary>
              Looks up a localized string similar to Mount NFS Drives.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.No">
            <summary>
              Looks up a localized string similar to No.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.NotConnected">
            <summary>
              Looks up a localized string similar to Not Connected.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerCalibrate">
            <summary>
              Looks up a localized string similar to Calibrate.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerCalibrating">
            <summary>
              Looks up a localized string similar to Calibrating....
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerDisablePower">
             <summary>
               Looks up a localized string similar to Disable
            Power.
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerDryRunMode">
            <summary>
              Looks up a localized string similar to Dry Run Mode.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerEnablePower">
             <summary>
               Looks up a localized string similar to Enable
            Power.
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerEnablingPower">
            <summary>
              Looks up a localized string similar to Enabling Power....
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerEStop">
            <summary>
              Looks up a localized string similar to E-Stop.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerEStopPushed">
            <summary>
              Looks up a localized string similar to E-Stop Pushed.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerFatalError">
            <summary>
              Looks up a localized string similar to Fatal Error.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerMessagePressButton">
            <summary>
              Looks up a localized string similar to Press HIGH POWER button on front panel..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerMessageStandBy">
             <summary>
               Looks up a localized string similar to Stand
            By ....
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerNotCalibrated">
            <summary>
              Looks up a localized string similar to Not calibrated.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerRobotPowerOff">
            <summary>
              Looks up a localized string similar to Robot power OFF.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerRobotPowerOn">
            <summary>
              Looks up a localized string similar to Robot power ON.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerTitle">
            <summary>
              Looks up a localized string similar to Power Control.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerTooltipButton">
            <summary>
              Looks up a localized string similar to Displays the status of the robot and allows the user to change the state of the robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerTooltipState">
            <summary>
              Looks up a localized string similar to Displays the status of the robot..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerTurningOffPower">
            <summary>
              Looks up a localized string similar to Turning off power....
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerControllerUnknownState">
             <summary>
               Looks up a localized string similar to Unknown
            State.
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerMessageButton">
            <summary>
              Looks up a localized string similar to Release the High Power Enable button and wait for light to blink.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerMessageButton2">
            <summary>
              Looks up a localized string similar to Press the High Power Enable button on the Front Panel.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerMessageManual">
            <summary>
              Looks up a localized string similar to Switch the Front Panel Safety Key from MANUAL to AUTO..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerMessageNever">
            <summary>
              Looks up a localized string similar to Fatal error, power can never be enabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerMessageOvertemp">
            <summary>
              Looks up a localized string similar to Front panel DIO overheating detected.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.PowerMessageUnknown">
            <summary>
              Looks up a localized string similar to Unable to enable power due to unknown reason.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ProgramManagerConfirmDelete">
            <summary>
              Looks up a localized string similar to Are you sure you want to delete the {0}: {1} ?.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ProgramManagerTitle">
            <summary>
              Looks up a localized string similar to Program Manager.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.ProgressMsgLabelLong">
            <summary>
              Looks up a localized string similar to This process can take several minutes..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.QuickViewTitle">
            <summary>
              Looks up a localized string similar to {0}  - Quick View.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.RestoreButtonController">
            <summary>
              Looks up a localized string similar to Re-synchronize with values in controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.RestoreButtonRestore">
            <summary>
              Looks up a localized string similar to &amp;Restore.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.RestoreButtonRestoreAll">
            <summary>
              Looks up a localized string similar to Restore all settings.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.RestoreButtonRestorePartial">
            <summary>
              Looks up a localized string similar to Restore only on current node.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.RestoreButtonStartup">
            <summary>
              Looks up a localized string similar to Restore values read when this program was started.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.RestoreGroupboxScope">
            <summary>
              Looks up a localized string similar to Scope.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.RestoreGroupboxSource">
            <summary>
              Looks up a localized string similar to Source.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.RestoreLabelDescription">
            <summary>
              Looks up a localized string similar to This operation updates the configuration settings in this program based on the following choices:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.RestoreMessageCompleted">
            <summary>
              Looks up a localized string similar to Restore completed!.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.RestoreSuccessController">
            <summary>
              Looks up a localized string similar to The configuration values were successfully restored with the current configuration values from the controller..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.RestoreSuccessStartup">
            <summary>
              Looks up a localized string similar to The configuration values were successfully restored with the startup values..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.RestoreTitle">
            <summary>
              Looks up a localized string similar to Restore Configuration.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.StandbyLabelStandby">
            <summary>
              Looks up a localized string similar to Please Stand By....
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.StandbyTitle">
            <summary>
              Looks up a localized string similar to Working ....
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerAIBConnection">
            <summary>
              Looks up a localized string similar to Serial Connection (AIB).
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerConfirmExecute">
             <summary>
               Looks up a localized string similar to Task {0} is already running program {1}.
            
            Do you really want to start program {2} instead?.
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerDebugUsingTitle">
            <summary>
              Looks up a localized string similar to Enter the program name to debug on task {0}:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerDoReturn">
            <summary>
              Looks up a localized string similar to Do @ RETURN.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerErrorInit">
             <summary>
               Looks up a localized string similar to The task manager could not be initialized properly.
            The connection will be closed..
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerErrorLabel">
            <summary>
              Looks up a localized string similar to Error #: .
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerErrorNoTask">
            <summary>
              Looks up a localized string similar to No available task to run the dropped program..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerErrorOverflow">
            <summary>
              Looks up a localized string similar to *Too many program status changes.  Auto aborting all tasks. Please stand by ....
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerErrorRefresh">
            <summary>
              Looks up a localized string similar to Last refresh failed due to a communication error..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerExecuteUsingTitle">
            <summary>
              Looks up a localized string similar to Enter the program name to execute on task {0}:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerKillAllMessage">
            <summary>
              Looks up a localized string similar to Please wait while tasks are stopped....
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerKillAllTitle">
            <summary>
              Looks up a localized string similar to Stopping Tasks.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerMenuCopyStack">
            <summary>
              Looks up a localized string similar to Copy Stack to Clipboard.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerMenuDebug">
            <summary>
              Looks up a localized string similar to Debug Task.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerMenuDebugUsing">
            <summary>
              Looks up a localized string similar to Debug Using ....
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerMenuExecute">
            <summary>
              Looks up a localized string similar to Execute Task.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerMenuExecuteUsing">
            <summary>
              Looks up a localized string similar to Execute Using ....
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerMenuKill">
            <summary>
              Looks up a localized string similar to Kill Task.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerMenuPause">
            <summary>
              Looks up a localized string similar to Pause.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerMenuProceed">
            <summary>
              Looks up a localized string similar to Proceed.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerMenuResetAndDebug">
            <summary>
              Looks up a localized string similar to Reset and Debug.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerMenuRetry">
            <summary>
              Looks up a localized string similar to Retry Failed Step.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerMenuStopAll">
            <summary>
              Looks up a localized string similar to Stop All Tasks.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerPauseMessage">
            <summary>
              Looks up a localized string similar to Please wait while the operation is paused....
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerPauseTitle">
            <summary>
              Looks up a localized string similar to Pausing Operation.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerProgramLabel">
            <summary>
              Looks up a localized string similar to Program.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerSAConnection">
            <summary>
              Looks up a localized string similar to Serial Connection (SA Solo).
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerStackSizeTitle">
            <summary>
              Looks up a localized string similar to Stack size: .
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerStackTitle">
            <summary>
              Looks up a localized string similar to Stack Information for V+ Task: .
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerStepLabel">
            <summary>
              Looks up a localized string similar to Step.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerStepToString">
            <summary>
              Looks up a localized string similar to {0} at step {1}.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerTaskToString1">
            <summary>
              Looks up a localized string similar to Task {0}:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerTaskToString2">
            <summary>
              Looks up a localized string similar to  {1} at step {2}, stack {3:F1}{4}.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerTitle">
            <summary>
              Looks up a localized string similar to Task Manager.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerTooltipCopyStack">
            <summary>
              Looks up a localized string similar to Copy stack to windows clipboard.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerTooltipDisplayActive">
            <summary>
              Looks up a localized string similar to Display only tasks used.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerTooltipDisplayAll">
            <summary>
              Looks up a localized string similar to Display all tasks.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerTooltipExecute">
            <summary>
              Looks up a localized string similar to Execute Task.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerTooltipKill">
            <summary>
              Looks up a localized string similar to Kill Task.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerTooltipPause">
            <summary>
              Looks up a localized string similar to Pause Task.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerTooltipProceed">
            <summary>
              Looks up a localized string similar to Proceed Task.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerTooltipRefresh">
            <summary>
              Looks up a localized string similar to Refresh Task List.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerTooltipRetry">
            <summary>
              Looks up a localized string similar to Retry Step.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerTooltipSelect">
            <summary>
              Looks up a localized string similar to Select Program.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerTooltipStopAll">
            <summary>
              Looks up a localized string similar to Stop All Tasks.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerVplusConnection">
            <summary>
              Looks up a localized string similar to Ethernet Connection.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TaskManagerWarningOverflow">
             <summary>
               Looks up a localized string similar to An overflow of task status change events has occurred.
            This usually occurs if one V+ task is trying to start a second V+
            task that has an error, and if the first V+ task is in an infinite loop.
            ACE automatically stopped all tasks to prevent a lockout condition.
            
            Please select each task to check for the error condition..
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlBreakpoint">
            <summary>
              Looks up a localized string similar to Breakpoint encountered.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlDebugTraceDisabled">
            <summary>
              Looks up a localized string similar to ACE debug trace messages are now disabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlDebugTraceEnabled">
            <summary>
              Looks up a localized string similar to ACE debug trace messages are now enabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlDoCommandCompleted">
            <summary>
              Looks up a localized string similar to DO command complete.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlDoCommandIssued">
            <summary>
              Looks up a localized string similar to DO command issued.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlDryRun">
            <summary>
              Looks up a localized string similar to Program task in Dry.Run.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlErrorAbortAceTask">
            <summary>
              Looks up a localized string similar to Aborting an ACE server task is not allowed..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlErrorAdeptSight">
            <summary>
              Looks up a localized string similar to ACE Sight keywords can only be executed from a program..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlErrorDebug">
            <summary>
              Looks up a localized string similar to This command is not allowed..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlErrorDone">
            <summary>
              Looks up a localized string similar to This command is not allowed..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlErrorMultilinePaste">
            <summary>
              Looks up a localized string similar to For safety, text with more than one line cannot be pasted while controller is waiting for input..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlErrorPaste">
            <summary>
              Looks up a localized string similar to Cannot paste while controller is waiting for key..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlErrorPoint">
            <summary>
              Looks up a localized string similar to This command is not allowed..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlErrorSee">
            <summary>
              Looks up a localized string similar to Direct editing of a program through the monitor is not allowed..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlErrorStatus">
            <summary>
              Looks up a localized string similar to Use of -1 argument not allowed..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlErrorTeach">
            <summary>
              Looks up a localized string similar to This command is not allowed..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlErrorWhereContinuous">
            <summary>
              Looks up a localized string similar to Optional display mode for WHERE command not allowed..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlExampleDimmedText">
            <summary>
              Looks up a localized string similar to This is an example of dimmed text..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlExampleNormalText">
            <summary>
              Looks up a localized string similar to This is an example normal text..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlExampleReverseVideoText">
            <summary>
              Looks up a localized string similar to This is an example of reversed video mode..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlExampleSelectedText">
            <summary>
              Looks up a localized string similar to This is an example of text selection..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlHaltEncountered">
            <summary>
              Looks up a localized string similar to HALT instruction encountered.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlKeywordFilterEnabled">
            <summary>
              Looks up a localized string similar to Keyword filtering is now enabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlKeywordFilteringDisabled">
             <summary>
               Looks up a localized string similar to Keyword filtering is now disabled.
            Be careful, some commands will lockout ACE. :(.
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlMessageDisableWizard">
            <summary>
              Looks up a localized string similar to Wizard Trace Disabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlMessageEnableWizard">
            <summary>
              Looks up a localized string similar to Wizard Trace Enabled.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlPauseEncountered">
            <summary>
              Looks up a localized string similar to PAUSE instruction encountered.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlProgramStatus">
             <summary>
               Looks up a localized string similar to Program State: Task: {0} Status: {1} Task State: {2}
            .
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlReadOnly">
            <summary>
              Looks up a localized string similar to &lt;Read Only mode&gt;.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlSingleStepComplete">
            <summary>
              Looks up a localized string similar to Program Single-Step complete.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlTaskComplete">
            <summary>
              Looks up a localized string similar to Program task complete.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlTaskHalted">
            <summary>
              Looks up a localized string similar to Program task halted.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlTaskStarted">
            <summary>
              Looks up a localized string similar to Program task started.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlTraceMessage">
            <summary>
              Looks up a localized string similar to Trace message encountered.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlUnknownState">
            <summary>
              Looks up a localized string similar to Unknown Task State .
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalControlZeroNotAllowed">
            <summary>
              Looks up a localized string similar to Zero is not allowed in this mode. Use the controller editor to zero program memory..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalMonitorErrorInvalidEscape">
            <summary>
              Looks up a localized string similar to Invalid escape sequence format.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TerminalMonitorTitle">
            <summary>
              Looks up a localized string similar to Terminal Monitor.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TreeFileMenuNewFolder">
            <summary>
              Looks up a localized string similar to New Folder.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.TreeFileMenuRename">
            <summary>
              Looks up a localized string similar to Rename.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserButtonGlobal">
            <summary>
              Looks up a localized string similar to GLOBAL.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserButtonLocal">
            <summary>
              Looks up a localized string similar to LOCAL/ AUTO.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserButtonLocation">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserButtonPrecisionPoint">
            <summary>
              Looks up a localized string similar to Precision Point.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserButtonReal">
            <summary>
              Looks up a localized string similar to Real.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserButtonString">
            <summary>
              Looks up a localized string similar to String.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserColumnName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserColumnValue">
            <summary>
              Looks up a localized string similar to Value.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserControllerSelection">
            <summary>
              Looks up a localized string similar to Controller Selection.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserErrorName">
            <summary>
              Looks up a localized string similar to Please select a variable name..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserGroupboxScope">
            <summary>
              Looks up a localized string similar to Scope.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserGroupboxType">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserInvalid">
            <summary>
              Looks up a localized string similar to Invalid.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserLabelFilter">
            <summary>
              Looks up a localized string similar to Filter:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserLabelProgram">
            <summary>
              Looks up a localized string similar to Program:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserLabelTask">
            <summary>
              Looks up a localized string similar to Task:.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableBrowserTitle">
            <summary>
              Looks up a localized string similar to Variable Browser.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableEditorNotFound">
            <summary>
              Looks up a localized string similar to The selected variable does not appear to be associated with a V+ global variable collection in the workspace..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableManagerLocationFiles">
            <summary>
              Looks up a localized string similar to Location Variable Files.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableManagerRealFiles">
            <summary>
              Looks up a localized string similar to Real Variable Files.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableManagerStringFiles">
            <summary>
              Looks up a localized string similar to String Variable Files.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VariableManagerTitle">
            <summary>
              Looks up a localized string similar to Variable Manager.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VPLinkControlErrorVPlus">
             <summary>
               Looks up a localized string similar to The last communication with V+ generated an error:
            
            {0}.
             </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VpLinkErrorAsynch">
            <summary>
              Looks up a localized string similar to Error {0} at {1}
               .
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VpLinkErrorDeviceM">
            <summary>
              Looks up a localized string similar to Unexpected result from DeviceM.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VpLinkErrorError">
            <summary>
              Looks up a localized string similar to Could not get error information ( {0} )..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VpLinkErrorIpAddress">
            <summary>
              Looks up a localized string similar to Invalid IP address.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VpLinkErrorLock">
            <summary>
              Looks up a localized string similar to Cannot get access to communication channel..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VpLinkErrorResult">
            <summary>
              Looks up a localized string similar to Expected result not present.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VpLinkErrorTimeout">
            <summary>
              Looks up a localized string similar to Timeout waiting for controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VpLinkErrorVariable">
            <summary>
              Looks up a localized string similar to Error retrieving variable.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VpLinkInvalid">
            <summary>
              Looks up a localized string similar to Invalid.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VpLinkUnknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VplusProgramError">
            <summary>
              Looks up a localized string similar to Error: .
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.VPlusProgramSyncError">
            <summary>
              Looks up a localized string similar to An error was detected when syncronizating with the controller: {0}{0}{1}{0}{0}The program editor will be closed. Reopen the program to continue editing..
            </summary>
        </member>
        <member name="P:Ace.Adept.DesktopText.Yes">
            <summary>
              Looks up a localized string similar to Yes.
            </summary>
        </member>
        <member name="T:Ace.Adept.GuiText">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_CannotConnectToLegacyController">
            <summary>
              Looks up a localized string similar to Connection to controller is not supported..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_ConnectionCanceled">
            <summary>
              Looks up a localized string similar to The connection attempt has been stopped..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_ConnectionTimeOut">
            <summary>
              Looks up a localized string similar to The connection with the controller has timed-out.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_ControllerName">
            <summary>
              Looks up a localized string similar to SmartController.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_DisableBeforeChangingAddress">
            <summary>
              Looks up a localized string similar to The address cannot be changed while the controller is connected.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_EncoderNodeNotFound">
            <summary>
              Looks up a localized string similar to External encoder {0} node not found.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_InitializationDelay">
            <summary>
              Looks up a localized string similar to Waiting for reboot of controller....
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_InvalidRobotNumber">
            <summary>
              Looks up a localized string similar to Robot number {0} is invalid and does not exist on the controller..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_MotorNodeNotFound">
            <summary>
              Looks up a localized string similar to Robot {0} motor {1} node not found.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_NoTaskForServer">
            <summary>
              Looks up a localized string similar to No V+ task was available to launch the V+ server.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_NotCommunicating">
            <summary>
              Looks up a localized string similar to Not communicating.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_PingTimeout">
            <summary>
              Looks up a localized string similar to Ping timeout occurred: {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_ResettingServo">
            <summary>
              Looks up a localized string similar to Resetting V+ servo nodes.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_Robot">
            <summary>
              Looks up a localized string similar to Robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_RobotAlreadyAllocated">
            <summary>
              Looks up a localized string similar to Robot {0} already allocated..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_StartCommunicationsMessage_CheckForServer">
            <summary>
              Looks up a localized string similar to Checking for ACE server on controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_StartCommunicationsMessage_CheckingAceFile">
            <summary>
              Looks up a localized string similar to Checking for ACE V+ file.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_StartCommunicationsMessage_ClosingConnection">
            <summary>
              Looks up a localized string similar to Closing the connection to the controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_StartCommunicationsMessage_CreatingSocket">
            <summary>
              Looks up a localized string similar to Creating network socket.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_StartCommunicationsMessage_InitializingRobotSystemVariables">
            <summary>
              Looks up a localized string similar to Reading system robot servo parameters.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_StartCommunicationsMessage_InitializingRobotVariables">
            <summary>
              Looks up a localized string similar to Reading servo parameters for robot &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_StartCommunicationsMessage_LoadingAce">
            <summary>
              Looks up a localized string similar to Loading ACE file on controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_StartCommunicationsMessage_PingingController">
            <summary>
              Looks up a localized string similar to Pinging controller address.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_StartCommunicationsMessage_ReadingMemory">
            <summary>
              Looks up a localized string similar to Reading V+ Memory.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_StartCommunicationsMessage_StartAceOnTask">
            <summary>
              Looks up a localized string similar to Starting ACE on task {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_StartCommunicationsMessage_StartingEmulator">
            <summary>
              Looks up a localized string similar to Starting the eV+ emulator.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_StartCommunicationsMessage_UpdatingAce">
            <summary>
              Looks up a localized string similar to Updating ACE file on controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_StartupError">
            <summary>
              Looks up a localized string similar to V+ server startup error.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_UpgradeControllerFPGA_ProcessingFiles">
            <summary>
              Looks up a localized string similar to Processing File &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_VPlus_AlreadyConnected">
            <summary>
              Looks up a localized string similar to The controller is already connected to a server at {0}.{1}Only one connection is allowed at any given time..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_WaitAceStartup">
            <summary>
              Looks up a localized string similar to Starting ACE server, please wait....
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_WaitingForTasksToStop">
            <summary>
              Looks up a localized string similar to Waiting for V+ tasks to stop..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_WaitInitialization">
            <summary>
              Looks up a localized string similar to Waiting for V+ initialization....
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptController_WaitResponse">
            <summary>
              Looks up a localized string similar to Waiting for V+ response for about 30 seconds....
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerAddressDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to IP Address.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerConnectionStatusDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to Connection Status.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerDataItem_DisplayDescription_ConnectionStatus">
            <summary>
              Looks up a localized string similar to Are communications with the controller established.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerDataItem_DisplayDescription_HostAddress">
            <summary>
              Looks up a localized string similar to The host TCP/IP address for the controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerDataItem_DisplayDescription_IPAddress">
            <summary>
              Looks up a localized string similar to The TCP/IP address of the controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerDataItem_DisplayDescription_MonitorSpeed">
            <summary>
              Looks up a localized string similar to The monitor speed of the controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerDataItem_DisplayDescription_PowerAndCalibration">
            <summary>
              Looks up a localized string similar to The controller high power status.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerDataItem_DisplayDescription_SignalRange">
            <summary>
              Looks up a localized string similar to The current state of the digital signal..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerDataItem_DisplayDescription_VPlusVersion">
            <summary>
              Looks up a localized string similar to The V+ operating system version .
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerDataItem_InputSignalBlockCategory">
            <summary>
              Looks up a localized string similar to Digital Inputs.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerDataItem_OutputSignalBlockCategory">
            <summary>
              Looks up a localized string similar to Digital Outputs.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerDataItem_SoftSignalBlockCategory">
            <summary>
              Looks up a localized string similar to Soft Signals.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerHostAddressDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to Host Address.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerImpl_CannotChangeEncoderConnection">
            <summary>
              Looks up a localized string similar to eV+ encoder count must be changed by editing the configuration file..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerMonitorSpeedDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to Monitor Speed.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerPowerAndCalibrationDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to Power And Calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerProgramTaskDataItem_Category">
            <summary>
              Looks up a localized string similar to V+ Tasks.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerProgramTaskDataItem_DisplayDescription_IPAddress">
            <summary>
              Looks up a localized string similar to The program currently running on the V+ task.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerProgramTaskDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to V+ Task {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerSignalDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to Signal {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AdeptControllerVPlusVersionDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to V+ Version.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AmpACInputRmsVoltage">
            <summary>
              Looks up a localized string similar to AC input (RMS V).
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AmpBusVoltage">
            <summary>
              Looks up a localized string similar to Bus voltage (V).
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AutoStartupItem_Auto">
            <summary>
              Looks up a localized string similar to AUTO.V2.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AutoStartupItem_BeltCalibrations">
            <summary>
              Looks up a localized string similar to Belt Calibrations.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AutoStartupItem_CannotSaveToController">
            <summary>
              Looks up a localized string similar to Unable to save to controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AutoStartupItem_ControllerNotAlive">
            <summary>
              Looks up a localized string similar to Cannot save to controller because it is not connected..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AutoStartupItem_CustomAuto">
            <summary>
              Looks up a localized string similar to AUTO.V2 (defined in workspace).
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AutoStartupItem_NoControllerDefined">
            <summary>
              Looks up a localized string similar to No controller is defined.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AutoStartupItem_NotSavingToController">
            <summary>
              Looks up a localized string similar to Not Saving.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AutoStartupItem_SaveProgramsAndVariables">
            <summary>
              Looks up a localized string similar to Programs/Variables.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AutoStartupItem_Saving">
            <summary>
              Looks up a localized string similar to Saving: .
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AutoStartupItem_Workspace">
            <summary>
              Looks up a localized string similar to Workspace.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AxisGadget_Encoder_ToString">
            <summary>
              Looks up a localized string similar to Encoder {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.AxisGadget_ToString">
            <summary>
              Looks up a localized string similar to Robot {0} Motor {1}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.BaseBoardTemperature">
            <summary>
              Looks up a localized string similar to Base board temperature (°C).
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.DCInputVoltage">
            <summary>
              Looks up a localized string similar to DC input (V).
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.DiagnosticData_AmpTemperature">
            <summary>
              Looks up a localized string similar to Amplifier temperature (°C).
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.DiagnosticData_DutyCycleLevel">
            <summary>
              Looks up a localized string similar to Duty cycle (% limit).
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.DiagnosticData_EncoderTemperature">
            <summary>
              Looks up a localized string similar to Encoder temperature (°C).
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.DiagnosticData_HarmonicDriveLife">
            <summary>
              Looks up a localized string similar to Harmonic Drive Life (Hours).
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.DiagnosticData_HarmonicDriveUsage">
            <summary>
              Looks up a localized string similar to Harmonic Drive usage (%).
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.DiagnosticData_MotorGroup">
            <summary>
              Looks up a localized string similar to Motor {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.DiagnosticData_PeakPositionError">
            <summary>
              Looks up a localized string similar to Peak position error (% soft envelope error).
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.DiagnosticData_PeakTorque">
            <summary>
              Looks up a localized string similar to Peak torque (% max torque).
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.DiagnosticData_PeakVelocity">
            <summary>
              Looks up a localized string similar to Peak velocity (RPM).
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.DiagnosticData_RobotGroup">
            <summary>
              Looks up a localized string similar to Robot {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.DigitalIOGadget_ToString">
            <summary>
              Looks up a localized string similar to Block:{0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Exception_ControllerCat0AndManualMode">
            <summary>
              Looks up a localized string similar to Cannot start V+ server programs. Controller is in manual mode with safety category 0 license..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Exception_ControllerNotConnected">
            <summary>
              Looks up a localized string similar to Controller &apos;{0}&apos; is not connected..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Exception_CouldNotFindNodeOnNetwork">
            <summary>
              Looks up a localized string similar to The servo node was not found on the FireWire network..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Exception_CouldNotFindNodeOnNetworkAfterReboot">
            <summary>
              Looks up a localized string similar to The servo node was not found on the FireWire network after being rebooted..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Exception_EVPlusFileDoesNotExist">
            <summary>
              Looks up a localized string similar to The required eV+ file &apos;{0}&apos; is missing..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Exception_FileBackupFailure">
            <summary>
              Looks up a localized string similar to {0} files could not be backed up. These files might be missing or corrupted..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Exception_IncompleteConfigurationFile_OneDeviceNetSectionExpected">
            <summary>
              Looks up a localized string similar to The configuration file should have one and only one devicenet entry.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Exception_VariableNameIncorrect">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid V+ variable name. .
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.FireWireGadget_NotConfigured">
            <summary>
              Looks up a localized string similar to Not configured ({0}).
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.FirmwareUpdateDialog_SendingFiles">
            <summary>
              Looks up a localized string similar to Sending firmware files to controller.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.FirmwareUpdateDialog_UpgradingFpga">
            <summary>
              Looks up a localized string similar to Upgrading FPGA on node {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.FirmwareUpdateDialog_UpgradingServo">
            <summary>
              Looks up a localized string similar to Upgrading servo code on node {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.ForceSensorGadget_ToString">
            <summary>
              Looks up a localized string similar to :{0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IncrementalMotorCalibration_ToString">
            <summary>
              Looks up a localized string similar to Incremental Motor Calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorOffsetDataItem_Category">
            <summary>
              Looks up a localized string similar to Tip {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorOffsetDataItem_DisplayDescription">
            <summary>
              Looks up a localized string similar to The offset of the tip..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorOffsetDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to Tip {0} - Offset.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorSignalDataItem_Category">
            <summary>
              Looks up a localized string similar to Tip {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorSignalDataItem_DisplayDescription_CloseInputs">
            <summary>
              Looks up a localized string similar to The status of the tip close inputs..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorSignalDataItem_DisplayDescription_CloseOutput">
            <summary>
              Looks up a localized string similar to The status of the tip close outputs..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorSignalDataItem_DisplayDescription_ExtendedInput">
            <summary>
              Looks up a localized string similar to The status of the tip extend inputs..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorSignalDataItem_DisplayDescription_ExtendedOutput">
            <summary>
              Looks up a localized string similar to The status of the tip extend outputs..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorSignalDataItem_DisplayDescription_ReleaseOutputs">
            <summary>
              Looks up a localized string similar to The status of the release outputs..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorSignalDataItem_DisplayName">
            <summary>
              Looks up a localized string similar to Tip {0} - {1}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorSignalDataItem_TimeName">
            <summary>
              Looks up a localized string similar to Tip {0} - {1}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorTimeDataItem_Category">
            <summary>
              Looks up a localized string similar to Tip {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorTimeDataItem_DisplayDescription_ExtendRetractDwell">
            <summary>
              Looks up a localized string similar to Amount of time for gripper to wait when extending or retracting.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorTimeDataItem_DisplayDescription_GripperDwell">
            <summary>
              Looks up a localized string similar to Amount of time for gripper to wait when gripping.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorTimeDataItem_DisplayDescription_ReleaseDwell">
            <summary>
              Looks up a localized string similar to Amount of time for gripper to wait when releasing.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.IODrivenEndEffectorTipEditor_EndEffectorList_TipText">
            <summary>
              Looks up a localized string similar to Tip {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Joint_Base">
            <summary>
              Looks up a localized string similar to Base.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Joint_Elbow">
            <summary>
              Looks up a localized string similar to Elbow.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Joint_NumberedJoint">
            <summary>
              Looks up a localized string similar to Joint {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Joint_Pitch">
            <summary>
              Looks up a localized string similar to Pitch.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Joint_Roll">
            <summary>
              Looks up a localized string similar to Roll.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Joint_Shoulder">
            <summary>
              Looks up a localized string similar to Shoulder.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Joint_Theta">
            <summary>
              Looks up a localized string similar to Theta.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Joint_Tool">
            <summary>
              Looks up a localized string similar to Tool.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Joint_Wrist">
            <summary>
              Looks up a localized string similar to Wrist.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Joint_X">
            <summary>
              Looks up a localized string similar to X.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Joint_Y">
            <summary>
              Looks up a localized string similar to Y.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Joint_Yaw">
            <summary>
              Looks up a localized string similar to Yaw.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Joint_Z">
            <summary>
              Looks up a localized string similar to Z.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Motor">
            <summary>
              Looks up a localized string similar to Motor.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Motor_ToString">
            <summary>
              Looks up a localized string similar to Motor {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.MotorBase_ToString">
            <summary>
              Looks up a localized string similar to Motor {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Robot">
            <summary>
              Looks up a localized string similar to Robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.RobotLocationDataItem_CurrentLocation">
            <summary>
              Looks up a localized string similar to Current Location.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.RobotLocationDataItem_CurrentLocation_Description">
            <summary>
              Looks up a localized string similar to The current location of the robot.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.Secondary_ToString">
            <summary>
              Looks up a localized string similar to Secondary {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.ServoNode_InvalidServoVersion_UpgradeVPlus">
            <summary>
              Looks up a localized string similar to V+ Version must be upgraded to 17.1 or later before the servo can be updated. Please upgrade then retry..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.ServoNode_Unknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.SigmaMotorCalibration_ToString">
            <summary>
              Looks up a localized string similar to Sigma Encoder/Motor Calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.TsaMotorCalibration_ToString">
            <summary>
              Looks up a localized string similar to DASA Encoder/Motor Calibration.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.UnknownMotorCalibration_ToString">
            <summary>
              Looks up a localized string similar to Motor Calibration &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VariableNumericControllerParameter_ParameterNameNotDefined">
            <summary>
              Looks up a localized string similar to Parameter is not defined.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VariableNumericControllerSource_ControllerNotConnected">
            <summary>
              Looks up a localized string similar to Controller is not connected.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VariableNumericControllerSource_ControllerNotDefined">
            <summary>
              Looks up a localized string similar to Controller is not defined.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VariableNumericControllerSource_VariableNameNotDefined">
            <summary>
              Looks up a localized string similar to Variable name is not defined.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VariableNumericControllerSwitch_SwitchNameNotDefined">
            <summary>
              Looks up a localized string similar to Switch is not defined..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusFileSystem_BackingUpSpecs">
            <summary>
              Looks up a localized string similar to Backing up specs to {0}.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusFileSystem_CopyToPC">
            <summary>
              Looks up a localized string similar to Copying &apos;{0}&apos; to PC.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusFileSystem_CopyToVPlus">
            <summary>
              Looks up a localized string similar to Copying &apos;{0}&apos; to V+.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusFileSystem_CreatingCopy">
            <summary>
              Looks up a localized string similar to Creating a copy of the V+ distribution.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusFileSystem_CreatingNewVersion">
            <summary>
              Looks up a localized string similar to Creating the new V+ version.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusFileSystem_PreparingBackup">
            <summary>
              Looks up a localized string similar to Preparing to backup V+.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusFileSystem_PreparingRestore">
            <summary>
              Looks up a localized string similar to Preparing to restore V+.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusFileSystem_RebootingVPlus">
            <summary>
              Looks up a localized string similar to Rebooting V+.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusFileSystem_RemappingMotors">
            <summary>
              Looks up a localized string similar to Remapping motors.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusFileSystem_RestoringSpecs">
            <summary>
              Looks up a localized string similar to Restoring robot and encoder specifications.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusFileSystem_SavingToBootDisk">
            <summary>
              Looks up a localized string similar to Saving specs to boot disk.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusGlobalLocationVariableDataItem_Category">
            <summary>
              Looks up a localized string similar to Location Variables.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusGlobalNumericVariableDataItem_Category">
            <summary>
              Looks up a localized string similar to Real Variables.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusGlobalStringVariableDataItem_Category">
            <summary>
              Looks up a localized string similar to String Variables.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusMemory_ExtractingMemory">
            <summary>
              Looks up a localized string similar to Extracting V+ Memory.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusMemory_ReadingMemory">
            <summary>
              Looks up a localized string similar to Reading Memory Contents.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusModuleEditor_Module">
            <summary>
              Looks up a localized string similar to Module.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusModuleEditor_ModuleNameIsInvalid">
            <summary>
              Looks up a localized string similar to Module Name &apos;{0}&apos; is invalid..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusModuleEditor_Program">
            <summary>
              Looks up a localized string similar to Program.
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusModuleEditor_ProgramAlreadyExists">
            <summary>
              Looks up a localized string similar to The program &apos;{0}&apos; already exists. Cannot be added to the module..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusModuleEditor_ProgramNameIsInvalid">
            <summary>
              Looks up a localized string similar to Program Name &apos;{0}&apos; is invalid..
            </summary>
        </member>
        <member name="P:Ace.Adept.GuiText.VPlusModuleProgram_Abstract">
            <summary>
              Looks up a localized string similar to ABSTRACT:.
            </summary>
        </member>
    </members>
</doc>
